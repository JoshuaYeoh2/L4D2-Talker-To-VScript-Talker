// arcade ============================================================================================================================

function IsShotMannHaruka(query) { return query.worldshotmannharuka > 3; }
function IsShotMannSara(query) { return query.worldshotmannsara > 3; }
function IsShotMannYusuke(query) { return query.worldshotmannyusuke > 3; }
function IsShotMannBlake(query) { return query.worldshotmannblake > 3; }
function IsNotSaidShotMannequinHaruka2(query) { return query.worldsaidshotmannequinharuka2 != 1; }
function IsNotSaidShotMannequinSara2(query) { return query.worldsaidshotmannequinsara != 1; }
function IsNotSaidShotMannequinYusuke2(query) { return query.worldsaidshotmannequinyusuke2 != 1; }
function IsNotSaidShotMannequinBlake2(query) { return query.worldsaidshotmannequinblake2 != 1; }
function Conceptc1m4escapeBlakeCheck(query) { return query.concept == "c1m4escapeBlakeCheck"; }
function Conceptc1m4escapeBlakeCheckFail(query) { return query.concept == "c1m4escapeBlakeCheckFail"; }
function Conceptc1m4escapeBlakeCheckSuccess(query) { return query.concept == "c1m4escapeBlakeCheckSuccess"; }
function IsHarukaActor(query) { return query.harukaactor == 1; }
function IsSaraActor(query) { return query.saraactor == 1; }
function IsBlakeActor(query) { return query.blakeactor == 1; }
function IsYusukeActor(query) { return query.yusukeactor == 1; }
function IsNotSaidharukaharukaes(query) { return query.worldsaidharukaharukaes != 1; }
function Conceptharukaharukaes(query) { return query.concept == "harukaharukaes"; }
function IsSaraElevatorIntro(query) { return query.worldsaraelevatorintro == 1; }
function IsNotYusukeIntroduced(query) { return query.worldyusukeintroduced != 1; }
function IsNotHarukaIntroduced(query) { return query.worldharukaintroduced != 1; }
function IsHarukaIntroduced(query) { return query.worldharukaintroduced == 1; }
function IsNotSaraIntroduced(query) { return query.worldsaraintroduced != 1; }
function IsNotBlakeIntroduced(query) { return query.worldblakeintroduced != 1; }
function _auto_NotC4HarukaInCover(query) { return query.world_auto_c4harukaincover < 1; }
function _auto_NotC4YusukeInCover(query) { return query.world_auto_c4yusukeincover < 1; }
function _auto_NotC4BlakeInCover(query) { return query.world_auto_c4blakeincover < 1; }
function _auto_NotC4SaraInCover(query) { return query.world_auto_c4saraincover < 1; }
function _auto_NotCaneExitedHaruka(query) { return query.world_auto_caneexitedharuka < 1; }
function _auto_NotCaneExitedYusuke(query) { return query.world_auto_caneexitedyusuke < 1; }
function _auto_NotCaneExitedBlake(query) { return query.world_auto_caneexitedblake < 1; }
function _auto_NotCaneExitedSara(query) { return query.world_auto_caneexitedsara < 1; }
function _auto_NotHarukaAngry(query) { return query.world_auto_harukaangry < 1; }
function _auto_NotHarukaFoodBreak(query) { return query.world_auto_harukafoodbreak < 1; }
function _auto_NotHarukaHappy(query) { return query.world_auto_harukahappy < 1; }
function _auto_IsHarukaInCane(query) { return query.world_auto_harukaincane == 1; }
function _auto_NotHarukaInCane(query) { return query.world_auto_harukaincane < 1; }
function _auto_IsHarukaWavWindow(query) { return query.world_auto_harukawavwindow == 1; }
function _auto_IsYusukeInCane(query) { return query.world_auto_yusukeincane == 1; }
function _auto_NotYusukeInCane(query) { return query.world_auto_yusukeincane < 1; }
function _auto_IsYusukeWavWindow(query) { return query.world_auto_yusukewavwindow == 1; }
function _auto_NotLastSurvivorTalkedHaruka(query) { return query.world_auto_lastsurvivortalkedharuka < 1; }
function _auto_NotLastSurvivorTalkedYusuke(query) { return query.world_auto_lastsurvivortalkedyusuke < 1; }
function _auto_NotLastSurvivorTalkedBlake(query) { return query.world_auto_lastsurvivortalkedblake < 1; }
function _auto_NotLastSurvivorTalkedSara(query) { return query.world_auto_lastsurvivortalkedsara < 1; }
function _auto_IsBlakeInCane(query) { return query.world_auto_blakeincane == 1; }
function _auto_NotBlakeInCane(query) { return query.world_auto_blakeincane < 1; }
function _auto_IsBlakeWavWindow(query) { return query.world_auto_blakewavwindow == 1; }
function _auto_IsSaraInCane(query) { return query.world_auto_saraincane == 1; }
function _auto_NotSaraInCane(query) { return query.world_auto_saraincane < 1; }
function _auto_IsSaraWavWindow(query) { return query.world_auto_sarawavwindow == 1; }
function _auto_IsHarukaInWitchville(query) { return query.world_auto_harukainwitchville == 1; }
function _auto_IsYusukeInWitchville(query) { return query.world_auto_yusukeinwitchville == 1; }
function _auto_IsBlakeInWitchville(query) { return query.world_auto_blakeinwitchville == 1; }
function _auto_IsSaraInWitchville(query) { return query.world_auto_sarainwitchville == 1; }
function _auto_NotHarukaInWitchville(query) { return query.world_auto_harukainwitchville < 1; }
function _auto_NotYusukeInWitchville(query) { return query.world_auto_yusukeinwitchville < 1; }
function _auto_NotBlakeInWitchville(query) { return query.world_auto_blakeinwitchville < 1; }
function _auto_NotSaraInWitchville(query) { return query.world_auto_sarainwitchville < 1; }
function _auto_HarukaIsPressing(query) { return query.world_auto_harukapressing == 1; }
function _auto_YusukeIsPressing(query) { return query.world_auto_yusukepressing == 1; }
function _auto_BlakeIsPressing(query) { return query.world_auto_blakepressing == 1; }
function _auto_SaraIsPressing(query) { return query.world_auto_sarapressing == 1; }
function _auto_C5M3BlakeReacted(query) { return query.world_auto_c5m3blakereacted == 1; }
function _auto_IsTalkingHaruka(query) { return query.world_auto_talkingharuka == 1; }
function _auto_IsTalkingYusuke(query) { return query.world_auto_talkingyusuke == 1; }
function _auto_IsTalkingBlake(query) { return query.world_auto_talkingblake == 1; }
function _auto_IsTalkingSara(query) { return query.world_auto_talkingsara == 1; }
function _auto_NotTimerLockHaruka(query) { return query.world_auto_timerlockharuka < 1; }
function _auto_NotTimerLockYusuke(query) { return query.world_auto_timerlockyusuke < 1; }
function _auto_NotTimerLockBlake(query) { return query.world_auto_timerlockblake < 1; }
function _auto_NotTimerLockSara(query) { return query.world_auto_timerlocksara < 1; }
function _auto_YusukeSawC6M3Bill(query) { return query.world_auto_yusukec6m3bill == 1; }
function _auto_HarukaSawC6M3Bill(query) { return query.world_auto_harukac6m3bill == 1; }
function _auto_BlakeSawC6M3Bill(query) { return query.world_auto_blakec6m3bill == 1; }
function IsNotTalkHaruka(query) { return query.talkharuka == 1; }
function IsTalkHaruka(query) { return query.talkharuka != 1; }
function IsNotTalkYusuke(query) { return query.talkyusuke == 1; }
function IsTalkYusuke(query) { return query.talkyusuke != 1; }
function IsNotTalkSara(query) { return query.talksara == 1; }
function IsTalkSara(query) { return query.talksara != 1; }
function IsNotTalkBlake(query) { return query.talkblake == 1; }
function IsTalkBlake(query) { return query.talkblake != 1; }
function IsWorldTalkHaruka(query) { return query.worldtalkharuka != 1; }
function IsWorldTalkBlake(query) { return query.worldtalkblake != 1; }
function IsWorldTalkSara(query) { return query.worldtalksara != 1; }
function IsWorldTalkYusuke(query) { return query.worldtalkyusuke != 1; }
function IsSaraNotAlive(query) { return query.issaraalive != 1; }
function IsBlakeNotAlive(query) { return query.isblakealive != 1; }
function IsHarukaNotAlive(query) { return query.isharukaalive != 1; }
function IsYusukeNotAlive(query) { return query.isyusukealive != 1; }
function IsSaraAlive(query) { return query.issaraalive == 1; }
function IsBlakeAlive(query) { return query.isblakealive == 1; }
function IsHarukaAlive(query) { return query.isharukaalive == 1; }
function IsYusukeAlive(query) { return query.isyusukealive == 1; }
function IsSmallTownBarricadeBlake(query) { return query.worldsmalltownbarricadeblake != 1; }
function IsSmallTownBarricadeYusuke(query) { return query.worldsmalltownbarricadeyusuke != 1; }
function IsSmallTownBarricadeSara(query) { return query.worldsmalltownbarricadesara != 1; }
function IsYusukeNear200(query) { return query.disttoyusuke < 200; }
function IsYusukeNear400(query) { return query.disttoyusuke < 400; }
function IsYusukeNear800(query) { return query.disttoyusuke < 800; }
function IsYusukeFar400(query) { return query.disttoyusuke >= 400; }
function IsHarukaNear125(query) { return query.disttoharuka < 125; }
function IsHarukaNear200(query) { return query.disttoharuka < 200; }
function IsHarukaNear400(query) { return query.disttoharuka < 400; }
function IsHarukaNear800(query) { return query.disttoharuka < 800; }
function IsHarukaFar400(query) { return query.disttoharuka >= 400; }
function IsSaraNear200(query) { return query.disttosara < 200; }
function IsSaraNear400(query) { return query.disttosara < 400; }
function IsSaraNear800(query) { return query.disttosara < 800; }
function IsSaraFar400(query) { return query.disttosara >= 400; }
function IsBlakeNear200(query) { return query.disttoblake < 200; }
function IsBlakeNear300(query) { return query.disttoblake < 300; }
function IsBlakeNear400(query) { return query.disttoblake < 400; }
function IsBlakeNear400Weight0(query) { return query.disttoblake < 400; }
function IsBlakeNear800(query) { return query.disttoblake < 800; }
function IsBlakeFar400(query) { return query.disttoblake >= 400; }
function IsHarukaFar1000(query) { return query.disttoharuka > 600; }
function IsSaraFar1000(query) { return query.disttosara > 600; }
function IsBlakeFar1000(query) { return query.disttoblake > 600; }
function IsYusukeFar1000(query) { return query.disttoyusuke > 600; }
function IsNotSaidFaultFriendlyFireHaruka(query) { return query.worldsaidfaultfriendlyfireharuka != 1; }
function IsSaidFaultFriendlyFireHaruka(query) { return query.worldsaidfaultfriendlyfireharuka == 1; }
function IsNotSaidFaultFriendlyFireBlake(query) { return query.worldsaidfaultfriendlyfireblake != 1; }
function IsSaidFaultFriendlyFireBlake(query) { return query.worldsaidfaultfriendlyfireblake == 1; }
function IsNotSaidFaultFriendlyFireYusuke(query) { return query.worldsaidfaultfriendlyfireyusuke != 1; }
function IsSaidFaultFriendlyFireYusuke(query) { return query.worldsaidfaultfriendlyfireyusuke == 1; }
function IsNotSaidFaultFriendlyFireSara(query) { return query.worldsaidfaultfriendlyfiresara != 1; }
function IsSaidFaultFriendlyFireSara(query) { return query.worldsaidfaultfriendlyfiresara == 1; }
function IsShotTeammateHaruka(query) { return query.worldshotteammateharuka == 1; }
function IsNotShotTeammateHaruka(query) { return query.worldshotteammateharuka != 1; }
function IsShotTeammateYusuke(query) { return query.worldshotteammateyusuke == 1; }
function IsNotShotTeammateYusuke(query) { return query.worldshotteammateyusuke != 1; }
function IsShotTeammateBlake(query) { return query.worldshotteammateblake == 1; }
function IsNotShotTeammateBlake(query) { return query.worldshotteammateblake != 1; }
function IsShotTeammateSara(query) { return query.worldshotteammatesara == 1; }
function IsNotShotTeammateSara(query) { return query.worldshotteammatesara != 1; }
function IsBlakeCrybaby(query) { return query.worldblakecrying == 1; }
function WhoPutColaHaruka(query) { return query.worldwhoputcola == "Haruka"; }
function WhoPutColaYusuke(query) { return query.worldwhoputcola == "Yusuke"; }
function WhoPutColaBlake(query) { return query.worldwhoputcola == "Blake"; }
function WhoPutColaSara(query) { return query.worldwhoputcola == "Sara"; }
function PanicEventHaruka(query) { return query.whodidit == "Haruka"; }
function PanicEventYusuke(query) { return query.whodidit == "Yusuke"; }
function PanicEventBlake(query) { return query.whodidit == "Blake"; }
function PanicEventSara(query) { return query.whodidit == "Sara"; }
function IsYusuke(query) { return query.who == "Yusuke"; }
function IsHaruka(query) { return query.who == "Haruka"; }
function IsSara(query) { return query.who == "Sara"; }
function IsBlake(query) { return query.who == "Blake"; }
function IsTriggeredByYusuke(query) { return query.triggeredby == "Yusuke"; }
function IsTriggeredByHaruka(query) { return query.triggeredby == "Haruka"; }
function IsTriggeredBySara(query) { return query.triggeredby == "Sara"; }
function IsTriggeredByBlake(query) { return query.triggeredby == "Blake"; }
function IsDeadYusuke(query) { return query.deadcharacter == "Yusuke"; }
function IsDeadHaruka(query) { return query.deadcharacter == "Haruka"; }
function IsDeadSara(query) { return query.deadcharacter == "Sara"; }
function IsDeadBlake(query) { return query.deadcharacter == "Blake"; }
function IsNotDeadYusuke(query) { return query.deadcharacter != "Yusuke"; }
function IsNotDeadHaruka(query) { return query.deadcharacter != "Haruka"; }
function IsNotDeadSara(query) { return query.deadcharacter != "Sara"; }
function IsNotDeadBlake(query) { return query.deadcharacter != "Blake"; }
function SubjectIsHaruka(query) { return query.subject == "Haruka"; }
function SubjectIsYusuke(query) { return query.subject == "Yusuke"; }
function SubjectIsSara(query) { return query.subject == "Sara"; }
function SubjectIsBlake(query) { return query.subject == "Blake"; }
function SubjectIsNotHaruka(query) { return query.subject != "Haruka"; }
function SubjectIsNotYusuke(query) { return query.subject != "Yusuke"; }
function SubjectIsNotSara(query) { return query.subject != "Sara"; }
function SubjectIsNotBlake(query) { return query.subject != "Blake"; }
function FromIsHaruka(query) { return query.from == "Haruka"; }
function FromIsYusuke(query) { return query.from == "Yusuke"; }
function FromIsSara(query) { return query.from == "Sara"; }
function FromIsBlake(query) { return query.from == "Blake"; }
function FromIsNotHaruka(query) { return query.from != "Haruka"; }
function FromIsNotYusuke(query) { return query.from != "Yusuke"; }
function FromIsNotSara(query) { return query.from != "Sara"; }
function FromIsNotBlake(query) { return query.from != "Blake"; }
function Iswitch_aggro_onHaruka(query) { return query.witch_aggro_on == "Haruka"; }
function Iswitch_aggro_onYusuke(query) { return query.witch_aggro_on == "Yusuke"; }
function Iswitch_aggro_onSara(query) { return query.witch_aggro_on == "Sara"; }
function Iswitch_aggro_onBlake(query) { return query.witch_aggro_on == "Blake"; }
function IsNotSaidBeenJockeyedHaruka(query) { return query.worldsaidbeenjockeyedharuka != 1; }
function IsNotSaidBeenJockeyedYusuke(query) { return query.worldsaidbeenjockeyedyusuke != 1; }
function IsNotSaidBeenJockeyedBlake(query) { return query.worldsaidbeenjockeyedblake != 1; }
function IsNotSaidBeenJockeyedSara(query) { return query.worldsaidbeenjockeyedsara != 1; }
function IsSaidBeenJockeyedHaruka(query) { return query.worldsaidbeenjockeyedharuka == 1; }
function IsSaidBeenJockeyedYusuke(query) { return query.worldsaidbeenjockeyedyusuke == 1; }
function IsSaidBeenJockeyedBlake(query) { return query.worldsaidbeenjockeyedblake == 1; }
function IsSaidBeenJockeyedSara(query) { return query.worldsaidbeenjockeyedsara == 1; }
function IsNotSaidBlakePounced(query) { return query.worldsaidblakepounced != 1; }
function IsNotSaidHarukaPounced(query) { return query.worldsaidharukapounced != 1; }
function IsNotSaidSaraPounced(query) { return query.worldsaidsarapounced != 1; }
function IsNotSaidYusukePounced(query) { return query.worldsaidyusukepounced != 1; }
function IsBlakeAlsoWarn(query) { return query.worldblakealsowarn == 1; }
function IsNotYusukeInsultedHarukaC1(query) { return query.worldyusukeinsultedharuka != 1; }
function IsSaidC1M3HarukaFoodCourt(query) { return query.worldsaidc1m3harukafoodcourt == 1; }
function ConceptSaraSuggestsCrane(query) { return query.concept == "SaraSuggestsCrane"; }
function ConceptHarukaSuggestsCrane(query) { return query.concept == "HarukaSuggestsCrane"; }
function ConceptLaughHaruka(query) { return query.concept == "LaughHaruka"; }
function ConceptLaughSara(query) { return query.concept == "LaughSara"; }
function ConceptBlakeInterrupt(query) { return query.concept == "BlakeInterrupt"; }
function ConceptYusukeC1Attitude(query) { return query.concept == "YusukeC1Attitude"; }
function BlakeNotTall(query) { return query.worldblaketalljoke == 1; }
function NotHarukaMadAtRiders(query) { return query.worldharukamadatriders < 1; }
function HarukaMadAtRiders(query) { return query.worldharukamadatriders == 1; }
function YusukeOCD(query) { return query.worldyusukeocd != 1; }
function ConceptC13M1Intro2Blake(query) { return query.concept == "C13M1Intro2Blake"; }
function C13M1BlakeNotPayusukeing(query) { return query.worldc13m1blakepayusukeing < 1; }
function IsNotSrcGrp_ELLISSTORYINIT(query) { return query.worldsrcgrp_blakestoryinit < 1; }
function IsNotSrcGrp_ELLISSTORY(query) { return query.worldsrcgrp_blakestory < 1; }
function Concept_C2M2_HarukaApocolypse(query) { return query.concept == "_C2M2_HarukaApocolypse"; }
function Concept_C1M1_ElevatorHello3AliveYusukeIntro1(query) { return query.concept == "_C1M1_ElevatorHello3AliveYusukeIntro1"; }
function Concept_C1M1_ElevatorHello3AliveYusukeIntro2(query) { return query.concept == "_C1M1_ElevatorHello3AliveYusukeIntro2"; }
function Concept_C1M1_ElevatorHello3AliveSaraIntro(query) { return query.concept == "_C1M1_ElevatorHello3AliveSaraIntro"; }
function Concept_C1M1_ElevatorHello2AliveYusukeIntro1(query) { return query.concept == "_C1M1_ElevatorHello2AliveYusukeIntro1"; }
function Concept_C1M1_ElevatorHello2AliveYusukeIntro2(query) { return query.concept == "_C1M1_ElevatorHello2AliveYusukeIntro2"; }
function ConceptPlayer_CoverMeC1RHaruka1(query) { return query.concept == "Player.CoverMeC1RHaruka1"; }
function ConceptPlayer_CoverMeC1RHaruka2(query) { return query.concept == "Player.CoverMeC1RHaruka2"; }
function ConceptC3M4ButtonAnswerBlake(query) { return query.concept == "C3M4ButtonAnswerBlake"; }
function ConceptBlakeStoryReac01(query) { return query.concept == "BlakeStoryReac01"; }
function ConceptPlayer_YusukeGunOwnership(query) { return query.concept == "Player.YusukeGunOwnership"; }
function ConceptPlayer_WhinyYusuke(query) { return query.concept == "Player.WhinyYusuke"; }
function ConceptC3M4Button104Blake(query) { return query.concept == "C3M4Button104Blake"; }
function ConceptC6M2BlakeStoryStart1(query) { return query.concept == "C6M2BlakeStoryStart1"; }
function ConceptC6M3BlakeBridgeStory1(query) { return query.concept == "C6M3BlakeBridgeStory1"; }
function ConceptC6M3BlakeBridgeStory1a(query) { return query.concept == "C6M3BlakeBridgeStory1a"; }
function ConceptChargerBeatsYusuke(query) { return query.concept == "ChargerBeatsYusuke"; }
function ConceptWorldC6M3_ByBridge01Blake(query) { return query.concept == "WorldC6M3_ByBridge01Blake"; }
// function fromset1(query) { return DirectorScript.FromIsHaruka(query) || DirectorScript.FromIsAnOrator(query); }
function IsBlakeInLoveC6M1(query) { return query.worldblakeinlovec6m1 == 1; }
function HarukaCake(query) { return query.worldharukacake == 1; }
function IsDonorHaruka(query) { return query.itemdonor == "Haruka"; }
function IsDonorYusuke(query) { return query.itemdonor == "Yusuke"; }
function IsDonorBlake(query) { return query.itemdonor == "Blake"; }
function IsDonorSara(query) { return query.itemdonor == "Sara"; }
function IsNotDonorHaruka(query) { return query.itemdonor != "Haruka"; }
function IsNotDonorYusuke(query) { return query.itemdonor != "Yusuke"; }
function IsNotDonorBlake(query) { return query.itemdonor != "Blake"; }
function IsNotDonorSara(query) { return query.itemdonor != "Sara"; }
// function hasdonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorHaruka(query) || DirectorScript.IsDonorYusuke(query) || DirectorScript.IsDonorBlake(query) || DirectorScript.IsDonorSara(query) || DirectorScript.IsDonorUnknown(query); }
function IsHarukaAVampire(query) { return query.worldc6m1_harukaisavampire == 1; }
function IsSaraAVampire(query) { return query.worldc6m1_saraisavampire == 1; }
function IsSaidOpenedGate1BlameBlake(query) { return query.worldsaidopenedgate1blameblake == 1; }
function IsNotSaidBlakeBridgeStoryStart(query) { return query.worldsaidblakebridgestorystart != 1; }
function IsEndBlakeBridgeStoryStart(query) { return query.worldendblakebridgestorystart == 1; }
// function paniceventds(query) { return DirectorScript.PanicEventHaruka(query) || DirectorScript.PanicEventYusuke(query) || DirectorScript.PanicEventBlake(query) || DirectorScript.PanicEventSara(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// mike ============================================================================================================================

function ConceptBlockChurchGuyMikeNo1(query) { return query.concept == "ConceptBlockChurchGuyMikeNo1"; }
// function ConceptBlock959(query) { return query.concept == "MikeWhoAreYou"; }
function MikeNotPickedUpItem(query) { return query.mikepickedupitem != 1; }
function IsMikeFriendlyFire(query) { return query.worldmikefriendlyfire == 1; }
function IsNotMikeFriendlyFire(query) { return query.worldmikefriendlyfire != 1; }
function IsNotMikeFriendlyFireFrancis(query) { return query.worldmikefriendlyfirefrancis != 1; }
function IsNotAskedForCoverMike(query) { return query.mikeaskforcover != 1; }
function IsNotSaidBattleStationsMike(query) { return query.worldsaidbattlestationsmike != 1; }
function IsNotSaidBeenJockeyedMike(query) { return query.saidbeenjockeyedmike != 1; }
function MikeNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function _auto_NotC4MikeInCover(query) { return query.world_auto_c4mikeincover < 1; }
function _auto_NotLastSurvivorTalkedMike(query) { return query.world_auto_lastsurvivortalkedmike < 1; }
function _auto_IsMikeInCane(query) { return query.world_auto_mikeincane == 1; }
function _auto_NotMikeInCane(query) { return query.world_auto_mikeincane < 1; }
function _auto_IsMikeWavWindow(query) { return query.world_auto_mikewavwindow == 1; }
function _auto_MikeIsPressing(query) { return query.world_auto_mikepressing == 1; }
function _auto_IsTalkingMike(query) { return query.world_auto_talkingmike == 1; }
function _auto_NotTimerLockMike(query) { return query.world_auto_timerlockmike < 1; }
function _auto_NotC6M3Mike(query) { return query.world_auto_c6m3mike < 1; }
function _auto_SawC6M3Mike(query) { return query.world_auto_c6m3mike == 1; }
function _auto_SaidC6M3Mike(query) { return query.world_auto_c6m3mike == 2; }
function _auto_GamblerSawC6M3Mike(query) { return query.world_auto_gamblerc6m3mike == 1; }
function _auto_CoachSawC6M3Mike(query) { return query.world_auto_coachc6m3mike == 1; }
function _auto_MechanicSawC6M3Mike(query) { return query.world_auto_mechanicc6m3mike == 1; }
function _auto_NotC7M3PressingMike(query) { return query.world_auto_c7m3pressingmike < 1; }
function _auto_NotC7M3ToBridgeMike(query) { return query.world_auto_c7m3tobridgemike < 1; }
function IsNotSaidFaultFriendlyFireMike(query) { return query.worldsaidfaultfriendlyfiremike != 1; }
function IsSaidFaultFriendlyFireMike(query) { return query.worldsaidfaultfriendlyfiremike == 1; }
function IsShotTeammateMike(query) { return query.worldshotteammatemike == 1; }
function IsNotShotTeammateMike(query) { return query.worldshotteammatemike != 1; }
// function IsNotSaidpathc2m1_mikeboard(query) { return query.worldsaidpathc2m1_mikeboard != 1; }
// function Ispathc2m1_mikeboard(query) { return query.subject == "pathc2m1_mikeboard"; }
// function Concept_C2M1Mikeboard(query) { return query.concept == "_C2M1Mikeboard"; }
// function Concept_C2M1Mikeboard01(query) { return query.concept == "_C2M1Mikeboard01"; }
function IsCrashFinalePressingMike(query) { return query.worldcrashfinalepressingmike == 1; }
function NotNagCrashMike(query) { return query.worldnagcrashmike < 1; }
function ConceptC7M3FinalSpeakMike(query) { return query.concept == "C7M3FinalSpeakMike"; }
function NotSacrificedMike(query) { return query.worldsacrificed != "Mike"; }
function SacrificedMike(query) { return query.worldsacrificed == "Mike"; }
function IsNotTalkMike(query) { return query.talkmike == 1; }
function IsTalkMike(query) { return query.talkmike != 1; }
function IsWorldTalkMike(query) { return query.worldtalkmike != 1; }
function IsMikeAlive(query) { return query.ismikealive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsTeenGirlAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsMikeAlive(query); }
function NotMikeAlive(query) { return query.ismikealive == 0; }
function IsMikeNear200(query) { return query.disttomike < 200; }
function IsMikeNear400(query) { return query.disttomike < 400; }
function IsMikeNear500(query) { return query.disttomike < 500; }
function IsMikeNear800(query) { return query.disttomike < 800; }
function IsMikeFar400(query) { return query.disttomike >= 400; }
function IsMikeFar1000(query) { return query.disttomike > 600; }
function IsMike(query) { return query.who == "Mike"; }
function IsDeadMike(query) { return query.deadcharacter == "Mike"; }
function IsTeam4Mike(query) { return query.name == "silver_mike"; }
function SubjectIsMike(query) { return query.subject == "Mike"; }
function SubjectIsNotMike(query) { return query.subject != "Mike"; }
function FromIsMike(query) { return query.from == "Mike"; }
function FromIsNotMike(query) { return query.from != "Mike"; }
function Iswitch_aggro_onMike(query) { return query.witch_aggro_on == "Mike"; }
function IsNotSaidBeenJockeyedMike(query) { return query.worldsaidbeenjockeyedmike != 1; }
function IsDonorMike(query) { return query.itemdonor == "Mike"; }
function IsNotDonorMike(query) { return query.itemdonor != "Mike"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorMike(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsWorldC6M3_Mike(query) { return query.subject == "WorldC6M3_Mike"; }
function ConceptPlayerSuggestHealthMike(query) { return query.concept == "PlayerSuggestHealthMike"; }
function IsSmallTownBarricadeMike(query) { return query.worldsmalltownbarricademike != 1; }
function PanicEventMike(query) { return query.whodidit == "Mike"; }
function IsTriggeredByMike(query) { return query.triggeredby == "Mike"; }
function IsNotSaidMikePounced(query) { return query.worldsaidmikepounced != 1; }
function IsSmallTownBarricadeMike(query) { return query.worldsmalltownbarricademike != 1; }
function PanicEventMike(query) { return query.whodidit == "Mike"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventMike(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }
function IsTriggeredByMike(query) { return query.triggeredby == "Mike"; }
function IsNotSaidMikePounced(query) { return query.worldsaidmikepounced != 1; }

// cliffe ============================================================================================================================

function IsShotMannCliffe(query) { return query.worldshotmanncliffe > 3; }
function IsNotSaidShotMannequinCliffe2(query) { return query.worldsaidshotmannequincliffe2 != 1; }
function IsCliffeActor(query) { return query.cliffeactor == 1; }
function IsNotCliffeIntroduced(query) { return query.worldcliffeintroduced != 1; }
function _auto_NotC4CliffeInCover(query) { return query.world_auto_c4cliffeincover < 1; }
function _auto_NotCaneExitedCliffe(query) { return query.world_auto_caneexitedcliffe < 1; }
function _auto_IsCliffeInCane(query) { return query.world_auto_cliffeincane == 1; }
function _auto_NotCliffeInCane(query) { return query.world_auto_cliffeincane < 1; }
function _auto_IsCliffeWavWindow(query) { return query.world_auto_cliffewavwindow == 1; }
function _auto_NotLastSurvivorTalkedCliffe(query) { return query.world_auto_lastsurvivortalkedcliffe < 1; }
function _auto_IsCliffeInWitchville(query) { return query.world_auto_cliffeinwitchville == 1; }
function _auto_NotCliffeInWitchville(query) { return query.world_auto_cliffeinwitchville < 1; }
function _auto_CliffeIsPressing(query) { return query.world_auto_cliffepressing == 1; }
function _auto_IsTalkingCliffe(query) { return query.world_auto_talkingcliffe == 1; }
function _auto_NotTimerLockCliffe(query) { return query.world_auto_timerlockcliffe < 1; }
function _auto_CliffeSawC6M3Bill(query) { return query.world_auto_cliffec6m3bill == 1; }
function IsNotTalkCliffe(query) { return query.talkcliffe == 1; }
function IsTalkCliffe(query) { return query.talkcliffe != 1; }
function IsWorldTalkCliffe(query) { return query.worldtalkcliffe != 1; }
function IsCliffeNotAlive(query) { return query.iscliffealive != 1; }
function IsCliffeAlive(query) { return query.iscliffealive == 1; }
function IsSmallTownBarricadeCliffe(query) { return query.worldsmalltownbarricadecliffe != 1; }
function IsCliffeNear200(query) { return query.disttocliffe < 200; }
function IsCliffeNear400(query) { return query.disttocliffe < 400; }
function IsCliffeNear800(query) { return query.disttocliffe < 800; }
function IsCliffeFar400(query) { return query.disttocliffe >= 400; }
function IsCliffeFar1000(query) { return query.disttocliffe > 600; }
function IsNotSaidFaultFriendlyFireCliffe(query) { return query.worldsaidfaultfriendlyfirecliffe != 1; }
function IsSaidFaultFriendlyFireCliffe(query) { return query.worldsaidfaultfriendlyfirecliffe == 1; }
function IsShotTeammateCliffe(query) { return query.worldshotteammatecliffe == 1; }
function IsNotShotTeammateCliffe(query) { return query.worldshotteammatecliffe != 1; }
function WhoPutColaCliffe(query) { return query.worldwhoputcola == "Cliffe"; }
function PanicEventCliffe(query) { return query.whodidit == "Cliffe"; }
function IsCliffe(query) { return query.who == "Cliffe"; }
function IsTriggeredByCliffe(query) { return query.triggeredby == "Cliffe"; }
function IsDeadCliffe(query) { return query.deadcharacter == "Cliffe"; }
function IsNotDeadCliffe(query) { return query.deadcharacter != "Cliffe"; }
function SubjectIsCliffe(query) { return query.subject == "Cliffe"; }
function SubjectIsNotCliffe(query) { return query.subject != "Cliffe"; }
function FromIsCliffe(query) { return query.from == "Cliffe"; }
function FromIsNotCliffe(query) { return query.from != "Cliffe"; }
function Iswitch_aggro_onCliffe(query) { return query.witch_aggro_on == "Cliffe"; }
function IsNotSaidBeenJockeyedCliffe(query) { return query.worldsaidbeenjockeyedcliffe != 1; }
function IsSaidBeenJockeyedCliffe(query) { return query.worldsaidbeenjockeyedcliffe == 1; }
function IsNotSaidCliffePounced(query) { return query.worldsaidcliffepounced != 1; }
function IsNotCliffeInsultedCoachC1(query) { return query.worldcliffeinsultedcoach != 1; }
function ConceptCliffeC1Attitude(query) { return query.concept == "CliffeC1Attitude"; }
function CliffeOCD(query) { return query.worldcliffeocd != 1; }
function C13M1EllisNotPacliffeing(query) { return query.worldc13m1ellispacliffeing < 1; }
function Concept_C1M1_ElevatorHello3AliveCliffeIntro1(query) { return query.concept == "_C1M1_ElevatorHello3AliveCliffeIntro1"; }
function Concept_C1M1_ElevatorHello3AliveCliffeIntro2(query) { return query.concept == "_C1M1_ElevatorHello3AliveCliffeIntro2"; }
function Concept_C1M1_ElevatorHello2AliveCliffeIntro1(query) { return query.concept == "_C1M1_ElevatorHello2AliveCliffeIntro1"; }
function Concept_C1M1_ElevatorHello2AliveCliffeIntro2(query) { return query.concept == "_C1M1_ElevatorHello2AliveCliffeIntro2"; }
function ConceptPlayer_CliffeGunOwnership(query) { return query.concept == "Player.CliffeGunOwnership"; }
function ConceptPlayer_WhinyCliffe(query) { return query.concept == "Player.WhinyCliffe"; }
function ConceptChargerBeatsCliffe(query) { return query.concept == "ChargerBeatsCliffe"; }
function IsDonorCliffe(query) { return query.itemdonor == "Cliffe"; }
function IsNotDonorCliffe(query) { return query.itemdonor != "Cliffe"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorCliffe(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventCliffe(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// replica ============================================================================================================================

function IsShotMannReplica(query) { return query.worldshotmannreplica > 3; }
function IsNotSaidShotMannequinReplica2(query) { return query.worldsaidshotmannequinreplica2 != 1; }
function IsReplicaActor(query) { return query.replicaactor == 1; }
function IsNotSaidreplicareplicaes(query) { return query.worldsaidreplicareplicaes != 1; }
function Conceptreplicareplicaes(query) { return query.concept == "replicareplicaes"; }
function IsNotReplicaIntroduced(query) { return query.worldreplicaintroduced != 1; }
function IsReplicaIntroduced(query) { return query.worldreplicaintroduced == 1; }
function _auto_NotC4ReplicaInCover(query) { return query.world_auto_c4replicaincover < 1; }
function _auto_NotCaneExitedReplica(query) { return query.world_auto_caneexitedreplica < 1; }
function _auto_NotReplicaAngry(query) { return query.world_auto_replicaangry < 1; }
function _auto_NotReplicaFoodBreak(query) { return query.world_auto_replicafoodbreak < 1; }
function _auto_NotReplicaHappy(query) { return query.world_auto_replicahappy < 1; }
function _auto_IsReplicaInCane(query) { return query.world_auto_replicaincane == 1; }
function _auto_NotReplicaInCane(query) { return query.world_auto_replicaincane < 1; }
function _auto_IsReplicaWavWindow(query) { return query.world_auto_replicawavwindow == 1; }
function _auto_NotLastSurvivorTalkedReplica(query) { return query.world_auto_lastsurvivortalkedreplica < 1; }
function _auto_IsReplicaInWitchville(query) { return query.world_auto_replicainwitchville == 1; }
function _auto_NotReplicaInWitchville(query) { return query.world_auto_replicainwitchville < 1; }
function _auto_ReplicaIsPressing(query) { return query.world_auto_replicapressing == 1; }
function _auto_IsTalkingReplica(query) { return query.world_auto_talkingreplica == 1; }
function _auto_NotTimerLockReplica(query) { return query.world_auto_timerlockreplica < 1; }
function _auto_ReplicaSawC6M3Bill(query) { return query.world_auto_replicac6m3bill == 1; }
function IsNotTalkReplica(query) { return query.talkreplica == 1; }
function IsTalkReplica(query) { return query.talkreplica != 1; }
function IsWorldTalkReplica(query) { return query.worldtalkreplica != 1; }
function IsReplicaNotAlive(query) { return query.isreplicaalive != 1; }
function IsReplicaAlive(query) { return query.isreplicaalive == 1; }
function IsReplicaNear125(query) { return query.disttoreplica < 125; }
function IsReplicaNear200(query) { return query.disttoreplica < 200; }
function IsReplicaNear400(query) { return query.disttoreplica < 400; }
function IsReplicaNear800(query) { return query.disttoreplica < 800; }
function IsReplicaFar400(query) { return query.disttoreplica >= 400; }
function IsReplicaFar1000(query) { return query.disttoreplica > 600; }
function IsNotSaidFaultFriendlyFireReplica(query) { return query.worldsaidfaultfriendlyfirereplica != 1; }
function IsSaidFaultFriendlyFireReplica(query) { return query.worldsaidfaultfriendlyfirereplica == 1; }
function IsShotTeammateReplica(query) { return query.worldshotteammatereplica == 1; }
function IsNotShotTeammateReplica(query) { return query.worldshotteammatereplica != 1; }
function WhoPutColaReplica(query) { return query.worldwhoputcola == "Replica"; }
function PanicEventReplica(query) { return query.whodidit == "Replica"; }
function IsReplica(query) { return query.who == "Replica"; }
function IsTriggeredByReplica(query) { return query.triggeredby == "Replica"; }
function IsDeadReplica(query) { return query.deadcharacter == "Replica"; }
function IsNotDeadReplica(query) { return query.deadcharacter != "Replica"; }
function SubjectIsReplica(query) { return query.subject == "Replica"; }
function SubjectIsNotReplica(query) { return query.subject != "Replica"; }
function FromIsReplica(query) { return query.from == "Replica"; }
function FromIsNotReplica(query) { return query.from != "Replica"; }
function Iswitch_aggro_onReplica(query) { return query.witch_aggro_on == "Replica"; }
function IsNotSaidBeenJockeyedReplica(query) { return query.worldsaidbeenjockeyedreplica != 1; }
function IsSaidBeenJockeyedReplica(query) { return query.worldsaidbeenjockeyedreplica == 1; }
function IsNotSaidReplicaPounced(query) { return query.worldsaidreplicapounced != 1; }
function IsNotNickInsultedReplicaC1(query) { return query.worldnickinsultedreplica != 1; }
function IsSaidC1M3ReplicaFoodCourt(query) { return query.worldsaidc1m3replicafoodcourt == 1; }
function ConceptReplicaSuggestsCrane(query) { return query.concept == "ReplicaSuggestsCrane"; }
function ConceptLaughReplica(query) { return query.concept == "LaughReplica"; }
function NotReplicaMadAtRiders(query) { return query.worldreplicamadatriders < 1; }
function ReplicaMadAtRiders(query) { return query.worldreplicamadatriders == 1; }
function Concept_C2M2_ReplicaApocolypse(query) { return query.concept == "_C2M2_ReplicaApocolypse"; }
function ConceptPlayer_CoverMeC1RReplica1(query) { return query.concept == "Player.CoverMeC1RReplica1"; }
function ConceptPlayer_CoverMeC1RReplica2(query) { return query.concept == "Player.CoverMeC1RReplica2"; }
// function FromSet1(query) { return DirectorScript.FromIsReplica(query) || DirectorScript.FromIsAnOrator(query); }
function ReplicaCake(query) { return query.worldreplicacake == 1; }
function IsDonorReplica(query) { return query.itemdonor == "Replica"; }
function IsNotDonorReplica(query) { return query.itemdonor != "Replica"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorReplica(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsReplicaAVampire(query) { return query.worldc6m1_replicaisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventReplica(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }



// ============================================================================================================================
