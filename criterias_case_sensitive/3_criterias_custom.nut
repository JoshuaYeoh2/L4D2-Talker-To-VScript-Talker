// arcade ============================================================================================================================

function IsShotMannHaruka(query) { return query.worldshotmannharuka > 3; }
function IsShotMannSara(query) { return query.worldshotmannsara > 3; }
function IsShotMannYusuke(query) { return query.worldshotmannyusuke > 3; }
function IsShotMannBlake(query) { return query.worldshotmannblake > 3; }
function IsNotSaidShotMannequinHaruka2(query) { return query.worldsaidshotmannequinharuka2 != 1; }
function IsNotSaidShotMannequinSara2(query) { return query.worldsaidshotmannequinsara != 1; }
function IsNotSaidShotMannequinYusuke2(query) { return query.worldsaidshotmannequinyusuke2 != 1; }
function IsNotSaidShotMannequinBlake2(query) { return query.worldsaidshotmannequinblake2 != 1; }
function Conceptc1m4escapeBlakeCheck(query) { return query.concept == "c1m4escapeBlakeCheck"; }
function Conceptc1m4escapeBlakeCheckFail(query) { return query.concept == "c1m4escapeBlakeCheckFail"; }
function Conceptc1m4escapeBlakeCheckSuccess(query) { return query.concept == "c1m4escapeBlakeCheckSuccess"; }
function IsHarukaActor(query) { return query.harukaactor == 1; }
function IsSaraActor(query) { return query.saraactor == 1; }
function IsBlakeActor(query) { return query.blakeactor == 1; }
function IsYusukeActor(query) { return query.yusukeactor == 1; }
function IsNotSaidharukaharukaes(query) { return query.worldsaidharukaharukaes != 1; }
function Conceptharukaharukaes(query) { return query.concept == "harukaharukaes"; }
function IsSaraElevatorIntro(query) { return query.worldsaraelevatorintro == 1; }
function IsNotYusukeIntroduced(query) { return query.worldyusukeintroduced != 1; }
function IsNotHarukaIntroduced(query) { return query.worldharukaintroduced != 1; }
function IsHarukaIntroduced(query) { return query.worldharukaintroduced == 1; }
function IsNotSaraIntroduced(query) { return query.worldsaraintroduced != 1; }
function IsNotBlakeIntroduced(query) { return query.worldblakeintroduced != 1; }
function _auto_NotC4HarukaInCover(query) { return query.world_auto_c4harukaincover < 1; }
function _auto_NotC4YusukeInCover(query) { return query.world_auto_c4yusukeincover < 1; }
function _auto_NotC4BlakeInCover(query) { return query.world_auto_c4blakeincover < 1; }
function _auto_NotC4SaraInCover(query) { return query.world_auto_c4saraincover < 1; }
function _auto_NotCaneExitedHaruka(query) { return query.world_auto_caneexitedharuka < 1; }
function _auto_NotCaneExitedYusuke(query) { return query.world_auto_caneexitedyusuke < 1; }
function _auto_NotCaneExitedBlake(query) { return query.world_auto_caneexitedblake < 1; }
function _auto_NotCaneExitedSara(query) { return query.world_auto_caneexitedsara < 1; }
function _auto_NotHarukaAngry(query) { return query.world_auto_harukaangry < 1; }
function _auto_NotHarukaFoodBreak(query) { return query.world_auto_harukafoodbreak < 1; }
function _auto_NotHarukaHappy(query) { return query.world_auto_harukahappy < 1; }
function _auto_IsHarukaInCane(query) { return query.world_auto_harukaincane == 1; }
function _auto_NotHarukaInCane(query) { return query.world_auto_harukaincane < 1; }
function _auto_IsHarukaWavWindow(query) { return query.world_auto_harukawavwindow == 1; }
function _auto_IsYusukeInCane(query) { return query.world_auto_yusukeincane == 1; }
function _auto_NotYusukeInCane(query) { return query.world_auto_yusukeincane < 1; }
function _auto_IsYusukeWavWindow(query) { return query.world_auto_yusukewavwindow == 1; }
function _auto_NotLastSurvivorTalkedHaruka(query) { return query.world_auto_lastsurvivortalkedharuka < 1; }
function _auto_NotLastSurvivorTalkedYusuke(query) { return query.world_auto_lastsurvivortalkedyusuke < 1; }
function _auto_NotLastSurvivorTalkedBlake(query) { return query.world_auto_lastsurvivortalkedblake < 1; }
function _auto_NotLastSurvivorTalkedSara(query) { return query.world_auto_lastsurvivortalkedsara < 1; }
function _auto_IsBlakeInCane(query) { return query.world_auto_blakeincane == 1; }
function _auto_NotBlakeInCane(query) { return query.world_auto_blakeincane < 1; }
function _auto_IsBlakeWavWindow(query) { return query.world_auto_blakewavwindow == 1; }
function _auto_IsSaraInCane(query) { return query.world_auto_saraincane == 1; }
function _auto_NotSaraInCane(query) { return query.world_auto_saraincane < 1; }
function _auto_IsSaraWavWindow(query) { return query.world_auto_sarawavwindow == 1; }
function _auto_IsHarukaInWitchville(query) { return query.world_auto_harukainwitchville == 1; }
function _auto_IsYusukeInWitchville(query) { return query.world_auto_yusukeinwitchville == 1; }
function _auto_IsBlakeInWitchville(query) { return query.world_auto_blakeinwitchville == 1; }
function _auto_IsSaraInWitchville(query) { return query.world_auto_sarainwitchville == 1; }
function _auto_NotHarukaInWitchville(query) { return query.world_auto_harukainwitchville < 1; }
function _auto_NotYusukeInWitchville(query) { return query.world_auto_yusukeinwitchville < 1; }
function _auto_NotBlakeInWitchville(query) { return query.world_auto_blakeinwitchville < 1; }
function _auto_NotSaraInWitchville(query) { return query.world_auto_sarainwitchville < 1; }
function _auto_HarukaIsPressing(query) { return query.world_auto_harukapressing == 1; }
function _auto_YusukeIsPressing(query) { return query.world_auto_yusukepressing == 1; }
function _auto_BlakeIsPressing(query) { return query.world_auto_blakepressing == 1; }
function _auto_SaraIsPressing(query) { return query.world_auto_sarapressing == 1; }
function _auto_C5M3BlakeReacted(query) { return query.world_auto_c5m3blakereacted == 1; }
function _auto_IsTalkingHaruka(query) { return query.world_auto_talkingharuka == 1; }
function _auto_IsTalkingYusuke(query) { return query.world_auto_talkingyusuke == 1; }
function _auto_IsTalkingBlake(query) { return query.world_auto_talkingblake == 1; }
function _auto_IsTalkingSara(query) { return query.world_auto_talkingsara == 1; }
function _auto_NotTimerLockHaruka(query) { return query.world_auto_timerlockharuka < 1; }
function _auto_NotTimerLockYusuke(query) { return query.world_auto_timerlockyusuke < 1; }
function _auto_NotTimerLockBlake(query) { return query.world_auto_timerlockblake < 1; }
function _auto_NotTimerLockSara(query) { return query.world_auto_timerlocksara < 1; }
function _auto_YusukeSawC6M3Bill(query) { return query.world_auto_yusukec6m3bill == 1; }
function _auto_HarukaSawC6M3Bill(query) { return query.world_auto_harukac6m3bill == 1; }
function _auto_BlakeSawC6M3Bill(query) { return query.world_auto_blakec6m3bill == 1; }
function IsNotTalkHaruka(query) { return query.talkharuka == 1; }
function IsTalkHaruka(query) { return query.talkharuka != 1; }
function IsNotTalkYusuke(query) { return query.talkyusuke == 1; }
function IsTalkYusuke(query) { return query.talkyusuke != 1; }
function IsNotTalkSara(query) { return query.talksara == 1; }
function IsTalkSara(query) { return query.talksara != 1; }
function IsNotTalkBlake(query) { return query.talkblake == 1; }
function IsTalkBlake(query) { return query.talkblake != 1; }
function IsWorldTalkHaruka(query) { return query.worldtalkharuka != 1; }
function IsWorldTalkBlake(query) { return query.worldtalkblake != 1; }
function IsWorldTalkSara(query) { return query.worldtalksara != 1; }
function IsWorldTalkYusuke(query) { return query.worldtalkyusuke != 1; }
function IsSaraNotAlive(query) { return query.issaraalive != 1; }
function IsBlakeNotAlive(query) { return query.isblakealive != 1; }
function IsHarukaNotAlive(query) { return query.isharukaalive != 1; }
function IsYusukeNotAlive(query) { return query.isyusukealive != 1; }
function IsSaraAlive(query) { return query.issaraalive == 1; }
function IsBlakeAlive(query) { return query.isblakealive == 1; }
function IsHarukaAlive(query) { return query.isharukaalive == 1; }
function IsYusukeAlive(query) { return query.isyusukealive == 1; }
function IsSmallTownBarricadeBlake(query) { return query.worldsmalltownbarricadeblake != 1; }
function IsSmallTownBarricadeYusuke(query) { return query.worldsmalltownbarricadeyusuke != 1; }
function IsSmallTownBarricadeSara(query) { return query.worldsmalltownbarricadesara != 1; }
function IsYusukeNear200(query) { return query.disttoyusuke < 200; }
function IsYusukeNear400(query) { return query.disttoyusuke < 400; }
function IsYusukeNear800(query) { return query.disttoyusuke < 800; }
function IsYusukeFar400(query) { return query.disttoyusuke >= 400; }
function IsHarukaNear125(query) { return query.disttoharuka < 125; }
function IsHarukaNear200(query) { return query.disttoharuka < 200; }
function IsHarukaNear400(query) { return query.disttoharuka < 400; }
function IsHarukaNear800(query) { return query.disttoharuka < 800; }
function IsHarukaFar400(query) { return query.disttoharuka >= 400; }
function IsSaraNear200(query) { return query.disttosara < 200; }
function IsSaraNear400(query) { return query.disttosara < 400; }
function IsSaraNear800(query) { return query.disttosara < 800; }
function IsSaraFar400(query) { return query.disttosara >= 400; }
function IsBlakeNear200(query) { return query.disttoblake < 200; }
function IsBlakeNear300(query) { return query.disttoblake < 300; }
function IsBlakeNear400(query) { return query.disttoblake < 400; }
function IsBlakeNear400Weight0(query) { return query.disttoblake < 400; }
function IsBlakeNear800(query) { return query.disttoblake < 800; }
function IsBlakeFar400(query) { return query.disttoblake >= 400; }
function IsHarukaFar1000(query) { return query.disttoharuka > 600; }
function IsSaraFar1000(query) { return query.disttosara > 600; }
function IsBlakeFar1000(query) { return query.disttoblake > 600; }
function IsYusukeFar1000(query) { return query.disttoyusuke > 600; }
function IsNotSaidFaultFriendlyFireHaruka(query) { return query.worldsaidfaultfriendlyfireharuka != 1; }
function IsSaidFaultFriendlyFireHaruka(query) { return query.worldsaidfaultfriendlyfireharuka == 1; }
function IsNotSaidFaultFriendlyFireBlake(query) { return query.worldsaidfaultfriendlyfireblake != 1; }
function IsSaidFaultFriendlyFireBlake(query) { return query.worldsaidfaultfriendlyfireblake == 1; }
function IsNotSaidFaultFriendlyFireYusuke(query) { return query.worldsaidfaultfriendlyfireyusuke != 1; }
function IsSaidFaultFriendlyFireYusuke(query) { return query.worldsaidfaultfriendlyfireyusuke == 1; }
function IsNotSaidFaultFriendlyFireSara(query) { return query.worldsaidfaultfriendlyfiresara != 1; }
function IsSaidFaultFriendlyFireSara(query) { return query.worldsaidfaultfriendlyfiresara == 1; }
function IsShotTeammateHaruka(query) { return query.worldshotteammateharuka == 1; }
function IsNotShotTeammateHaruka(query) { return query.worldshotteammateharuka != 1; }
function IsShotTeammateYusuke(query) { return query.worldshotteammateyusuke == 1; }
function IsNotShotTeammateYusuke(query) { return query.worldshotteammateyusuke != 1; }
function IsShotTeammateBlake(query) { return query.worldshotteammateblake == 1; }
function IsNotShotTeammateBlake(query) { return query.worldshotteammateblake != 1; }
function IsShotTeammateSara(query) { return query.worldshotteammatesara == 1; }
function IsNotShotTeammateSara(query) { return query.worldshotteammatesara != 1; }
function IsBlakeCrybaby(query) { return query.worldblakecrying == 1; }
function WhoPutColaHaruka(query) { return query.worldwhoputcola == "Haruka"; }
function WhoPutColaYusuke(query) { return query.worldwhoputcola == "Yusuke"; }
function WhoPutColaBlake(query) { return query.worldwhoputcola == "Blake"; }
function WhoPutColaSara(query) { return query.worldwhoputcola == "Sara"; }
function PanicEventHaruka(query) { return query.whodidit == "Haruka"; }
function PanicEventYusuke(query) { return query.whodidit == "Yusuke"; }
function PanicEventBlake(query) { return query.whodidit == "Blake"; }
function PanicEventSara(query) { return query.whodidit == "Sara"; }
function IsYusuke(query) { return query.who == "Yusuke"; }
function IsHaruka(query) { return query.who == "Haruka"; }
function IsSara(query) { return query.who == "Sara"; }
function IsBlake(query) { return query.who == "Blake"; }
function IsTriggeredByYusuke(query) { return query.triggeredby == "Yusuke"; }
function IsTriggeredByHaruka(query) { return query.triggeredby == "Haruka"; }
function IsTriggeredBySara(query) { return query.triggeredby == "Sara"; }
function IsTriggeredByBlake(query) { return query.triggeredby == "Blake"; }
function IsDeadYusuke(query) { return query.deadcharacter == "Yusuke"; }
function IsDeadHaruka(query) { return query.deadcharacter == "Haruka"; }
function IsDeadSara(query) { return query.deadcharacter == "Sara"; }
function IsDeadBlake(query) { return query.deadcharacter == "Blake"; }
function IsNotDeadYusuke(query) { return query.deadcharacter != "Yusuke"; }
function IsNotDeadHaruka(query) { return query.deadcharacter != "Haruka"; }
function IsNotDeadSara(query) { return query.deadcharacter != "Sara"; }
function IsNotDeadBlake(query) { return query.deadcharacter != "Blake"; }
function SubjectIsHaruka(query) { return query.subject == "Haruka"; }
function SubjectIsYusuke(query) { return query.subject == "Yusuke"; }
function SubjectIsSara(query) { return query.subject == "Sara"; }
function SubjectIsBlake(query) { return query.subject == "Blake"; }
function SubjectIsNotHaruka(query) { return query.subject != "Haruka"; }
function SubjectIsNotYusuke(query) { return query.subject != "Yusuke"; }
function SubjectIsNotSara(query) { return query.subject != "Sara"; }
function SubjectIsNotBlake(query) { return query.subject != "Blake"; }
function FromIsHaruka(query) { return query.from == "Haruka"; }
function FromIsYusuke(query) { return query.from == "Yusuke"; }
function FromIsSara(query) { return query.from == "Sara"; }
function FromIsBlake(query) { return query.from == "Blake"; }
function FromIsNotHaruka(query) { return query.from != "Haruka"; }
function FromIsNotYusuke(query) { return query.from != "Yusuke"; }
function FromIsNotSara(query) { return query.from != "Sara"; }
function FromIsNotBlake(query) { return query.from != "Blake"; }
function Iswitch_aggro_onHaruka(query) { return query.witch_aggro_on == "Haruka"; }
function Iswitch_aggro_onYusuke(query) { return query.witch_aggro_on == "Yusuke"; }
function Iswitch_aggro_onSara(query) { return query.witch_aggro_on == "Sara"; }
function Iswitch_aggro_onBlake(query) { return query.witch_aggro_on == "Blake"; }
function IsNotSaidBeenJockeyedHaruka(query) { return query.worldsaidbeenjockeyedharuka != 1; }
function IsNotSaidBeenJockeyedYusuke(query) { return query.worldsaidbeenjockeyedyusuke != 1; }
function IsNotSaidBeenJockeyedBlake(query) { return query.worldsaidbeenjockeyedblake != 1; }
function IsNotSaidBeenJockeyedSara(query) { return query.worldsaidbeenjockeyedsara != 1; }
function IsSaidBeenJockeyedHaruka(query) { return query.worldsaidbeenjockeyedharuka == 1; }
function IsSaidBeenJockeyedYusuke(query) { return query.worldsaidbeenjockeyedyusuke == 1; }
function IsSaidBeenJockeyedBlake(query) { return query.worldsaidbeenjockeyedblake == 1; }
function IsSaidBeenJockeyedSara(query) { return query.worldsaidbeenjockeyedsara == 1; }
function IsNotSaidBlakePounced(query) { return query.worldsaidblakepounced != 1; }
function IsNotSaidHarukaPounced(query) { return query.worldsaidharukapounced != 1; }
function IsNotSaidSaraPounced(query) { return query.worldsaidsarapounced != 1; }
function IsNotSaidYusukePounced(query) { return query.worldsaidyusukepounced != 1; }
function IsBlakeAlsoWarn(query) { return query.worldblakealsowarn == 1; }
function IsNotYusukeInsultedHarukaC1(query) { return query.worldyusukeinsultedharuka != 1; }
function IsSaidC1M3HarukaFoodCourt(query) { return query.worldsaidc1m3harukafoodcourt == 1; }
function ConceptSaraSuggestsCrane(query) { return query.concept == "SaraSuggestsCrane"; }
function ConceptHarukaSuggestsCrane(query) { return query.concept == "HarukaSuggestsCrane"; }
function ConceptLaughHaruka(query) { return query.concept == "LaughHaruka"; }
function ConceptLaughSara(query) { return query.concept == "LaughSara"; }
function ConceptBlakeInterrupt(query) { return query.concept == "BlakeInterrupt"; }
function ConceptYusukeC1Attitude(query) { return query.concept == "YusukeC1Attitude"; }
function BlakeNotTall(query) { return query.worldblaketalljoke == 1; }
function NotHarukaMadAtRiders(query) { return query.worldharukamadatriders < 1; }
function HarukaMadAtRiders(query) { return query.worldharukamadatriders == 1; }
function YusukeOCD(query) { return query.worldyusukeocd != 1; }
function ConceptC13M1Intro2Blake(query) { return query.concept == "C13M1Intro2Blake"; }
function C13M1BlakeNotPayusukeing(query) { return query.worldc13m1blakepayusukeing < 1; }
function IsNotSrcGrp_ELLISSTORYINIT(query) { return query.worldsrcgrp_blakestoryinit < 1; }
function IsNotSrcGrp_ELLISSTORY(query) { return query.worldsrcgrp_blakestory < 1; }
function Concept_C2M2_HarukaApocolypse(query) { return query.concept == "_C2M2_HarukaApocolypse"; }
function Concept_C1M1_ElevatorHello3AliveYusukeIntro1(query) { return query.concept == "_C1M1_ElevatorHello3AliveYusukeIntro1"; }
function Concept_C1M1_ElevatorHello3AliveYusukeIntro2(query) { return query.concept == "_C1M1_ElevatorHello3AliveYusukeIntro2"; }
function Concept_C1M1_ElevatorHello3AliveSaraIntro(query) { return query.concept == "_C1M1_ElevatorHello3AliveSaraIntro"; }
function Concept_C1M1_ElevatorHello2AliveYusukeIntro1(query) { return query.concept == "_C1M1_ElevatorHello2AliveYusukeIntro1"; }
function Concept_C1M1_ElevatorHello2AliveYusukeIntro2(query) { return query.concept == "_C1M1_ElevatorHello2AliveYusukeIntro2"; }
function ConceptPlayer_CoverMeC1RHaruka1(query) { return query.concept == "Player.CoverMeC1RHaruka1"; }
function ConceptPlayer_CoverMeC1RHaruka2(query) { return query.concept == "Player.CoverMeC1RHaruka2"; }
function ConceptC3M4ButtonAnswerBlake(query) { return query.concept == "C3M4ButtonAnswerBlake"; }
function ConceptBlakeStoryReac01(query) { return query.concept == "BlakeStoryReac01"; }
function ConceptPlayer_YusukeGunOwnership(query) { return query.concept == "Player.YusukeGunOwnership"; }
function ConceptPlayer_WhinyYusuke(query) { return query.concept == "Player.WhinyYusuke"; }
function ConceptC3M4Button104Blake(query) { return query.concept == "C3M4Button104Blake"; }
function ConceptC6M2BlakeStoryStart1(query) { return query.concept == "C6M2BlakeStoryStart1"; }
function ConceptC6M3BlakeBridgeStory1(query) { return query.concept == "C6M3BlakeBridgeStory1"; }
function ConceptC6M3BlakeBridgeStory1a(query) { return query.concept == "C6M3BlakeBridgeStory1a"; }
function ConceptChargerBeatsYusuke(query) { return query.concept == "ChargerBeatsYusuke"; }
function ConceptWorldC6M3_ByBridge01Blake(query) { return query.concept == "WorldC6M3_ByBridge01Blake"; }
// function fromset1(query) { return DirectorScript.FromIsHaruka(query) || DirectorScript.FromIsAnOrator(query); }
function IsBlakeInLoveC6M1(query) { return query.worldblakeinlovec6m1 == 1; }
function HarukaCake(query) { return query.worldharukacake == 1; }
function IsDonorHaruka(query) { return query.itemdonor == "Haruka"; }
function IsDonorYusuke(query) { return query.itemdonor == "Yusuke"; }
function IsDonorBlake(query) { return query.itemdonor == "Blake"; }
function IsDonorSara(query) { return query.itemdonor == "Sara"; }
function IsNotDonorHaruka(query) { return query.itemdonor != "Haruka"; }
function IsNotDonorYusuke(query) { return query.itemdonor != "Yusuke"; }
function IsNotDonorBlake(query) { return query.itemdonor != "Blake"; }
function IsNotDonorSara(query) { return query.itemdonor != "Sara"; }
// function hasdonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorHaruka(query) || DirectorScript.IsDonorYusuke(query) || DirectorScript.IsDonorBlake(query) || DirectorScript.IsDonorSara(query) || DirectorScript.IsDonorUnknown(query); }
function IsHarukaAVampire(query) { return query.worldc6m1_harukaisavampire == 1; }
function IsSaraAVampire(query) { return query.worldc6m1_saraisavampire == 1; }
function IsSaidOpenedGate1BlameBlake(query) { return query.worldsaidopenedgate1blameblake == 1; }
function IsNotSaidBlakeBridgeStoryStart(query) { return query.worldsaidblakebridgestorystart != 1; }
function IsEndBlakeBridgeStoryStart(query) { return query.worldendblakebridgestorystart == 1; }
// function paniceventds(query) { return DirectorScript.PanicEventHaruka(query) || DirectorScript.PanicEventYusuke(query) || DirectorScript.PanicEventBlake(query) || DirectorScript.PanicEventSara(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// mike ============================================================================================================================

function ConceptBlockChurchGuyMikeNo1(query) { return query.concept == "ConceptBlockChurchGuyMikeNo1"; }
// function ConceptBlock959(query) { return query.concept == "MikeWhoAreYou"; }
function MikeNotPickedUpItem(query) { return query.mikepickedupitem != 1; }
function IsMikeFriendlyFire(query) { return query.worldmikefriendlyfire == 1; }
function IsNotMikeFriendlyFire(query) { return query.worldmikefriendlyfire != 1; }
function IsNotMikeFriendlyFireFrancis(query) { return query.worldmikefriendlyfirefrancis != 1; }
function IsNotAskedForCoverMike(query) { return query.mikeaskforcover != 1; }
function IsNotSaidBattleStationsMike(query) { return query.worldsaidbattlestationsmike != 1; }
function IsNotSaidBeenJockeyedMike(query) { return query.saidbeenjockeyedmike != 1; }
function MikeNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function _auto_NotC4MikeInCover(query) { return query.world_auto_c4mikeincover < 1; }
function _auto_NotLastSurvivorTalkedMike(query) { return query.world_auto_lastsurvivortalkedmike < 1; }
function _auto_IsMikeInCane(query) { return query.world_auto_mikeincane == 1; }
function _auto_NotMikeInCane(query) { return query.world_auto_mikeincane < 1; }
function _auto_IsMikeWavWindow(query) { return query.world_auto_mikewavwindow == 1; }
function _auto_MikeIsPressing(query) { return query.world_auto_mikepressing == 1; }
function _auto_IsTalkingMike(query) { return query.world_auto_talkingmike == 1; }
function _auto_NotTimerLockMike(query) { return query.world_auto_timerlockmike < 1; }
function _auto_NotC6M3Mike(query) { return query.world_auto_c6m3mike < 1; }
function _auto_SawC6M3Mike(query) { return query.world_auto_c6m3mike == 1; }
function _auto_SaidC6M3Mike(query) { return query.world_auto_c6m3mike == 2; }
function _auto_GamblerSawC6M3Mike(query) { return query.world_auto_gamblerc6m3mike == 1; }
function _auto_CoachSawC6M3Mike(query) { return query.world_auto_coachc6m3mike == 1; }
function _auto_MechanicSawC6M3Mike(query) { return query.world_auto_mechanicc6m3mike == 1; }
function _auto_NotC7M3PressingMike(query) { return query.world_auto_c7m3pressingmike < 1; }
function _auto_NotC7M3ToBridgeMike(query) { return query.world_auto_c7m3tobridgemike < 1; }
function IsNotSaidFaultFriendlyFireMike(query) { return query.worldsaidfaultfriendlyfiremike != 1; }
function IsSaidFaultFriendlyFireMike(query) { return query.worldsaidfaultfriendlyfiremike == 1; }
function IsShotTeammateMike(query) { return query.worldshotteammatemike == 1; }
function IsNotShotTeammateMike(query) { return query.worldshotteammatemike != 1; }
// function IsNotSaidpathc2m1_mikeboard(query) { return query.worldsaidpathc2m1_mikeboard != 1; }
// function Ispathc2m1_mikeboard(query) { return query.subject == "pathc2m1_mikeboard"; }
// function Concept_C2M1Mikeboard(query) { return query.concept == "_C2M1Mikeboard"; }
// function Concept_C2M1Mikeboard01(query) { return query.concept == "_C2M1Mikeboard01"; }
function IsCrashFinalePressingMike(query) { return query.worldcrashfinalepressingmike == 1; }
function NotNagCrashMike(query) { return query.worldnagcrashmike < 1; }
function ConceptC7M3FinalSpeakMike(query) { return query.concept == "C7M3FinalSpeakMike"; }
function NotSacrificedMike(query) { return query.worldsacrificed != "Mike"; }
function SacrificedMike(query) { return query.worldsacrificed == "Mike"; }
function IsNotTalkMike(query) { return query.talkmike == 1; }
function IsTalkMike(query) { return query.talkmike != 1; }
function IsWorldTalkMike(query) { return query.worldtalkmike != 1; }
function IsMikeAlive(query) { return query.ismikealive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsTeenGirlAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsMikeAlive(query); }
function NotMikeAlive(query) { return query.ismikealive == 0; }
function IsMikeNear200(query) { return query.disttomike < 200; }
function IsMikeNear400(query) { return query.disttomike < 400; }
function IsMikeNear500(query) { return query.disttomike < 500; }
function IsMikeNear800(query) { return query.disttomike < 800; }
function IsMikeFar400(query) { return query.disttomike >= 400; }
function IsMikeFar1000(query) { return query.disttomike > 600; }
function IsMike(query) { return query.who == "Mike"; }
function IsDeadMike(query) { return query.deadcharacter == "Mike"; }
function IsTeam4Mike(query) { return query.name == "silver_mike"; }
function SubjectIsMike(query) { return query.subject == "Mike"; }
function SubjectIsNotMike(query) { return query.subject != "Mike"; }
function FromIsMike(query) { return query.from == "Mike"; }
function FromIsNotMike(query) { return query.from != "Mike"; }
function Iswitch_aggro_onMike(query) { return query.witch_aggro_on == "Mike"; }
function IsNotSaidBeenJockeyedMike(query) { return query.worldsaidbeenjockeyedmike != 1; }
function IsDonorMike(query) { return query.itemdonor == "Mike"; }
function IsNotDonorMike(query) { return query.itemdonor != "Mike"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorMike(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsWorldC6M3_Mike(query) { return query.subject == "WorldC6M3_Mike"; }
function ConceptPlayerSuggestHealthMike(query) { return query.concept == "PlayerSuggestHealthMike"; }
function IsSmallTownBarricadeMike(query) { return query.worldsmalltownbarricademike != 1; }
function PanicEventMike(query) { return query.whodidit == "Mike"; }
function IsTriggeredByMike(query) { return query.triggeredby == "Mike"; }
function IsNotSaidMikePounced(query) { return query.worldsaidmikepounced != 1; }
function IsSmallTownBarricadeMike(query) { return query.worldsmalltownbarricademike != 1; }
function PanicEventMike(query) { return query.whodidit == "Mike"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventMike(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }
function IsTriggeredByMike(query) { return query.triggeredby == "Mike"; }
function IsNotSaidMikePounced(query) { return query.worldsaidmikepounced != 1; }

// cliffe ============================================================================================================================

function IsShotMannCliffe(query) { return query.worldshotmanncliffe > 3; }
function IsNotSaidShotMannequinCliffe2(query) { return query.worldsaidshotmannequincliffe2 != 1; }
function IsCliffeActor(query) { return query.cliffeactor == 1; }
function IsNotCliffeIntroduced(query) { return query.worldcliffeintroduced != 1; }
function _auto_NotC4CliffeInCover(query) { return query.world_auto_c4cliffeincover < 1; }
function _auto_NotCaneExitedCliffe(query) { return query.world_auto_caneexitedcliffe < 1; }
function _auto_IsCliffeInCane(query) { return query.world_auto_cliffeincane == 1; }
function _auto_NotCliffeInCane(query) { return query.world_auto_cliffeincane < 1; }
function _auto_IsCliffeWavWindow(query) { return query.world_auto_cliffewavwindow == 1; }
function _auto_NotLastSurvivorTalkedCliffe(query) { return query.world_auto_lastsurvivortalkedcliffe < 1; }
function _auto_IsCliffeInWitchville(query) { return query.world_auto_cliffeinwitchville == 1; }
function _auto_NotCliffeInWitchville(query) { return query.world_auto_cliffeinwitchville < 1; }
function _auto_CliffeIsPressing(query) { return query.world_auto_cliffepressing == 1; }
function _auto_IsTalkingCliffe(query) { return query.world_auto_talkingcliffe == 1; }
function _auto_NotTimerLockCliffe(query) { return query.world_auto_timerlockcliffe < 1; }
function _auto_CliffeSawC6M3Bill(query) { return query.world_auto_cliffec6m3bill == 1; }
function IsNotTalkCliffe(query) { return query.talkcliffe == 1; }
function IsTalkCliffe(query) { return query.talkcliffe != 1; }
function IsWorldTalkCliffe(query) { return query.worldtalkcliffe != 1; }
function IsCliffeNotAlive(query) { return query.iscliffealive != 1; }
function IsCliffeAlive(query) { return query.iscliffealive == 1; }
function IsSmallTownBarricadeCliffe(query) { return query.worldsmalltownbarricadecliffe != 1; }
function IsCliffeNear200(query) { return query.disttocliffe < 200; }
function IsCliffeNear400(query) { return query.disttocliffe < 400; }
function IsCliffeNear800(query) { return query.disttocliffe < 800; }
function IsCliffeFar400(query) { return query.disttocliffe >= 400; }
function IsCliffeFar1000(query) { return query.disttocliffe > 600; }
function IsNotSaidFaultFriendlyFireCliffe(query) { return query.worldsaidfaultfriendlyfirecliffe != 1; }
function IsSaidFaultFriendlyFireCliffe(query) { return query.worldsaidfaultfriendlyfirecliffe == 1; }
function IsShotTeammateCliffe(query) { return query.worldshotteammatecliffe == 1; }
function IsNotShotTeammateCliffe(query) { return query.worldshotteammatecliffe != 1; }
function WhoPutColaCliffe(query) { return query.worldwhoputcola == "Cliffe"; }
function PanicEventCliffe(query) { return query.whodidit == "Cliffe"; }
function IsCliffe(query) { return query.who == "Cliffe"; }
function IsTriggeredByCliffe(query) { return query.triggeredby == "Cliffe"; }
function IsDeadCliffe(query) { return query.deadcharacter == "Cliffe"; }
function IsNotDeadCliffe(query) { return query.deadcharacter != "Cliffe"; }
function SubjectIsCliffe(query) { return query.subject == "Cliffe"; }
function SubjectIsNotCliffe(query) { return query.subject != "Cliffe"; }
function FromIsCliffe(query) { return query.from == "Cliffe"; }
function FromIsNotCliffe(query) { return query.from != "Cliffe"; }
function Iswitch_aggro_onCliffe(query) { return query.witch_aggro_on == "Cliffe"; }
function IsNotSaidBeenJockeyedCliffe(query) { return query.worldsaidbeenjockeyedcliffe != 1; }
function IsSaidBeenJockeyedCliffe(query) { return query.worldsaidbeenjockeyedcliffe == 1; }
function IsNotSaidCliffePounced(query) { return query.worldsaidcliffepounced != 1; }
function IsNotCliffeInsultedCoachC1(query) { return query.worldcliffeinsultedcoach != 1; }
function ConceptCliffeC1Attitude(query) { return query.concept == "CliffeC1Attitude"; }
function CliffeOCD(query) { return query.worldcliffeocd != 1; }
function C13M1EllisNotPacliffeing(query) { return query.worldc13m1ellispacliffeing < 1; }
function Concept_C1M1_ElevatorHello3AliveCliffeIntro1(query) { return query.concept == "_C1M1_ElevatorHello3AliveCliffeIntro1"; }
function Concept_C1M1_ElevatorHello3AliveCliffeIntro2(query) { return query.concept == "_C1M1_ElevatorHello3AliveCliffeIntro2"; }
function Concept_C1M1_ElevatorHello2AliveCliffeIntro1(query) { return query.concept == "_C1M1_ElevatorHello2AliveCliffeIntro1"; }
function Concept_C1M1_ElevatorHello2AliveCliffeIntro2(query) { return query.concept == "_C1M1_ElevatorHello2AliveCliffeIntro2"; }
function ConceptPlayer_CliffeGunOwnership(query) { return query.concept == "Player.CliffeGunOwnership"; }
function ConceptPlayer_WhinyCliffe(query) { return query.concept == "Player.WhinyCliffe"; }
function ConceptChargerBeatsCliffe(query) { return query.concept == "ChargerBeatsCliffe"; }
function IsDonorCliffe(query) { return query.itemdonor == "Cliffe"; }
function IsNotDonorCliffe(query) { return query.itemdonor != "Cliffe"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorCliffe(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventCliffe(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// replica ============================================================================================================================

function IsShotMannReplica(query) { return query.worldshotmannreplica > 3; }
function IsNotSaidShotMannequinReplica2(query) { return query.worldsaidshotmannequinreplica2 != 1; }
function IsReplicaActor(query) { return query.replicaactor == 1; }
function IsNotSaidreplicareplicaes(query) { return query.worldsaidreplicareplicaes != 1; }
function Conceptreplicareplicaes(query) { return query.concept == "replicareplicaes"; }
function IsNotReplicaIntroduced(query) { return query.worldreplicaintroduced != 1; }
function IsReplicaIntroduced(query) { return query.worldreplicaintroduced == 1; }
function _auto_NotC4ReplicaInCover(query) { return query.world_auto_c4replicaincover < 1; }
function _auto_NotCaneExitedReplica(query) { return query.world_auto_caneexitedreplica < 1; }
function _auto_NotReplicaAngry(query) { return query.world_auto_replicaangry < 1; }
function _auto_NotReplicaFoodBreak(query) { return query.world_auto_replicafoodbreak < 1; }
function _auto_NotReplicaHappy(query) { return query.world_auto_replicahappy < 1; }
function _auto_IsReplicaInCane(query) { return query.world_auto_replicaincane == 1; }
function _auto_NotReplicaInCane(query) { return query.world_auto_replicaincane < 1; }
function _auto_IsReplicaWavWindow(query) { return query.world_auto_replicawavwindow == 1; }
function _auto_NotLastSurvivorTalkedReplica(query) { return query.world_auto_lastsurvivortalkedreplica < 1; }
function _auto_IsReplicaInWitchville(query) { return query.world_auto_replicainwitchville == 1; }
function _auto_NotReplicaInWitchville(query) { return query.world_auto_replicainwitchville < 1; }
function _auto_ReplicaIsPressing(query) { return query.world_auto_replicapressing == 1; }
function _auto_IsTalkingReplica(query) { return query.world_auto_talkingreplica == 1; }
function _auto_NotTimerLockReplica(query) { return query.world_auto_timerlockreplica < 1; }
function _auto_ReplicaSawC6M3Bill(query) { return query.world_auto_replicac6m3bill == 1; }
function IsNotTalkReplica(query) { return query.talkreplica == 1; }
function IsTalkReplica(query) { return query.talkreplica != 1; }
function IsWorldTalkReplica(query) { return query.worldtalkreplica != 1; }
function IsReplicaNotAlive(query) { return query.isreplicaalive != 1; }
function IsReplicaAlive(query) { return query.isreplicaalive == 1; }
function IsReplicaNear125(query) { return query.disttoreplica < 125; }
function IsReplicaNear200(query) { return query.disttoreplica < 200; }
function IsReplicaNear400(query) { return query.disttoreplica < 400; }
function IsReplicaNear800(query) { return query.disttoreplica < 800; }
function IsReplicaFar400(query) { return query.disttoreplica >= 400; }
function IsReplicaFar1000(query) { return query.disttoreplica > 600; }
function IsNotSaidFaultFriendlyFireReplica(query) { return query.worldsaidfaultfriendlyfirereplica != 1; }
function IsSaidFaultFriendlyFireReplica(query) { return query.worldsaidfaultfriendlyfirereplica == 1; }
function IsShotTeammateReplica(query) { return query.worldshotteammatereplica == 1; }
function IsNotShotTeammateReplica(query) { return query.worldshotteammatereplica != 1; }
function WhoPutColaReplica(query) { return query.worldwhoputcola == "Replica"; }
function PanicEventReplica(query) { return query.whodidit == "Replica"; }
function IsReplica(query) { return query.who == "Replica"; }
function IsTriggeredByReplica(query) { return query.triggeredby == "Replica"; }
function IsDeadReplica(query) { return query.deadcharacter == "Replica"; }
function IsNotDeadReplica(query) { return query.deadcharacter != "Replica"; }
function SubjectIsReplica(query) { return query.subject == "Replica"; }
function SubjectIsNotReplica(query) { return query.subject != "Replica"; }
function FromIsReplica(query) { return query.from == "Replica"; }
function FromIsNotReplica(query) { return query.from != "Replica"; }
function Iswitch_aggro_onReplica(query) { return query.witch_aggro_on == "Replica"; }
function IsNotSaidBeenJockeyedReplica(query) { return query.worldsaidbeenjockeyedreplica != 1; }
function IsSaidBeenJockeyedReplica(query) { return query.worldsaidbeenjockeyedreplica == 1; }
function IsNotSaidReplicaPounced(query) { return query.worldsaidreplicapounced != 1; }
function IsNotNickInsultedReplicaC1(query) { return query.worldnickinsultedreplica != 1; }
function IsSaidC1M3ReplicaFoodCourt(query) { return query.worldsaidc1m3replicafoodcourt == 1; }
function ConceptReplicaSuggestsCrane(query) { return query.concept == "ReplicaSuggestsCrane"; }
function ConceptLaughReplica(query) { return query.concept == "LaughReplica"; }
function NotReplicaMadAtRiders(query) { return query.worldreplicamadatriders < 1; }
function ReplicaMadAtRiders(query) { return query.worldreplicamadatriders == 1; }
function Concept_C2M2_ReplicaApocolypse(query) { return query.concept == "_C2M2_ReplicaApocolypse"; }
function ConceptPlayer_CoverMeC1RReplica1(query) { return query.concept == "Player.CoverMeC1RReplica1"; }
function ConceptPlayer_CoverMeC1RReplica2(query) { return query.concept == "Player.CoverMeC1RReplica2"; }
// function FromSet1(query) { return DirectorScript.FromIsReplica(query) || DirectorScript.FromIsAnOrator(query); }
function ReplicaCake(query) { return query.worldreplicacake == 1; }
function IsDonorReplica(query) { return query.itemdonor == "Replica"; }
function IsNotDonorReplica(query) { return query.itemdonor != "Replica"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorReplica(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsReplicaAVampire(query) { return query.worldc6m1_replicaisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventReplica(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// csgo sas============================================================================================================================

function IsShotMannCsgo_sas(query) { return query.worldshotmanncsgo_sas > 3; }
function IsNotSaidShotMannequinCsgo_sas2(query) { return query.worldsaidshotmannequincsgo_sas2 != 1; }
function Conceptc1m4escapeCsgo_sasCheck(query) { return query.concept == "c1m4escapeCsgo_sasCheck"; }
function Conceptc1m4escapeCsgo_sasCheckFail(query) { return query.concept == "c1m4escapeCsgo_sasCheckFail"; }
function Conceptc1m4escapeCsgo_sasCheckSuccess(query) { return query.concept == "c1m4escapeCsgo_sasCheckSuccess"; }
function IsCsgo_sasActor(query) { return query.csgo_sasactor == 1; }
function IsNotCsgo_sasIntroduced(query) { return query.worldcsgo_sasintroduced != 1; }
function _auto_NotC4Csgo_sasInCover(query) { return query.world_auto_c4csgo_sasincover < 1; }
function _auto_NotCaneExitedCsgo_sas(query) { return query.world_auto_caneexitedcsgo_sas < 1; }
function _auto_NotLastSurvivorTalkedCsgo_sas(query) { return query.world_auto_lastsurvivortalkedcsgo_sas < 1; }
function _auto_IsCsgo_sasInCane(query) { return query.world_auto_csgo_sasincane == 1; }
function _auto_NotCsgo_sasInCane(query) { return query.world_auto_csgo_sasincane < 1; }
function _auto_IsCsgo_sasWavWindow(query) { return query.world_auto_csgo_saswavwindow == 1; }
function _auto_IsCsgo_sasInWitchville(query) { return query.world_auto_csgo_sasinwitchville == 1; }
function _auto_NotCsgo_sasInWitchville(query) { return query.world_auto_csgo_sasinwitchville < 1; }
function _auto_Csgo_sasIsPressing(query) { return query.world_auto_csgo_saspressing == 1; }
function _auto_C5M3Csgo_sasReacted(query) { return query.world_auto_c5m3csgo_sasreacted == 1; }
function _auto_IsTalkingCsgo_sas(query) { return query.world_auto_talkingcsgo_sas == 1; }
function _auto_NotTimerLockCsgo_sas(query) { return query.world_auto_timerlockcsgo_sas < 1; }
function _auto_Csgo_sasSawC6M3Bill(query) { return query.world_auto_csgo_sasc6m3bill == 1; }
function IsNotTalkCsgo_sas(query) { return query.talkcsgo_sas == 1; }
function IsTalkCsgo_sas(query) { return query.talkcsgo_sas != 1; }
function IsWorldTalkCsgo_sas(query) { return query.worldtalkcsgo_sas != 1; }
function IsCsgo_sasNotAlive(query) { return query.iscsgo_sasalive != 1; }
function IsCsgo_sasAlive(query) { return query.iscsgo_sasalive == 1; }
function IsSmallTownBarricadeCsgo_sas(query) { return query.worldsmalltownbarricadecsgo_sas != 1; }
function IsCsgo_sasNear200(query) { return query.disttocsgo_sas < 200; }
function IsCsgo_sasNear300(query) { return query.disttocsgo_sas < 300; }
function IsCsgo_sasNear400(query) { return query.disttocsgo_sas < 400; }
function IsCsgo_sasNear400Weight0(query) { return query.disttocsgo_sas < 400; }
function IsCsgo_sasNear800(query) { return query.disttocsgo_sas < 800; }
function IsCsgo_sasFar400(query) { return query.disttocsgo_sas >= 400; }
function IsCsgo_sasFar1000(query) { return query.disttocsgo_sas > 600; }
function IsNotSaidFaultFriendlyFireCsgo_sas(query) { return query.worldsaidfaultfriendlyfirecsgo_sas != 1; }
function IsSaidFaultFriendlyFireCsgo_sas(query) { return query.worldsaidfaultfriendlyfirecsgo_sas == 1; }
function IsShotTeammateCsgo_sas(query) { return query.worldshotteammatecsgo_sas == 1; }
function IsNotShotTeammateCsgo_sas(query) { return query.worldshotteammatecsgo_sas != 1; }
function IsCsgo_sasCrybaby(query) { return query.worldcsgo_sascrying == 1; }
function WhoPutColaCsgo_sas(query) { return query.worldwhoputcola == "CSGO_SAS"; }
function PanicEventCsgo_sas(query) { return query.whodidit == "CSGO_SAS"; }
function IsCsgo_sas(query) { return query.who == "CSGO_SAS"; }
function IsTriggeredByCsgo_sas(query) { return query.triggeredby == "CSGO_SAS"; }
function IsDeadCsgo_sas(query) { return query.deadcharacter == "CSGO_SAS"; }
function IsNotDeadCsgo_sas(query) { return query.deadcharacter != "CSGO_SAS"; }
function SubjectIsCsgo_sas(query) { return query.subject == "CSGO_SAS"; }
function SubjectIsNotCsgo_sas(query) { return query.subject != "CSGO_SAS"; }
function FromIsCsgo_sas(query) { return query.from == "CSGO_SAS"; }
function FromIsNotCsgo_sas(query) { return query.from != "CSGO_SAS"; }
function Iswitch_aggro_onCsgo_sas(query) { return query.witch_aggro_on == "CSGO_SAS"; }
function IsNotSaidBeenJockeyedCsgo_sas(query) { return query.worldsaidbeenjockeyedcsgo_sas != 1; }
function IsSaidBeenJockeyedCsgo_sas(query) { return query.worldsaidbeenjockeyedcsgo_sas == 1; }
function IsNotSaidCsgo_sasPounced(query) { return query.worldsaidcsgo_saspounced != 1; }
function IsCsgo_sasAlsoWarn(query) { return query.worldcsgo_sasalsowarn == 1; }
function ConceptCsgo_sasInterrupt(query) { return query.concept == "Csgo_sasInterrupt"; }
function Csgo_sasNotTall(query) { return query.worldcsgo_sastalljoke == 1; }
function ConceptC13M1Intro2Csgo_sas(query) { return query.concept == "C13M1Intro2Csgo_sas"; }
function C13M1Csgo_sasNotPanicking(query) { return query.worldc13m1csgo_saspanicking < 1; }
function IsNotSrcGrp_CSGO_SASSTORYINIT(query) { return query.worldsrcgrp_csgo_sasstoryinit < 1; }
function IsNotSrcGrp_CSGO_SASSTORY(query) { return query.worldsrcgrp_csgo_sasstory < 1; }
function ConceptC3M4ButtonAnswerCsgo_sas(query) { return query.concept == "C3M4ButtonAnswerCsgo_sas"; }
function ConceptCsgo_sasStoryReac01(query) { return query.concept == "Csgo_sasStoryReac01"; }
function ConceptC3M4Button104Csgo_sas(query) { return query.concept == "C3M4Button104Csgo_sas"; }
function ConceptC6M2Csgo_sasStoryStart1(query) { return query.concept == "C6M2Csgo_sasStoryStart1"; }
function ConceptC6M3Csgo_sasBridgeStory1(query) { return query.concept == "C6M3Csgo_sasBridgeStory1"; }
function ConceptC6M3Csgo_sasBridgeStory1a(query) { return query.concept == "C6M3Csgo_sasBridgeStory1a"; }
function ConceptWorldC6M3_ByBridge01Csgo_sas(query) { return query.concept == "WorldC6M3_ByBridge01Csgo_sas"; }
function IsCsgo_sasInLoveC6M1(query) { return query.worldcsgo_sasinlovec6m1 == 1; }
function IsDonorCsgo_sas(query) { return query.itemdonor == "CSGO_SAS"; }
function IsNotDonorCsgo_sas(query) { return query.itemdonor != "CSGO_SAS"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorCsgo_sas(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsSaidOpenedGate1BlameCsgo_sas(query) { return query.worldsaidopenedgate1blamecsgo_sas == 1; }
function IsNotSaidCsgo_sasBridgeStoryStart(query) { return query.worldsaidcsgo_sasbridgestorystart != 1; }
function IsEndCsgo_sasBridgeStoryStart(query) { return query.worldendcsgo_sasbridgestorystart == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventCsgo_sas(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// ada ============================================================================================================================

function IsShotMannAda(query) { return query.worldshotmannada > 3; }
function IsNotSaidShotMannequinAda2(query) { return query.worldsaidshotmannequinada != 1; }
function IsAdaActor(query) { return query.adaactor == 1; }
function IsAdaElevatorIntro(query) { return query.worldadaelevatorintro == 1; }
function IsNotAdaIntroduced(query) { return query.worldadaintroduced != 1; }
function _auto_NotC4AdaInCover(query) { return query.world_auto_c4adaincover < 1; }
function _auto_NotCaneExitedAda(query) { return query.world_auto_caneexitedada < 1; }
function _auto_NotLastSurvivorTalkedAda(query) { return query.world_auto_lastsurvivortalkedada < 1; }
function _auto_IsAdaInCane(query) { return query.world_auto_adaincane == 1; }
function _auto_NotAdaInCane(query) { return query.world_auto_adaincane < 1; }
function _auto_IsAdaWavWindow(query) { return query.world_auto_adawavwindow == 1; }
function _auto_IsAdaInWitchville(query) { return query.world_auto_adainwitchville == 1; }
function _auto_NotAdaInWitchville(query) { return query.world_auto_adainwitchville < 1; }
function _auto_AdaIsPressing(query) { return query.world_auto_adapressing == 1; }
function _auto_IsTalkingAda(query) { return query.world_auto_talkingada == 1; }
function _auto_NotTimerLockAda(query) { return query.world_auto_timerlockada < 1; }
function IsNotTalkAda(query) { return query.talkada == 1; }
function IsTalkAda(query) { return query.talkada != 1; }
function IsWorldTalkAda(query) { return query.worldtalkada != 1; }
function IsAdaNotAlive(query) { return query.isadaalive != 1; }
function IsAdaAlive(query) { return query.isadaalive == 1; }
function IsSmallTownBarricadeAda(query) { return query.worldsmalltownbarricadeada != 1; }
function IsAdaNear200(query) { return query.disttoada < 200; }
function IsAdaNear400(query) { return query.disttoada < 400; }
function IsAdaNear800(query) { return query.disttoada < 800; }
function IsAdaFar400(query) { return query.disttoada >= 400; }
function IsAdaFar1000(query) { return query.disttoada > 600; }
function IsNotSaidFaultFriendlyFireAda(query) { return query.worldsaidfaultfriendlyfireada != 1; }
function IsSaidFaultFriendlyFireAda(query) { return query.worldsaidfaultfriendlyfireada == 1; }
function IsShotTeammateAda(query) { return query.worldshotteammateada == 1; }
function IsNotShotTeammateAda(query) { return query.worldshotteammateada != 1; }
function WhoPutColaAda(query) { return query.worldwhoputcola == "Ada"; }
function PanicEventAda(query) { return query.whodidit == "Ada"; }
function IsAda(query) { return query.who == "Ada"; }
function IsTriggeredByAda(query) { return query.triggeredby == "Ada"; }
function IsDeadAda(query) { return query.deadcharacter == "Ada"; }
function IsNotDeadAda(query) { return query.deadcharacter != "Ada"; }
function SubjectIsAda(query) { return query.subject == "Ada"; }
function SubjectIsNotAda(query) { return query.subject != "Ada"; }
function FromIsAda(query) { return query.from == "Ada"; }
function FromIsNotAda(query) { return query.from != "Ada"; }
function Iswitch_aggro_onAda(query) { return query.witch_aggro_on == "Ada"; }
function IsNotSaidBeenJockeyedAda(query) { return query.worldsaidbeenjockeyedada != 1; }
function IsSaidBeenJockeyedAda(query) { return query.worldsaidbeenjockeyedada == 1; }
function IsNotSaidAdaPounced(query) { return query.worldsaidadapounced != 1; }
function ConceptAdaSuggestsCrane(query) { return query.concept == "AdaSuggestsCrane"; }
function ConceptLaughAda(query) { return query.concept == "LaughAda"; }
function Concept_C1M1_ElevatorHello3AliveAdaIntro(query) { return query.concept == "_C1M1_ElevatorHello3AliveAdaIntro"; }
function IsDonorAda(query) { return query.itemdonor == "Ada"; }
function IsNotDonorAda(query) { return query.itemdonor != "Ada"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorAda(query) || DirectorScript.IsDonorUnknown(query); }
function IsAdaAVampire(query) { return query.worldc6m1_adaisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventAda(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// wesker ============================================================================================================================

function IsShotMannWesker(query) { return query.worldshotmannwesker > 3; }
function IsNotSaidShotMannequinWesker2(query) { return query.worldsaidshotmannequinwesker2 != 1; }
function IsWeskerActor(query) { return query.weskeractor == 1; }
function IsNotWeskerIntroduced(query) { return query.worldweskerintroduced != 1; }
function _auto_NotC4WeskerInCover(query) { return query.world_auto_c4weskerincover < 1; }
function _auto_NotCaneExitedWesker(query) { return query.world_auto_caneexitedwesker < 1; }
function _auto_IsWeskerInCane(query) { return query.world_auto_weskerincane == 1; }
function _auto_NotWeskerInCane(query) { return query.world_auto_weskerincane < 1; }
function _auto_IsWeskerWavWindow(query) { return query.world_auto_weskerwavwindow == 1; }
function _auto_NotLastSurvivorTalkedWesker(query) { return query.world_auto_lastsurvivortalkedwesker < 1; }
function _auto_IsWeskerInWitchville(query) { return query.world_auto_weskerinwitchville == 1; }
function _auto_NotWeskerInWitchville(query) { return query.world_auto_weskerinwitchville < 1; }
function _auto_WeskerIsPressing(query) { return query.world_auto_weskerpressing == 1; }
function _auto_IsTalkingWesker(query) { return query.world_auto_talkingwesker == 1; }
function _auto_NotTimerLockWesker(query) { return query.world_auto_timerlockwesker < 1; }
function _auto_WeskerSawC6M3Bill(query) { return query.world_auto_weskerc6m3bill == 1; }
function IsNotTalkWesker(query) { return query.talkwesker == 1; }
function IsTalkWesker(query) { return query.talkwesker != 1; }
function IsWorldTalkWesker(query) { return query.worldtalkwesker != 1; }
function IsWeskerNotAlive(query) { return query.isweskeralive != 1; }
function IsWeskerAlive(query) { return query.isweskeralive == 1; }
function IsSmallTownBarricadeWesker(query) { return query.worldsmalltownbarricadewesker != 1; }
function IsWeskerNear200(query) { return query.disttowesker < 200; }
function IsWeskerNear400(query) { return query.disttowesker < 400; }
function IsWeskerNear800(query) { return query.disttowesker < 800; }
function IsWeskerFar400(query) { return query.disttowesker >= 400; }
function IsWeskerFar1000(query) { return query.disttowesker > 600; }
function IsNotSaidFaultFriendlyFireWesker(query) { return query.worldsaidfaultfriendlyfirewesker != 1; }
function IsSaidFaultFriendlyFireWesker(query) { return query.worldsaidfaultfriendlyfirewesker == 1; }
function IsShotTeammateWesker(query) { return query.worldshotteammatewesker == 1; }
function IsNotShotTeammateWesker(query) { return query.worldshotteammatewesker != 1; }
function WhoPutColaWesker(query) { return query.worldwhoputcola == "Wesker"; }
function PanicEventWesker(query) { return query.whodidit == "Wesker"; }
function IsWesker(query) { return query.who == "Wesker"; }
function IsTriggeredByWesker(query) { return query.triggeredby == "Wesker"; }
function IsDeadWesker(query) { return query.deadcharacter == "Wesker"; }
function IsNotDeadWesker(query) { return query.deadcharacter != "Wesker"; }
function SubjectIsWesker(query) { return query.subject == "Wesker"; }
function SubjectIsNotWesker(query) { return query.subject != "Wesker"; }
function FromIsWesker(query) { return query.from == "Wesker"; }
function FromIsNotWesker(query) { return query.from != "Wesker"; }
function Iswitch_aggro_onWesker(query) { return query.witch_aggro_on == "Wesker"; }
function IsNotSaidBeenJockeyedWesker(query) { return query.worldsaidbeenjockeyedwesker != 1; }
function IsSaidBeenJockeyedWesker(query) { return query.worldsaidbeenjockeyedwesker == 1; }
function IsNotSaidWeskerPounced(query) { return query.worldsaidweskerpounced != 1; }
function IsNotWeskerInsultedCoachC1(query) { return query.worldweskerinsultedcoach != 1; }
function ConceptWeskerC1Attitude(query) { return query.concept == "WeskerC1Attitude"; }
function WeskerOCD(query) { return query.worldweskerocd != 1; }
function C13M1EllisNotPaweskering(query) { return query.worldc13m1ellispaweskering < 1; }
function Concept_C1M1_ElevatorHello3AliveWeskerIntro1(query) { return query.concept == "_C1M1_ElevatorHello3AliveWeskerIntro1"; }
function Concept_C1M1_ElevatorHello3AliveWeskerIntro2(query) { return query.concept == "_C1M1_ElevatorHello3AliveWeskerIntro2"; }
function Concept_C1M1_ElevatorHello2AliveWeskerIntro1(query) { return query.concept == "_C1M1_ElevatorHello2AliveWeskerIntro1"; }
function Concept_C1M1_ElevatorHello2AliveWeskerIntro2(query) { return query.concept == "_C1M1_ElevatorHello2AliveWeskerIntro2"; }
function ConceptPlayer_WeskerGunOwnership(query) { return query.concept == "Player.WeskerGunOwnership"; }
function ConceptPlayer_WhinyWesker(query) { return query.concept == "Player.WhinyWesker"; }
function ConceptChargerBeatsWesker(query) { return query.concept == "ChargerBeatsWesker"; }
function IsDonorWesker(query) { return query.itemdonor == "Wesker"; }
function IsNotDonorWesker(query) { return query.itemdonor != "Wesker"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorWesker(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventWesker(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// barry ============================================================================================================================

function IsShotMannBarry(query) { return query.worldshotmannbarry > 3; }
function IsNotSaidShotMannequinBarry2(query) { return query.worldsaidshotmannequinbarry2 != 1; }
function IsBarryActor(query) { return query.barryactor == 1; }
function IsNotSaidbarrybarryes(query) { return query.worldsaidbarrybarryes != 1; }
function Conceptbarrybarryes(query) { return query.concept == "barrybarryes"; }
function IsNotBarryIntroduced(query) { return query.worldbarryintroduced != 1; }
function IsBarryIntroduced(query) { return query.worldbarryintroduced == 1; }
function _auto_NotC4BarryInCover(query) { return query.world_auto_c4barryincover < 1; }
function _auto_NotCaneExitedBarry(query) { return query.world_auto_caneexitedbarry < 1; }
function _auto_NotBarryAngry(query) { return query.world_auto_barryangry < 1; }
function _auto_NotBarryFoodBreak(query) { return query.world_auto_barryfoodbreak < 1; }
function _auto_NotBarryHappy(query) { return query.world_auto_barryhappy < 1; }
function _auto_IsBarryInCane(query) { return query.world_auto_barryincane == 1; }
function _auto_NotBarryInCane(query) { return query.world_auto_barryincane < 1; }
function _auto_IsBarryWavWindow(query) { return query.world_auto_barrywavwindow == 1; }
function _auto_NotLastSurvivorTalkedBarry(query) { return query.world_auto_lastsurvivortalkedbarry < 1; }
function _auto_IsBarryInWitchville(query) { return query.world_auto_barryinwitchville == 1; }
function _auto_NotBarryInWitchville(query) { return query.world_auto_barryinwitchville < 1; }
function _auto_BarryIsPressing(query) { return query.world_auto_barrypressing == 1; }
function _auto_IsTalkingBarry(query) { return query.world_auto_talkingbarry == 1; }
function _auto_NotTimerLockBarry(query) { return query.world_auto_timerlockbarry < 1; }
function _auto_BarrySawC6M3Bill(query) { return query.world_auto_barryc6m3bill == 1; }
function IsNotTalkBarry(query) { return query.talkbarry == 1; }
function IsTalkBarry(query) { return query.talkbarry != 1; }
function IsWorldTalkBarry(query) { return query.worldtalkbarry != 1; }
function IsBarryNotAlive(query) { return query.isbarryalive != 1; }
function IsBarryAlive(query) { return query.isbarryalive == 1; }
function IsBarryNear125(query) { return query.disttobarry < 125; }
function IsBarryNear200(query) { return query.disttobarry < 200; }
function IsBarryNear400(query) { return query.disttobarry < 400; }
function IsBarryNear800(query) { return query.disttobarry < 800; }
function IsBarryFar400(query) { return query.disttobarry >= 400; }
function IsBarryFar1000(query) { return query.disttobarry > 600; }
function IsNotSaidFaultFriendlyFireBarry(query) { return query.worldsaidfaultfriendlyfirebarry != 1; }
function IsSaidFaultFriendlyFireBarry(query) { return query.worldsaidfaultfriendlyfirebarry == 1; }
function IsShotTeammateBarry(query) { return query.worldshotteammatebarry == 1; }
function IsNotShotTeammateBarry(query) { return query.worldshotteammatebarry != 1; }
function WhoPutColaBarry(query) { return query.worldwhoputcola == "Barry"; }
function PanicEventBarry(query) { return query.whodidit == "Barry"; }
function IsBarry(query) { return query.who == "Barry"; }
function IsTriggeredByBarry(query) { return query.triggeredby == "Barry"; }
function IsDeadBarry(query) { return query.deadcharacter == "Barry"; }
function IsNotDeadBarry(query) { return query.deadcharacter != "Barry"; }
function SubjectIsBarry(query) { return query.subject == "Barry"; }
function SubjectIsNotBarry(query) { return query.subject != "Barry"; }
function FromIsBarry(query) { return query.from == "Barry"; }
function FromIsNotBarry(query) { return query.from != "Barry"; }
function Iswitch_aggro_onBarry(query) { return query.witch_aggro_on == "Barry"; }
function IsNotSaidBeenJockeyedBarry(query) { return query.worldsaidbeenjockeyedbarry != 1; }
function IsSaidBeenJockeyedBarry(query) { return query.worldsaidbeenjockeyedbarry == 1; }
function IsNotSaidBarryPounced(query) { return query.worldsaidbarrypounced != 1; }
function IsNotNickInsultedBarryC1(query) { return query.worldnickinsultedbarry != 1; }
function IsSaidC1M3BarryFoodCourt(query) { return query.worldsaidc1m3barryfoodcourt == 1; }
function ConceptBarrySuggestsCrane(query) { return query.concept == "BarrySuggestsCrane"; }
function ConceptLaughBarry(query) { return query.concept == "LaughBarry"; }
function NotBarryMadAtRiders(query) { return query.worldbarrymadatriders < 1; }
function BarryMadAtRiders(query) { return query.worldbarrymadatriders == 1; }
function Concept_C2M2_BarryApocolypse(query) { return query.concept == "_C2M2_BarryApocolypse"; }
function ConceptPlayer_CoverMeC1RBarry1(query) { return query.concept == "Player.CoverMeC1RBarry1"; }
function ConceptPlayer_CoverMeC1RBarry2(query) { return query.concept == "Player.CoverMeC1RBarry2"; }
// function FromSet1(query) { return DirectorScript.FromIsBarry(query) || DirectorScript.FromIsAnOrator(query); }
function BarryCake(query) { return query.worldbarrycake == 1; }
function IsDonorBarry(query) { return query.itemdonor == "Barry"; }
function IsNotDonorBarry(query) { return query.itemdonor != "Barry"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorBarry(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsBarryAVampire(query) { return query.worldc6m1_barryisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventBarry(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// chris ============================================================================================================================

function IsShotMannChris(query) { return query.worldshotmannchris > 3; }
function IsNotSaidShotMannequinChris2(query) { return query.worldsaidshotmannequinchris2 != 1; }
function IsChrisActor(query) { return query.chrisactor == 1; }
function IsNotSaidchrischrises(query) { return query.worldsaidchrischrises != 1; }
function Conceptchrischrises(query) { return query.concept == "chrischrises"; }
function IsNotChrisIntroduced(query) { return query.worldchrisintroduced != 1; }
function IsChrisIntroduced(query) { return query.worldchrisintroduced == 1; }
function _auto_NotC4ChrisInCover(query) { return query.world_auto_c4chrisincover < 1; }
function _auto_NotCaneExitedChris(query) { return query.world_auto_caneexitedchris < 1; }
function _auto_NotChrisAngry(query) { return query.world_auto_chrisangry < 1; }
function _auto_NotChrisFoodBreak(query) { return query.world_auto_chrisfoodbreak < 1; }
function _auto_NotChrisHappy(query) { return query.world_auto_chrishappy < 1; }
function _auto_IsChrisInCane(query) { return query.world_auto_chrisincane == 1; }
function _auto_NotChrisInCane(query) { return query.world_auto_chrisincane < 1; }
function _auto_IsChrisWavWindow(query) { return query.world_auto_chriswavwindow == 1; }
function _auto_NotLastSurvivorTalkedChris(query) { return query.world_auto_lastsurvivortalkedchris < 1; }
function _auto_IsChrisInWitchville(query) { return query.world_auto_chrisinwitchville == 1; }
function _auto_NotChrisInWitchville(query) { return query.world_auto_chrisinwitchville < 1; }
function _auto_ChrisIsPressing(query) { return query.world_auto_chrispressing == 1; }
function _auto_IsTalkingChris(query) { return query.world_auto_talkingchris == 1; }
function _auto_NotTimerLockChris(query) { return query.world_auto_timerlockchris < 1; }
function _auto_ChrisSawC6M3Bill(query) { return query.world_auto_chrisc6m3bill == 1; }
function IsNotTalkChris(query) { return query.talkchris == 1; }
function IsTalkChris(query) { return query.talkchris != 1; }
function IsWorldTalkChris(query) { return query.worldtalkchris != 1; }
function IsChrisNotAlive(query) { return query.ischrisalive != 1; }
function IsChrisAlive(query) { return query.ischrisalive == 1; }
function IsChrisNear125(query) { return query.disttochris < 125; }
function IsChrisNear200(query) { return query.disttochris < 200; }
function IsChrisNear400(query) { return query.disttochris < 400; }
function IsChrisNear800(query) { return query.disttochris < 800; }
function IsChrisFar400(query) { return query.disttochris >= 400; }
function IsChrisFar1000(query) { return query.disttochris > 600; }
function IsNotSaidFaultFriendlyFireChris(query) { return query.worldsaidfaultfriendlyfirechris != 1; }
function IsSaidFaultFriendlyFireChris(query) { return query.worldsaidfaultfriendlyfirechris == 1; }
function IsShotTeammateChris(query) { return query.worldshotteammatechris == 1; }
function IsNotShotTeammateChris(query) { return query.worldshotteammatechris != 1; }
function WhoPutColaChris(query) { return query.worldwhoputcola == "Chris"; }
function PanicEventChris(query) { return query.whodidit == "Chris"; }
function IsChris(query) { return query.who == "Chris"; }
function IsTriggeredByChris(query) { return query.triggeredby == "Chris"; }
function IsDeadChris(query) { return query.deadcharacter == "Chris"; }
function IsNotDeadChris(query) { return query.deadcharacter != "Chris"; }
function SubjectIsChris(query) { return query.subject == "Chris"; }
function SubjectIsNotChris(query) { return query.subject != "Chris"; }
function FromIsChris(query) { return query.from == "Chris"; }
function FromIsNotChris(query) { return query.from != "Chris"; }
function Iswitch_aggro_onChris(query) { return query.witch_aggro_on == "Chris"; }
function IsNotSaidBeenJockeyedChris(query) { return query.worldsaidbeenjockeyedchris != 1; }
function IsSaidBeenJockeyedChris(query) { return query.worldsaidbeenjockeyedchris == 1; }
function IsNotSaidChrisPounced(query) { return query.worldsaidchrispounced != 1; }
function IsNotNickInsultedChrisC1(query) { return query.worldnickinsultedchris != 1; }
function IsSaidC1M3ChrisFoodCourt(query) { return query.worldsaidc1m3chrisfoodcourt == 1; }
function ConceptChrisSuggestsCrane(query) { return query.concept == "ChrisSuggestsCrane"; }
function ConceptLaughChris(query) { return query.concept == "LaughChris"; }
function NotChrisMadAtRiders(query) { return query.worldchrismadatriders < 1; }
function ChrisMadAtRiders(query) { return query.worldchrismadatriders == 1; }
function Concept_C2M2_ChrisApocolypse(query) { return query.concept == "_C2M2_ChrisApocolypse"; }
function ConceptPlayer_CoverMeC1RChris1(query) { return query.concept == "Player.CoverMeC1RChris1"; }
function ConceptPlayer_CoverMeC1RChris2(query) { return query.concept == "Player.CoverMeC1RChris2"; }
// function FromSet1(query) { return DirectorScript.FromIsChris(query) || DirectorScript.FromIsAnOrator(query); }
function ChrisCake(query) { return query.worldchriscake == 1; }
function IsDonorChris(query) { return query.itemdonor == "Chris"; }
function IsNotDonorChris(query) { return query.itemdonor != "Chris"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorChris(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsChrisAVampire(query) { return query.worldc6m1_chrisisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventChris(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// claire ============================================================================================================================

function ConceptBlockChurchGuyClaireNo(query) { return query.concept == "ConceptBlockChurchGuyClaireNo"; }
function _auto_NotC4ClaireInCover(query) { return query.world_auto_c4claireincover < 1; }
function _auto_NotLastSurvivorTalkedClaire(query) { return query.world_auto_lastsurvivortalkedclaire < 1; }
function _auto_ClaireIsPressing(query) { return query.world_auto_clairepressing == 1; }
function _auto_IsTalkingClaire(query) { return query.world_auto_talkingclaire == 1; }
function _auto_IsClaireInCane(query) { return query.world_auto_claireincane == 1; }
function _auto_NotClaireInCane(query) { return query.world_auto_claireincane < 1; }
function _auto_IsClaireWavWindow(query) { return query.world_auto_clairewavwindow == 1; }
function _auto_NotTimerLockClaire(query) { return query.world_auto_timerlockclaire < 1; }
function _auto_NotC7M3PressingClaire(query) { return query.world_auto_c7m3pressingclaire < 1; }
function _auto_NotC7M3ToBridgeClaire(query) { return query.world_auto_c7m3tobridgeclaire < 1; }
function ClaireNotPickedUpItem(query) { return query.clairepickedupitem != 1; }
function IsClaireFriendlyFire(query) { return query.worldclairefriendlyfire == 1; }
function IsNotClaireFriendlyFire(query) { return query.worldclairefriendlyfire != 1; }
function IsNotAskedForCoverClaire(query) { return query.claireaskforcover != 1; }
function IsNotSaidBattleStationsClaire(query) { return query.worldsaidbattlestationsclaire != 1; }
function IsNotSaidBeenJockeyedClaire(query) { return query.saidbeenjockeyedclaire != 1; }
function ClaireNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function IsNotSaidFaultFriendlyFireClaire(query) { return query.worldsaidfaultfriendlyfireclaire != 1; }
function IsSaidFaultFriendlyFireClaire(query) { return query.worldsaidfaultfriendlyfireclaire == 1; }
function IsShotTeammateClaire(query) { return query.worldshotteammateclaire == 1; }
function IsNotShotTeammateClaire(query) { return query.worldshotteammateclaire != 1; }
function IsCrashFinalePressingClaire(query) { return query.worldcrashfinalepressingclaire == 1; }
function NotNagCrashClaire(query) { return query.worldnagcrashclaire < 1; }
function ConceptC7M3FinalSpeakClaire(query) { return query.concept == "C7M3FinalSpeakClaire"; }
function NotSacrificedClaire(query) { return query.worldsacrificed != "Claire"; }
function SacrificedClaire(query) { return query.worldsacrificed == "Claire"; }
function IsNotTalkClaire(query) { return query.talkclaire == 1; }
function IsTalkClaire(query) { return query.talkclaire != 1; }
function IsWorldTalkClaire(query) { return query.worldtalkclaire != 1; }
function IsClaireAlive(query) { return query.isclairealive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsClaireAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsNamVetAlive(query); }
function NotClaireAlive(query) { return query.isclairealive == 0; }
function IsClaireNear200(query) { return query.disttoclaire < 200; }
function IsClaireNear400(query) { return query.disttoclaire < 400; }
function IsClaireNear500(query) { return query.disttoclaire < 500; }
function IsClaireNear800(query) { return query.disttoclaire < 800; }
function IsClaireFar400(query) { return query.disttoclaire >= 400; }
function IsClaireFar1000(query) { return query.disttoclaire > 600; }
function IsClaire(query) { return query.who == "Claire"; }
function IsDeadClaire(query) { return query.deadcharacter == "Claire"; }
function IsTeam4Claire(query) { return query.name == "silver_claire"; }
function SubjectIsClaire(query) { return query.subject == "Claire"; }
function SubjectIsNotClaire(query) { return query.subject != "Claire"; }
function FromIsClaire(query) { return query.from == "Claire"; }
function FromIsNotClaire(query) { return query.from != "Claire"; }
function Iswitch_aggro_onClaire(query) { return query.witch_aggro_on == "Claire"; }
function IsNotSaidBeenJockeyedClaire(query) { return query.worldsaidbeenjockeyedclaire != 1; }
function IsNotMentionedClaireC6M2(query) { return query.worldmentionedclairec6m2 != 1; }
function IsClaireIntroActor(query) { return query.introactor == "Claire"; }
function IsDonorClaire(query) { return query.itemdonor == "Claire"; }
function IsNotDonorClaire(query) { return query.itemdonor != "Claire"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorClaire(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function ConceptPlayerSuggestHealthClaire(query) { return query.concept == "PlayerSuggestHealthClaire"; }
function ConceptTakeShotgunGroovyClaire(query) { return query.concept == "TakeShotgunGroovyClaire"; }
function ConceptTakeShotgunGroovyClaire2Biker(query) { return query.concept == "TakeShotgunGroovyClaire2Biker"; }
function IsSmallTownBarricadeClaire(query) { return query.worldsmalltownbarricadeclaire != 1; }
function PanicEventClaire(query) { return query.whodidit == "Claire"; }
function IsTriggeredByClaire(query) { return query.triggeredby == "Claire"; }
function IsNotSaidClairePounced(query) { return query.worldsaidclairepounced != 1; }
function IsNotSaidLaughClaire(query) { return query.worldsaidlaughclaire != 1; }
function IsNotSaidClaireSuggestsCrane(query) { return query.worldsaidclairesuggestscrane != 1; }
function ConceptClaireSuggestsCrane(query) { return query.concept == "ClaireSuggestsCrane"; }
function ConceptLaughClaire(query) { return query.concept == "LaughClaire"; }
function ConceptTakeShotgunGroovyClaire(query) { return query.concept == "TakeShotgunGroovyClaire"; }
function ConceptTakeShotgunGroovyClaire2Biker(query) { return query.concept == "TakeShotgunGroovyClaire2Biker"; }
function IsSmallTownBarricadeClaire(query) { return query.worldsmalltownbarricadeclaire != 1; }
function PanicEventClaire(query) { return query.whodidit == "Claire"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventClaire(query); }
function IsTriggeredByClaire(query) { return query.triggeredby == "Claire"; }
function IsNotSaidClairePounced(query) { return query.worldsaidclairepounced != 1; }
function IsNotSaidLaughClaire(query) { return query.worldsaidlaughclaire != 1; }
function IsNotSaidClaireSuggestsCrane(query) { return query.worldsaidclairesuggestscrane != 1; }
function ConceptClaireSuggestsCrane(query) { return query.concept == "ClaireSuggestsCrane"; }
function ConceptLaughClaire(query) { return query.concept == "LaughClaire"; }

// clementine ============================================================================================================================

function IsShotMannClementine(query) { return query.worldshotmannclementine > 3; }
function IsNotSaidShotMannequinClementine2(query) { return query.worldsaidshotmannequinclementine != 1; }
function IsClementineActor(query) { return query.clementineactor == 1; }
function IsClementineElevatorIntro(query) { return query.worldclementineelevatorintro == 1; }
function IsNotClementineIntroduced(query) { return query.worldclementineintroduced != 1; }
function _auto_NotC4ClementineInCover(query) { return query.world_auto_c4clementineincover < 1; }
function _auto_NotCaneExitedClementine(query) { return query.world_auto_caneexitedclementine < 1; }
function _auto_NotLastSurvivorTalkedClementine(query) { return query.world_auto_lastsurvivortalkedclementine < 1; }
function _auto_IsClementineInCane(query) { return query.world_auto_clementineincane == 1; }
function _auto_NotClementineInCane(query) { return query.world_auto_clementineincane < 1; }
function _auto_IsClementineWavWindow(query) { return query.world_auto_clementinewavwindow == 1; }
function _auto_IsClementineInWitchville(query) { return query.world_auto_clementineinwitchville == 1; }
function _auto_NotClementineInWitchville(query) { return query.world_auto_clementineinwitchville < 1; }
function _auto_ClementineIsPressing(query) { return query.world_auto_clementinepressing == 1; }
function _auto_IsTalkingClementine(query) { return query.world_auto_talkingclementine == 1; }
function _auto_NotTimerLockClementine(query) { return query.world_auto_timerlockclementine < 1; }
function IsNotTalkClementine(query) { return query.talkclementine == 1; }
function IsTalkClementine(query) { return query.talkclementine != 1; }
function IsWorldTalkClementine(query) { return query.worldtalkclementine != 1; }
function IsClementineNotAlive(query) { return query.isclementinealive != 1; }
function IsClementineAlive(query) { return query.isclementinealive == 1; }
function IsSmallTownBarricadeClementine(query) { return query.worldsmalltownbarricadeclementine != 1; }
function IsClementineNear200(query) { return query.disttoclementine < 200; }
function IsClementineNear400(query) { return query.disttoclementine < 400; }
function IsClementineNear800(query) { return query.disttoclementine < 800; }
function IsClementineFar400(query) { return query.disttoclementine >= 400; }
function IsClementineFar1000(query) { return query.disttoclementine > 600; }
function IsNotSaidFaultFriendlyFireClementine(query) { return query.worldsaidfaultfriendlyfireclementine != 1; }
function IsSaidFaultFriendlyFireClementine(query) { return query.worldsaidfaultfriendlyfireclementine == 1; }
function IsShotTeammateClementine(query) { return query.worldshotteammateclementine == 1; }
function IsNotShotTeammateClementine(query) { return query.worldshotteammateclementine != 1; }
function WhoPutColaClementine(query) { return query.worldwhoputcola == "Clementine"; }
function PanicEventClementine(query) { return query.whodidit == "Clementine"; }
function IsClementine(query) { return query.who == "Clementine"; }
function IsTriggeredByClementine(query) { return query.triggeredby == "Clementine"; }
function IsDeadClementine(query) { return query.deadcharacter == "Clementine"; }
function IsNotDeadClementine(query) { return query.deadcharacter != "Clementine"; }
function SubjectIsClementine(query) { return query.subject == "Clementine"; }
function SubjectIsNotClementine(query) { return query.subject != "Clementine"; }
function FromIsClementine(query) { return query.from == "Clementine"; }
function FromIsNotClementine(query) { return query.from != "Clementine"; }
function Iswitch_aggro_onClementine(query) { return query.witch_aggro_on == "Clementine"; }
function IsNotSaidBeenJockeyedClementine(query) { return query.worldsaidbeenjockeyedclementine != 1; }
function IsSaidBeenJockeyedClementine(query) { return query.worldsaidbeenjockeyedclementine == 1; }
function IsNotSaidClementinePounced(query) { return query.worldsaidclementinepounced != 1; }
function ConceptClementineSuggestsCrane(query) { return query.concept == "ClementineSuggestsCrane"; }
function ConceptLaughClementine(query) { return query.concept == "LaughClementine"; }
function Concept_C1M1_ElevatorHello3AliveClementineIntro(query) { return query.concept == "_C1M1_ElevatorHello3AliveClementineIntro"; }
function IsDonorClementine(query) { return query.itemdonor == "Clementine"; }
function IsNotDonorClementine(query) { return query.itemdonor != "Clementine"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorClementine(query) || DirectorScript.IsDonorUnknown(query); }
function IsClementineAVampire(query) { return query.worldc6m1_clementineisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventClementine(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// dina ============================================================================================================================

function DinaNotPickedUpItem(query) { return query.dinapickedupitem != 1; }
function IsDinaFriendlyFire(query) { return query.worlddinafriendlyfire == 1; }
function IsNotDinaFriendlyFire(query) { return query.worlddinafriendlyfire != 1; }
function IsNotAskedForCoverDina(query) { return query.dinaaskforcover != 1; }
function IsNotSaidBattleStationsDina(query) { return query.worldsaidbattlestationsdina != 1; }
function IsNotSaidBeenJockeyedDina(query) { return query.saidbeenjockeyeddina != 1; }
function DinaNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function IsNotSaidC7M3DinaDownFinal(query) { return query.c7m3dinadownfinal != 1; }
function _auto_NotC4DinaInCover(query) { return query.world_auto_c4dinaincover < 1; }
function _auto_NotLastSurvivorTalkedDina(query) { return query.world_auto_lastsurvivortalkeddina < 1; }
function _auto_IsDinaInCane(query) { return query.world_auto_dinaincane == 1; }
function _auto_NotDinaInCane(query) { return query.world_auto_dinaincane < 1; }
function _auto_IsDinaWavWindow(query) { return query.world_auto_dinawavwindow == 1; }
function _auto_DinaIsPressing(query) { return query.world_auto_dinapressing == 1; }
function _auto_IsTalkingDina(query) { return query.world_auto_talkingdina == 1; }
function _auto_NotTimerLockDina(query) { return query.world_auto_timerlockdina < 1; }
function _auto_NotC7M3PressingDina(query) { return query.world_auto_c7m3pressingdina < 1; }
function _auto_NotC7M3ToBridgeDina(query) { return query.world_auto_c7m3tobridgedina < 1; }
function IsNotSaidFaultFriendlyFireDina(query) { return query.worldsaidfaultfriendlyfiredina != 1; }
function IsSaidFaultFriendlyFireDina(query) { return query.worldsaidfaultfriendlyfiredina == 1; }
function IsShotTeammateDina(query) { return query.worldshotteammatedina == 1; }
function IsNotShotTeammateDina(query) { return query.worldshotteammatedina != 1; }
function ConceptNeedsHelpResponseDinaB2(query) { return query.concept == "NeedsHelpResponseDinaB2"; }
function ConceptNeedsHelpResponseDinaC2(query) { return query.concept == "NeedsHelpResponseDinaC2"; }
function IsCrashFinalePressingDina(query) { return query.worldcrashfinalepressingdina == 1; }
function NotNagCrashDina(query) { return query.worldnagcrashdina < 1; }
function ConceptNeedsHelpResponseDinaB2(query) { return query.concept == "NeedsHelpResponseDinaB2"; }
function ConceptNeedsHelpResponseDinaC2(query) { return query.concept == "NeedsHelpResponseDinaC2"; }
function ConceptC7M3FinalSpeakDina(query) { return query.concept == "C7M3FinalSpeakDina"; }
function NotSacrificedDina(query) { return query.worldsacrificed != "Dina"; }
function SacrificedDina(query) { return query.worldsacrificed == "Dina"; }
function IsNotTalkDina(query) { return query.talkdina == 1; }
function IsTalkDina(query) { return query.talkdina != 1; }
function IsWorldTalkDina(query) { return query.worldtalkdina != 1; }
function IsDinaAlive(query) { return query.isdinaalive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsTeenGirlAlive(query) || DirectorScript.IsDinaAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsNamVetAlive(query); }
function NotDinaAlive(query) { return query.isdinaalive == 0; }
function IsDinaNear200(query) { return query.disttodina < 200; }
function IsDinaNear400(query) { return query.disttodina < 400; }
function IsDinaNear500(query) { return query.disttodina < 500; }
function IsDinaNear800(query) { return query.disttodina < 800; }
function IsDinaFar400(query) { return query.disttodina >= 400; }
function IsDinaFar1000(query) { return query.disttodina > 600; }
function IsDina(query) { return query.who == "Dina"; }
function IsDeadDina(query) { return query.deadcharacter == "Dina"; }
function IsTeam4Dina(query) { return query.name == "silver_dina"; }
function SubjectIsDina(query) { return query.subject == "Dina"; }
function SubjectIsNotDina(query) { return query.subject != "Dina"; }
function FromIsDina(query) { return query.from == "Dina"; }
function FromIsNotDina(query) { return query.from != "Dina"; }
function Iswitch_aggro_onDina(query) { return query.witch_aggro_on == "Dina"; }
function IsNotSaidBeenJockeyedDina(query) { return query.worldsaidbeenjockeyeddina != 1; }
function IsDonorDina(query) { return query.itemdonor == "Dina"; }
function IsNotDonorDina(query) { return query.itemdonor != "Dina"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorDina(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function ConceptPlayerSuggestHealthDina(query) { return query.concept == "PlayerSuggestHealthDina"; }
function ConceptTakeShotgunGroovyDina(query) { return query.concept == "TakeShotgunGroovyDina"; }
function IsSmallTownBarricadeDina(query) { return query.worldsmalltownbarricadedina != 1; }
function PanicEventDina(query) { return query.whodidit == "Dina"; }
function IsTriggeredByDina(query) { return query.triggeredby == "Dina"; }
function IsNotSaidDinaPounced(query) { return query.worldsaiddinapounced != 1; }
function ConceptTakeShotgunGroovyDina(query) { return query.concept == "TakeShotgunGroovyDina"; }
function IsSmallTownBarricadeDina(query) { return query.worldsmalltownbarricadedina != 1; }
function PanicEventDina(query) { return query.whodidit == "Dina"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventDina(query) || DirectorScript.PanicEventTeenGirl(query); }
function IsTriggeredByDina(query) { return query.triggeredby == "Dina"; }
function IsNotSaidDinaPounced(query) { return query.worldsaiddinapounced != 1; }

// ellie ============================================================================================================================

function ConceptBlockChurchGuyEllieNo(query) { return query.concept == "ConceptBlockChurchGuyEllieNo"; }
function _auto_NotC4EllieInCover(query) { return query.world_auto_c4ellieincover < 1; }
function _auto_NotLastSurvivorTalkedEllie(query) { return query.world_auto_lastsurvivortalkedellie < 1; }
function _auto_EllieIsPressing(query) { return query.world_auto_elliepressing == 1; }
function _auto_IsTalkingEllie(query) { return query.world_auto_talkingellie == 1; }
function _auto_IsEllieInCane(query) { return query.world_auto_ellieincane == 1; }
function _auto_NotEllieInCane(query) { return query.world_auto_ellieincane < 1; }
function _auto_IsEllieWavWindow(query) { return query.world_auto_elliewavwindow == 1; }
function _auto_NotTimerLockEllie(query) { return query.world_auto_timerlockellie < 1; }
function _auto_NotC7M3PressingEllie(query) { return query.world_auto_c7m3pressingellie < 1; }
function _auto_NotC7M3ToBridgeEllie(query) { return query.world_auto_c7m3tobridgeellie < 1; }
function EllieNotPickedUpItem(query) { return query.elliepickedupitem != 1; }
function IsEllieFriendlyFire(query) { return query.worldelliefriendlyfire == 1; }
function IsNotEllieFriendlyFire(query) { return query.worldelliefriendlyfire != 1; }
function IsNotAskedForCoverEllie(query) { return query.ellieaskforcover != 1; }
function IsNotSaidBattleStationsEllie(query) { return query.worldsaidbattlestationsellie != 1; }
function IsNotSaidBeenJockeyedEllie(query) { return query.saidbeenjockeyedellie != 1; }
function EllieNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function IsNotSaidFaultFriendlyFireEllie(query) { return query.worldsaidfaultfriendlyfireellie != 1; }
function IsSaidFaultFriendlyFireEllie(query) { return query.worldsaidfaultfriendlyfireellie == 1; }
function IsShotTeammateEllie(query) { return query.worldshotteammateellie == 1; }
function IsNotShotTeammateEllie(query) { return query.worldshotteammateellie != 1; }
function IsCrashFinalePressingEllie(query) { return query.worldcrashfinalepressingellie == 1; }
function NotNagCrashEllie(query) { return query.worldnagcrashellie < 1; }
function ConceptC7M3FinalSpeakEllie(query) { return query.concept == "C7M3FinalSpeakEllie"; }
function NotSacrificedEllie(query) { return query.worldsacrificed != "Ellie"; }
function SacrificedEllie(query) { return query.worldsacrificed == "Ellie"; }
function IsNotTalkEllie(query) { return query.talkellie == 1; }
function IsTalkEllie(query) { return query.talkellie != 1; }
function IsWorldTalkEllie(query) { return query.worldtalkellie != 1; }
function IsEllieAlive(query) { return query.iselliealive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsEllieAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsNamVetAlive(query); }
function NotEllieAlive(query) { return query.iselliealive == 0; }
function IsEllieNear200(query) { return query.disttoellie < 200; }
function IsEllieNear400(query) { return query.disttoellie < 400; }
function IsEllieNear500(query) { return query.disttoellie < 500; }
function IsEllieNear800(query) { return query.disttoellie < 800; }
function IsEllieFar400(query) { return query.disttoellie >= 400; }
function IsEllieFar1000(query) { return query.disttoellie > 600; }
function IsEllie(query) { return query.who == "Ellie"; }
function IsDeadEllie(query) { return query.deadcharacter == "Ellie"; }
function IsTeam4Ellie(query) { return query.name == "silver_ellie"; }
function SubjectIsEllie(query) { return query.subject == "Ellie"; }
function SubjectIsNotEllie(query) { return query.subject != "Ellie"; }
function FromIsEllie(query) { return query.from == "Ellie"; }
function FromIsNotEllie(query) { return query.from != "Ellie"; }
function Iswitch_aggro_onEllie(query) { return query.witch_aggro_on == "Ellie"; }
function IsNotSaidBeenJockeyedEllie(query) { return query.worldsaidbeenjockeyedellie != 1; }
function IsNotMentionedEllieC6M2(query) { return query.worldmentionedelliec6m2 != 1; }
function IsEllieIntroActor(query) { return query.introactor == "Ellie"; }
function IsDonorEllie(query) { return query.itemdonor == "Ellie"; }
function IsNotDonorEllie(query) { return query.itemdonor != "Ellie"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorEllie(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function ConceptPlayerSuggestHealthEllie(query) { return query.concept == "PlayerSuggestHealthEllie"; }
function ConceptTakeShotgunGroovyEllie(query) { return query.concept == "TakeShotgunGroovyEllie"; }
function ConceptTakeShotgunGroovyEllie2Biker(query) { return query.concept == "TakeShotgunGroovyEllie2Biker"; }
function IsSmallTownBarricadeEllie(query) { return query.worldsmalltownbarricadeellie != 1; }
function PanicEventEllie(query) { return query.whodidit == "Ellie"; }
function IsTriggeredByEllie(query) { return query.triggeredby == "Ellie"; }
function IsNotSaidElliePounced(query) { return query.worldsaidelliepounced != 1; }
function IsNotSaidLaughEllie(query) { return query.worldsaidlaughellie != 1; }
function IsNotSaidEllieSuggestsCrane(query) { return query.worldsaidelliesuggestscrane != 1; }
function ConceptEllieSuggestsCrane(query) { return query.concept == "EllieSuggestsCrane"; }
function ConceptLaughEllie(query) { return query.concept == "LaughEllie"; }
function ConceptTakeShotgunGroovyEllie(query) { return query.concept == "TakeShotgunGroovyEllie"; }
function ConceptTakeShotgunGroovyEllie2Biker(query) { return query.concept == "TakeShotgunGroovyEllie2Biker"; }
function IsSmallTownBarricadeEllie(query) { return query.worldsmalltownbarricadeellie != 1; }
function PanicEventEllie(query) { return query.whodidit == "Ellie"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventEllie(query); }
function IsTriggeredByEllie(query) { return query.triggeredby == "Ellie"; }
function IsNotSaidElliePounced(query) { return query.worldsaidelliepounced != 1; }
function IsNotSaidLaughEllie(query) { return query.worldsaidlaughellie != 1; }
function IsNotSaidEllieSuggestsCrane(query) { return query.worldsaidelliesuggestscrane != 1; }
function ConceptEllieSuggestsCrane(query) { return query.concept == "EllieSuggestsCrane"; }
function ConceptLaughEllie(query) { return query.concept == "LaughEllie"; }

// joel ============================================================================================================================

function ConceptBlockChurchGuyJoelNo1(query) { return query.concept == "ConceptBlockChurchGuyJoelNo1"; }
// function ConceptBlock959(query) { return query.concept == "JoelWhoAreYou"; }
function JoelNotPickedUpItem(query) { return query.joelpickedupitem != 1; }
function IsJoelFriendlyFire(query) { return query.worldjoelfriendlyfire == 1; }
function IsNotJoelFriendlyFire(query) { return query.worldjoelfriendlyfire != 1; }
function IsNotJoelFriendlyFireFrancis(query) { return query.worldjoelfriendlyfirefrancis != 1; }
function IsNotAskedForCoverJoel(query) { return query.joelaskforcover != 1; }
function IsNotSaidBattleStationsJoel(query) { return query.worldsaidbattlestationsjoel != 1; }
function IsNotSaidBeenJockeyedJoel(query) { return query.saidbeenjockeyedjoel != 1; }
function JoelNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function _auto_NotC4JoelInCover(query) { return query.world_auto_c4joelincover < 1; }
function _auto_NotLastSurvivorTalkedJoel(query) { return query.world_auto_lastsurvivortalkedjoel < 1; }
function _auto_IsJoelInCane(query) { return query.world_auto_joelincane == 1; }
function _auto_NotJoelInCane(query) { return query.world_auto_joelincane < 1; }
function _auto_IsJoelWavWindow(query) { return query.world_auto_joelwavwindow == 1; }
function _auto_JoelIsPressing(query) { return query.world_auto_joelpressing == 1; }
function _auto_IsTalkingJoel(query) { return query.world_auto_talkingjoel == 1; }
function _auto_NotTimerLockJoel(query) { return query.world_auto_timerlockjoel < 1; }
function _auto_NotC6M3Joel(query) { return query.world_auto_c6m3joel < 1; }
function _auto_SawC6M3Joel(query) { return query.world_auto_c6m3joel == 1; }
function _auto_SaidC6M3Joel(query) { return query.world_auto_c6m3joel == 2; }
function _auto_GamblerSawC6M3Joel(query) { return query.world_auto_gamblerc6m3joel == 1; }
function _auto_CoachSawC6M3Joel(query) { return query.world_auto_coachc6m3joel == 1; }
function _auto_MechanicSawC6M3Joel(query) { return query.world_auto_mechanicc6m3joel == 1; }
function _auto_NotC7M3PressingJoel(query) { return query.world_auto_c7m3pressingjoel < 1; }
function _auto_NotC7M3ToBridgeJoel(query) { return query.world_auto_c7m3tobridgejoel < 1; }
function IsNotSaidFaultFriendlyFireJoel(query) { return query.worldsaidfaultfriendlyfirejoel != 1; }
function IsSaidFaultFriendlyFireJoel(query) { return query.worldsaidfaultfriendlyfirejoel == 1; }
function IsShotTeammateJoel(query) { return query.worldshotteammatejoel == 1; }
function IsNotShotTeammateJoel(query) { return query.worldshotteammatejoel != 1; }
// function IsNotSaidpathc2m1_joelboard(query) { return query.worldsaidpathc2m1_joelboard != 1; }
// function Ispathc2m1_joelboard(query) { return query.subject == "pathc2m1_joelboard"; }
// function Concept_C2M1Joelboard(query) { return query.concept == "_C2M1Joelboard"; }
// function Concept_C2M1Joelboard01(query) { return query.concept == "_C2M1Joelboard01"; }
function IsCrashFinalePressingJoel(query) { return query.worldcrashfinalepressingjoel == 1; }
function NotNagCrashJoel(query) { return query.worldnagcrashjoel < 1; }
function ConceptC7M3FinalSpeakJoel(query) { return query.concept == "C7M3FinalSpeakJoel"; }
function NotSacrificedJoel(query) { return query.worldsacrificed != "Joel"; }
function SacrificedJoel(query) { return query.worldsacrificed == "Joel"; }
function IsNotTalkJoel(query) { return query.talkjoel == 1; }
function IsTalkJoel(query) { return query.talkjoel != 1; }
function IsWorldTalkJoel(query) { return query.worldtalkjoel != 1; }
function IsJoelAlive(query) { return query.isjoelalive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsTeenGirlAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsJoelAlive(query); }
function NotJoelAlive(query) { return query.isjoelalive == 0; }
function IsJoelNear200(query) { return query.disttojoel < 200; }
function IsJoelNear400(query) { return query.disttojoel < 400; }
function IsJoelNear500(query) { return query.disttojoel < 500; }
function IsJoelNear800(query) { return query.disttojoel < 800; }
function IsJoelFar400(query) { return query.disttojoel >= 400; }
function IsJoelFar1000(query) { return query.disttojoel > 600; }
function IsJoel(query) { return query.who == "Joel"; }
function IsDeadJoel(query) { return query.deadcharacter == "Joel"; }
function IsTeam4Joel(query) { return query.name == "silver_joel"; }
function SubjectIsJoel(query) { return query.subject == "Joel"; }
function SubjectIsNotJoel(query) { return query.subject != "Joel"; }
function FromIsJoel(query) { return query.from == "Joel"; }
function FromIsNotJoel(query) { return query.from != "Joel"; }
function Iswitch_aggro_onJoel(query) { return query.witch_aggro_on == "Joel"; }
function IsNotSaidBeenJockeyedJoel(query) { return query.worldsaidbeenjockeyedjoel != 1; }
function IsDonorJoel(query) { return query.itemdonor == "Joel"; }
function IsNotDonorJoel(query) { return query.itemdonor != "Joel"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorJoel(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsWorldC6M3_Joel(query) { return query.subject == "WorldC6M3_Joel"; }
function ConceptPlayerSuggestHealthJoel(query) { return query.concept == "PlayerSuggestHealthJoel"; }
function IsSmallTownBarricadeJoel(query) { return query.worldsmalltownbarricadejoel != 1; }
function PanicEventJoel(query) { return query.whodidit == "Joel"; }
function IsTriggeredByJoel(query) { return query.triggeredby == "Joel"; }
function IsNotSaidJoelPounced(query) { return query.worldsaidjoelpounced != 1; }
function IsSmallTownBarricadeJoel(query) { return query.worldsmalltownbarricadejoel != 1; }
function PanicEventJoel(query) { return query.whodidit == "Joel"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventJoel(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }
function IsTriggeredByJoel(query) { return query.triggeredby == "Joel"; }
function IsNotSaidJoelPounced(query) { return query.worldsaidjoelpounced != 1; }

// holly ============================================================================================================================

function IsShotMannHolly(query) { return query.worldshotmannholly > 3; }
function IsNotSaidShotMannequinHolly2(query) { return query.worldsaidshotmannequinholly2 != 1; }
function Conceptc1m4escapeHollyCheck(query) { return query.concept == "c1m4escapeHollyCheck"; }
function Conceptc1m4escapeHollyCheckFail(query) { return query.concept == "c1m4escapeHollyCheckFail"; }
function Conceptc1m4escapeHollyCheckSuccess(query) { return query.concept == "c1m4escapeHollyCheckSuccess"; }
function IsHollyActor(query) { return query.hollyactor == 1; }
function IsNotHollyIntroduced(query) { return query.worldhollyintroduced != 1; }
function _auto_NotC4HollyInCover(query) { return query.world_auto_c4hollyincover < 1; }
function _auto_NotCaneExitedHolly(query) { return query.world_auto_caneexitedholly < 1; }
function _auto_NotLastSurvivorTalkedHolly(query) { return query.world_auto_lastsurvivortalkedholly < 1; }
function _auto_IsHollyInCane(query) { return query.world_auto_hollyincane == 1; }
function _auto_NotHollyInCane(query) { return query.world_auto_hollyincane < 1; }
function _auto_IsHollyWavWindow(query) { return query.world_auto_hollywavwindow == 1; }
function _auto_IsHollyInWitchville(query) { return query.world_auto_hollyinwitchville == 1; }
function _auto_NotHollyInWitchville(query) { return query.world_auto_hollyinwitchville < 1; }
function _auto_HollyIsPressing(query) { return query.world_auto_hollypressing == 1; }
function _auto_C5M3HollyReacted(query) { return query.world_auto_c5m3hollyreacted == 1; }
function _auto_IsTalkingHolly(query) { return query.world_auto_talkingholly == 1; }
function _auto_NotTimerLockHolly(query) { return query.world_auto_timerlockholly < 1; }
function _auto_HollySawC6M3Bill(query) { return query.world_auto_hollyc6m3bill == 1; }
function IsNotTalkHolly(query) { return query.talkholly == 1; }
function IsTalkHolly(query) { return query.talkholly != 1; }
function IsWorldTalkHolly(query) { return query.worldtalkholly != 1; }
function IsHollyNotAlive(query) { return query.ishollyalive != 1; }
function IsHollyAlive(query) { return query.ishollyalive == 1; }
function IsSmallTownBarricadeHolly(query) { return query.worldsmalltownbarricadeholly != 1; }
function IsHollyNear200(query) { return query.disttoholly < 200; }
function IsHollyNear300(query) { return query.disttoholly < 300; }
function IsHollyNear400(query) { return query.disttoholly < 400; }
function IsHollyNear400Weight0(query) { return query.disttoholly < 400; }
function IsHollyNear800(query) { return query.disttoholly < 800; }
function IsHollyFar400(query) { return query.disttoholly >= 400; }
function IsHollyFar1000(query) { return query.disttoholly > 600; }
function IsNotSaidFaultFriendlyFireHolly(query) { return query.worldsaidfaultfriendlyfireholly != 1; }
function IsSaidFaultFriendlyFireHolly(query) { return query.worldsaidfaultfriendlyfireholly == 1; }
function IsShotTeammateHolly(query) { return query.worldshotteammateholly == 1; }
function IsNotShotTeammateHolly(query) { return query.worldshotteammateholly != 1; }
function IsHollyCrybaby(query) { return query.worldhollycrying == 1; }
function WhoPutColaHolly(query) { return query.worldwhoputcola == "Holly"; }
function PanicEventHolly(query) { return query.whodidit == "Holly"; }
function IsHolly(query) { return query.who == "Holly"; }
function IsTriggeredByHolly(query) { return query.triggeredby == "Holly"; }
function IsDeadHolly(query) { return query.deadcharacter == "Holly"; }
function IsNotDeadHolly(query) { return query.deadcharacter != "Holly"; }
function SubjectIsHolly(query) { return query.subject == "Holly"; }
function SubjectIsNotHolly(query) { return query.subject != "Holly"; }
function FromIsHolly(query) { return query.from == "Holly"; }
function FromIsNotHolly(query) { return query.from != "Holly"; }
function Iswitch_aggro_onHolly(query) { return query.witch_aggro_on == "Holly"; }
function IsNotSaidBeenJockeyedHolly(query) { return query.worldsaidbeenjockeyedholly != 1; }
function IsSaidBeenJockeyedHolly(query) { return query.worldsaidbeenjockeyedholly == 1; }
function IsNotSaidHollyPounced(query) { return query.worldsaidhollypounced != 1; }
function IsHollyAlsoWarn(query) { return query.worldhollyalsowarn == 1; }
function ConceptHollyInterrupt(query) { return query.concept == "HollyInterrupt"; }
function HollyNotTall(query) { return query.worldhollytalljoke == 1; }
function ConceptC13M1Intro2Holly(query) { return query.concept == "C13M1Intro2Holly"; }
function C13M1HollyNotPanicking(query) { return query.worldc13m1hollypanicking < 1; }
function IsNotSrcGrp_HOLLYSTORYINIT(query) { return query.worldsrcgrp_hollystoryinit < 1; }
function IsNotSrcGrp_HOLLYSTORY(query) { return query.worldsrcgrp_hollystory < 1; }
function ConceptC3M4ButtonAnswerHolly(query) { return query.concept == "C3M4ButtonAnswerHolly"; }
function ConceptHollyStoryReac01(query) { return query.concept == "HollyStoryReac01"; }
function ConceptC3M4Button104Holly(query) { return query.concept == "C3M4Button104Holly"; }
function ConceptC6M2HollyStoryStart1(query) { return query.concept == "C6M2HollyStoryStart1"; }
function ConceptC6M3HollyBridgeStory1(query) { return query.concept == "C6M3HollyBridgeStory1"; }
function ConceptC6M3HollyBridgeStory1a(query) { return query.concept == "C6M3HollyBridgeStory1a"; }
function ConceptWorldC6M3_ByBridge01Holly(query) { return query.concept == "WorldC6M3_ByBridge01Holly"; }
function IsHollyInLoveC6M1(query) { return query.worldhollyinlovec6m1 == 1; }
function IsDonorHolly(query) { return query.itemdonor == "Holly"; }
function IsNotDonorHolly(query) { return query.itemdonor != "Holly"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorHolly(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsSaidOpenedGate1BlameHolly(query) { return query.worldsaidopenedgate1blameholly == 1; }
function IsNotSaidHollyBridgeStoryStart(query) { return query.worldsaidhollybridgestorystart != 1; }
function IsEndHollyBridgeStoryStart(query) { return query.worldendhollybridgestorystart == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventHolly(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// hunk ============================================================================================================================

function ConceptBlockChurchGuyHunkNo1(query) { return query.concept == "ConceptBlockChurchGuyHunkNo1"; }
// function ConceptBlock959(query) { return query.concept == "HunkWhoAreYou"; }
function HunkNotPickedUpItem(query) { return query.hunkpickedupitem != 1; }
function IsHunkFriendlyFire(query) { return query.worldhunkfriendlyfire == 1; }
function IsNotHunkFriendlyFire(query) { return query.worldhunkfriendlyfire != 1; }
function IsNotHunkFriendlyFireFrancis(query) { return query.worldhunkfriendlyfirefrancis != 1; }
function IsNotAskedForCoverHunk(query) { return query.hunkaskforcover != 1; }
function IsNotSaidBattleStationsHunk(query) { return query.worldsaidbattlestationshunk != 1; }
function IsNotSaidBeenJockeyedHunk(query) { return query.saidbeenjockeyedhunk != 1; }
function HunkNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function _auto_NotC4HunkInCover(query) { return query.world_auto_c4hunkincover < 1; }
function _auto_NotLastSurvivorTalkedHunk(query) { return query.world_auto_lastsurvivortalkedhunk < 1; }
function _auto_IsHunkInCane(query) { return query.world_auto_hunkincane == 1; }
function _auto_NotHunkInCane(query) { return query.world_auto_hunkincane < 1; }
function _auto_IsHunkWavWindow(query) { return query.world_auto_hunkwavwindow == 1; }
function _auto_HunkIsPressing(query) { return query.world_auto_hunkpressing == 1; }
function _auto_IsTalkingHunk(query) { return query.world_auto_talkinghunk == 1; }
function _auto_NotTimerLockHunk(query) { return query.world_auto_timerlockhunk < 1; }
function _auto_NotC6M3Hunk(query) { return query.world_auto_c6m3hunk < 1; }
function _auto_SawC6M3Hunk(query) { return query.world_auto_c6m3hunk == 1; }
function _auto_SaidC6M3Hunk(query) { return query.world_auto_c6m3hunk == 2; }
function _auto_GamblerSawC6M3Hunk(query) { return query.world_auto_gamblerc6m3hunk == 1; }
function _auto_CoachSawC6M3Hunk(query) { return query.world_auto_coachc6m3hunk == 1; }
function _auto_MechanicSawC6M3Hunk(query) { return query.world_auto_mechanicc6m3hunk == 1; }
function _auto_NotC7M3PressingHunk(query) { return query.world_auto_c7m3pressinghunk < 1; }
function _auto_NotC7M3ToBridgeHunk(query) { return query.world_auto_c7m3tobridgehunk < 1; }
function IsNotSaidFaultFriendlyFireHunk(query) { return query.worldsaidfaultfriendlyfirehunk != 1; }
function IsSaidFaultFriendlyFireHunk(query) { return query.worldsaidfaultfriendlyfirehunk == 1; }
function IsShotTeammateHunk(query) { return query.worldshotteammatehunk == 1; }
function IsNotShotTeammateHunk(query) { return query.worldshotteammatehunk != 1; }
function IsNotSaidpathc2m1_hunkboard(query) { return query.worldsaidpathc2m1_hunkboard != 1; }
function Ispathc2m1_hunkboard(query) { return query.subject == "pathc2m1_hunkboard"; }
function Concept_C2M1Hunkboard(query) { return query.concept == "_C2M1Hunkboard"; }
function Concept_C2M1Hunkboard01(query) { return query.concept == "_C2M1Hunkboard01"; }
function IsCrashFinalePressingHunk(query) { return query.worldcrashfinalepressinghunk == 1; }
function NotNagCrashHunk(query) { return query.worldnagcrashhunk < 1; }
function ConceptC7M3FinalSpeakHunk(query) { return query.concept == "C7M3FinalSpeakHunk"; }
function NotSacrificedHunk(query) { return query.worldsacrificed != "Hunk"; }
function SacrificedHunk(query) { return query.worldsacrificed == "Hunk"; }
function IsNotTalkHunk(query) { return query.talkhunk == 1; }
function IsTalkHunk(query) { return query.talkhunk != 1; }
function IsWorldTalkHunk(query) { return query.worldtalkhunk != 1; }
function IsHunkAlive(query) { return query.ishunkalive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsTeenGirlAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsHunkAlive(query); }
function NotHunkAlive(query) { return query.ishunkalive == 0; }
function IsHunkNear200(query) { return query.disttohunk < 200; }
function IsHunkNear400(query) { return query.disttohunk < 400; }
function IsHunkNear500(query) { return query.disttohunk < 500; }
function IsHunkNear800(query) { return query.disttohunk < 800; }
function IsHunkFar400(query) { return query.disttohunk >= 400; }
function IsHunkFar1000(query) { return query.disttohunk > 600; }
function IsHunk(query) { return query.who == "Hunk"; }
function IsDeadHunk(query) { return query.deadcharacter == "Hunk"; }
function IsTeam4Hunk(query) { return query.name == "silver_hunk"; }
function SubjectIsHunk(query) { return query.subject == "Hunk"; }
function SubjectIsNotHunk(query) { return query.subject != "Hunk"; }
function FromIsHunk(query) { return query.from == "Hunk"; }
function FromIsNotHunk(query) { return query.from != "Hunk"; }
function Iswitch_aggro_onHunk(query) { return query.witch_aggro_on == "Hunk"; }
function IsNotSaidBeenJockeyedHunk(query) { return query.worldsaidbeenjockeyedhunk != 1; }
function IsDonorHunk(query) { return query.itemdonor == "Hunk"; }
function IsNotDonorHunk(query) { return query.itemdonor != "Hunk"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorHunk(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsWorldC6M3_Hunk(query) { return query.subject == "WorldC6M3_Hunk"; }
function ConceptPlayerSuggestHealthHunk(query) { return query.concept == "PlayerSuggestHealthHunk"; }
function IsSmallTownBarricadeHunk(query) { return query.worldsmalltownbarricadehunk != 1; }
function PanicEventHunk(query) { return query.whodidit == "Hunk"; }
function IsTriggeredByHunk(query) { return query.triggeredby == "Hunk"; }
function IsNotSaidHunkPounced(query) { return query.worldsaidhunkpounced != 1; }
function IsSmallTownBarricadeHunk(query) { return query.worldsmalltownbarricadehunk != 1; }
function PanicEventHunk(query) { return query.whodidit == "Hunk"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventHunk(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }
function IsTriggeredByHunk(query) { return query.triggeredby == "Hunk"; }
function IsNotSaidHunkPounced(query) { return query.worldsaidhunkpounced != 1; }

// jill ============================================================================================================================

function IsShotMannJill(query) { return query.worldshotmannjill > 3; }
function IsNotSaidShotMannequinJill2(query) { return query.worldsaidshotmannequinjill != 1; }
function IsJillActor(query) { return query.jillactor == 1; }
function IsJillElevatorIntro(query) { return query.worldjillelevatorintro == 1; }
function IsNotJillIntroduced(query) { return query.worldjillintroduced != 1; }
function _auto_NotC4JillInCover(query) { return query.world_auto_c4jillincover < 1; }
function _auto_NotCaneExitedJill(query) { return query.world_auto_caneexitedjill < 1; }
function _auto_NotLastSurvivorTalkedJill(query) { return query.world_auto_lastsurvivortalkedjill < 1; }
function _auto_IsJillInCane(query) { return query.world_auto_jillincane == 1; }
function _auto_NotJillInCane(query) { return query.world_auto_jillincane < 1; }
function _auto_IsJillWavWindow(query) { return query.world_auto_jillwavwindow == 1; }
function _auto_IsJillInWitchville(query) { return query.world_auto_jillinwitchville == 1; }
function _auto_NotJillInWitchville(query) { return query.world_auto_jillinwitchville < 1; }
function _auto_JillIsPressing(query) { return query.world_auto_jillpressing == 1; }
function _auto_IsTalkingJill(query) { return query.world_auto_talkingjill == 1; }
function _auto_NotTimerLockJill(query) { return query.world_auto_timerlockjill < 1; }
function IsNotTalkJill(query) { return query.talkjill == 1; }
function IsTalkJill(query) { return query.talkjill != 1; }
function IsWorldTalkJill(query) { return query.worldtalkjill != 1; }
function IsJillNotAlive(query) { return query.isjillalive != 1; }
function IsJillAlive(query) { return query.isjillalive == 1; }
function IsSmallTownBarricadeJill(query) { return query.worldsmalltownbarricadejill != 1; }
function IsJillNear200(query) { return query.disttojill < 200; }
function IsJillNear400(query) { return query.disttojill < 400; }
function IsJillNear800(query) { return query.disttojill < 800; }
function IsJillFar400(query) { return query.disttojill >= 400; }
function IsJillFar1000(query) { return query.disttojill > 600; }
function IsNotSaidFaultFriendlyFireJill(query) { return query.worldsaidfaultfriendlyfirejill != 1; }
function IsSaidFaultFriendlyFireJill(query) { return query.worldsaidfaultfriendlyfirejill == 1; }
function IsShotTeammateJill(query) { return query.worldshotteammatejill == 1; }
function IsNotShotTeammateJill(query) { return query.worldshotteammatejill != 1; }
function WhoPutColaJill(query) { return query.worldwhoputcola == "Jill"; }
function PanicEventJill(query) { return query.whodidit == "Jill"; }
function IsJill(query) { return query.who == "Jill"; }
function IsTriggeredByJill(query) { return query.triggeredby == "Jill"; }
function IsDeadJill(query) { return query.deadcharacter == "Jill"; }
function IsNotDeadJill(query) { return query.deadcharacter != "Jill"; }
function SubjectIsJill(query) { return query.subject == "Jill"; }
function SubjectIsNotJill(query) { return query.subject != "Jill"; }
function FromIsJill(query) { return query.from == "Jill"; }
function FromIsNotJill(query) { return query.from != "Jill"; }
function Iswitch_aggro_onJill(query) { return query.witch_aggro_on == "Jill"; }
function IsNotSaidBeenJockeyedJill(query) { return query.worldsaidbeenjockeyedjill != 1; }
function IsSaidBeenJockeyedJill(query) { return query.worldsaidbeenjockeyedjill == 1; }
function IsNotSaidJillPounced(query) { return query.worldsaidjillpounced != 1; }
function ConceptJillSuggestsCrane(query) { return query.concept == "JillSuggestsCrane"; }
function ConceptLaughJill(query) { return query.concept == "LaughJill"; }
function Concept_C1M1_ElevatorHello3AliveJillIntro(query) { return query.concept == "_C1M1_ElevatorHello3AliveJillIntro"; }
function IsDonorJill(query) { return query.itemdonor == "Jill"; }
function IsNotDonorJill(query) { return query.itemdonor != "Jill"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorJill(query) || DirectorScript.IsDonorUnknown(query); }
function IsJillAVampire(query) { return query.worldc6m1_jillisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventJill(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// josh ============================================================================================================================

function JoshNotPickedUpItem(query) { return query.joshpickedupitem != 1; }
function IsJoshFriendlyFire(query) { return query.worldjoshfriendlyfire == 1; }
function IsNotJoshFriendlyFire(query) { return query.worldjoshfriendlyfire != 1; }
function IsNotAskedForCoverJosh(query) { return query.joshaskforcover != 1; }
function IsNotSaidBattleStationsJosh(query) { return query.worldsaidbattlestationsjosh != 1; }
function IsNotSaidBeenJockeyedJosh(query) { return query.saidbeenjockeyedjosh != 1; }
function JoshNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function IsNotSaidC7M3JoshDownFinal(query) { return query.c7m3joshdownfinal != 1; }
function _auto_NotC4JoshInCover(query) { return query.world_auto_c4joshincover < 1; }
function _auto_NotLastSurvivorTalkedJosh(query) { return query.world_auto_lastsurvivortalkedjosh < 1; }
function _auto_IsJoshInCane(query) { return query.world_auto_joshincane == 1; }
function _auto_NotJoshInCane(query) { return query.world_auto_joshincane < 1; }
function _auto_IsJoshWavWindow(query) { return query.world_auto_joshwavwindow == 1; }
function _auto_JoshIsPressing(query) { return query.world_auto_joshpressing == 1; }
function _auto_IsTalkingJosh(query) { return query.world_auto_talkingjosh == 1; }
function _auto_NotTimerLockJosh(query) { return query.world_auto_timerlockjosh < 1; }
function _auto_NotC7M3PressingJosh(query) { return query.world_auto_c7m3pressingjosh < 1; }
function _auto_NotC7M3ToBridgeJosh(query) { return query.world_auto_c7m3tobridgejosh < 1; }
function IsNotSaidFaultFriendlyFireJosh(query) { return query.worldsaidfaultfriendlyfirejosh != 1; }
function IsSaidFaultFriendlyFireJosh(query) { return query.worldsaidfaultfriendlyfirejosh == 1; }
function IsShotTeammateJosh(query) { return query.worldshotteammatejosh == 1; }
function IsNotShotTeammateJosh(query) { return query.worldshotteammatejosh != 1; }
function ConceptNeedsHelpResponseJoshB2(query) { return query.concept == "NeedsHelpResponseJoshB2"; }
function ConceptNeedsHelpResponseJoshC2(query) { return query.concept == "NeedsHelpResponseJoshC2"; }
function IsCrashFinalePressingJosh(query) { return query.worldcrashfinalepressingjosh == 1; }
function NotNagCrashJosh(query) { return query.worldnagcrashjosh < 1; }
function ConceptNeedsHelpResponseJoshB2(query) { return query.concept == "NeedsHelpResponseJoshB2"; }
function ConceptNeedsHelpResponseJoshC2(query) { return query.concept == "NeedsHelpResponseJoshC2"; }
function ConceptC7M3FinalSpeakJosh(query) { return query.concept == "C7M3FinalSpeakJosh"; }
function NotSacrificedJosh(query) { return query.worldsacrificed != "Josh"; }
function SacrificedJosh(query) { return query.worldsacrificed == "Josh"; }
function IsNotTalkJosh(query) { return query.talkjosh == 1; }
function IsTalkJosh(query) { return query.talkjosh != 1; }
function IsWorldTalkJosh(query) { return query.worldtalkjosh != 1; }
function IsJoshAlive(query) { return query.isjoshalive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsTeenGirlAlive(query) || DirectorScript.IsJoshAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsNamVetAlive(query); }
function NotJoshAlive(query) { return query.isjoshalive == 0; }
function IsJoshNear200(query) { return query.disttojosh < 200; }
function IsJoshNear400(query) { return query.disttojosh < 400; }
function IsJoshNear500(query) { return query.disttojosh < 500; }
function IsJoshNear800(query) { return query.disttojosh < 800; }
function IsJoshFar400(query) { return query.disttojosh >= 400; }
function IsJoshFar1000(query) { return query.disttojosh > 600; }
function IsJosh(query) { return query.who == "Josh"; }
function IsDeadJosh(query) { return query.deadcharacter == "Josh"; }
function IsTeam4Josh(query) { return query.name == "silver_josh"; }
function SubjectIsJosh(query) { return query.subject == "Josh"; }
function SubjectIsNotJosh(query) { return query.subject != "Josh"; }
function FromIsJosh(query) { return query.from == "Josh"; }
function FromIsNotJosh(query) { return query.from != "Josh"; }
function Iswitch_aggro_onJosh(query) { return query.witch_aggro_on == "Josh"; }
function IsNotSaidBeenJockeyedJosh(query) { return query.worldsaidbeenjockeyedjosh != 1; }
function IsDonorJosh(query) { return query.itemdonor == "Josh"; }
function IsNotDonorJosh(query) { return query.itemdonor != "Josh"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorJosh(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function ConceptPlayerSuggestHealthJosh(query) { return query.concept == "PlayerSuggestHealthJosh"; }
function ConceptTakeShotgunGroovyJosh(query) { return query.concept == "TakeShotgunGroovyJosh"; }
function IsSmallTownBarricadeJosh(query) { return query.worldsmalltownbarricadejosh != 1; }
function PanicEventJosh(query) { return query.whodidit == "Josh"; }
function IsTriggeredByJosh(query) { return query.triggeredby == "Josh"; }
function IsNotSaidJoshPounced(query) { return query.worldsaidjoshpounced != 1; }
function ConceptTakeShotgunGroovyJosh(query) { return query.concept == "TakeShotgunGroovyJosh"; }
function IsSmallTownBarricadeJosh(query) { return query.worldsmalltownbarricadejosh != 1; }
function PanicEventJosh(query) { return query.whodidit == "Josh"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventJosh(query) || DirectorScript.PanicEventTeenGirl(query); }
function IsTriggeredByJosh(query) { return query.triggeredby == "Josh"; }
function IsNotSaidJoshPounced(query) { return query.worldsaidjoshpounced != 1; }

// kenny ============================================================================================================================

function KennyNotPickedUpItem(query) { return query.kennypickedupitem != 1; }
function IsKennyFriendlyFire(query) { return query.worldkennyfriendlyfire == 1; }
function IsNotKennyFriendlyFire(query) { return query.worldkennyfriendlyfire != 1; }
function IsNotAskedForCoverKenny(query) { return query.kennyaskforcover != 1; }
function IsNotSaidBattleStationsKenny(query) { return query.worldsaidbattlestationskenny != 1; }
function IsNotSaidBeenJockeyedKenny(query) { return query.saidbeenjockeyedkenny != 1; }
function KennyNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function KennyTriedCopGambit(query) { return query.worldkennytriedcopgambit == 1; }
function KennyTriedThreat(query) { return query.worldkennytriedthreat == 1; }
function ConceptKennyAntagonize(query) { return query.concept == "ConceptKennyAntagonize"; }
function ConceptShutUpKenny(query) { return query.concept == "ConceptShutUpKenny"; }
function IsNotNamVetFriendlyFireKenny(query) { return query.worldnamvetfriendlyfirekenny != 1; }
function _auto_IsKennyInCane(query) { return query.world_auto_kennyincane == 1; }
function _auto_NotKennyInCane(query) { return query.world_auto_kennyincane < 1; }
function _auto_IsKennyWavWindow(query) { return query.world_auto_kennywavwindow == 1; }
function _auto_NotC4KennyInCover(query) { return query.world_auto_c4kennyincover < 1; }
function _auto_NotLastSurvivorTalkedKenny(query) { return query.world_auto_lastsurvivortalkedkenny < 1; }
function _auto_KennyIsPressing(query) { return query.world_auto_kennypressing == 1; }
function _auto_IsTalkingKenny(query) { return query.world_auto_talkingkenny == 1; }
function _auto_NotTimerLockKenny(query) { return query.world_auto_timerlockkenny < 1; }
function _auto_NotC7M3PressingKenny(query) { return query.world_auto_c7m3pressingkenny < 1; }
function _auto_NotC7M3ToBridgeKenny(query) { return query.world_auto_c7m3tobridgekenny < 1; }
function IsNotSaidFaultFriendlyFireKenny(query) { return query.worldsaidfaultfriendlyfirekenny != 1; }
function IsSaidFaultFriendlyFireKenny(query) { return query.worldsaidfaultfriendlyfirekenny == 1; }
function IsShotTeammateKenny(query) { return query.worldshotteammatekenny == 1; }
function IsNotShotTeammateKenny(query) { return query.worldshotteammatekenny != 1; }
function CanadaKennyHate(query) { return query.worldcanadakennyhate == 1; }
function NotCanadaKennyHatedYet(query) { return query.worldcanadakennyhated < 1; }
function IsCrashFinalePressingKenny(query) { return query.worldcrashfinalepressingkenny == 1; }
function NotNagCrashKenny(query) { return query.worldnagcrashkenny < 1; }
function ConceptC7M3FinalSpeakKenny(query) { return query.concept == "C7M3FinalSpeakKenny"; }
function NotSacrificedKenny(query) { return query.worldsacrificed != "Kenny"; }
function SacrificedKenny(query) { return query.worldsacrificed == "Kenny"; }
function IsNotTalkKenny(query) { return query.talkkenny == 1; }
function IsTalkKenny(query) { return query.talkkenny != 1; }
function IsWorldTalkKenny(query) { return query.worldtalkkenny != 1; }
function IsKennyAlive(query) { return query.iskennyalive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsTeenGirlAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsKennyAlive(query) || DirectorScript.IsNamVetAlive(query); }
function NotKennyAlive(query) { return query.iskennyalive == 0; }
function IsKennyNear125(query) { return query.disttokenny < 125; }
function IsKennyNear200(query) { return query.disttokenny < 200; }
function IsKennyNear400(query) { return query.disttokenny < 400; }
function IsKennyNear500(query) { return query.disttokenny < 500; }
function IsKennyNear800(query) { return query.disttokenny < 800; }
function IsKennyFar400(query) { return query.disttokenny >= 400; }
function IsKennyFar1000(query) { return query.disttokenny > 600; }
function IsKenny(query) { return query.who == "Kenny"; }
function IsDeadKenny(query) { return query.deadcharacter == "Kenny"; }
function IsTeam4Kenny(query) { return query.name == "silver_kenny"; }
function SubjectIsKenny(query) { return query.subject == "Kenny"; }
function SubjectIsNotKenny(query) { return query.subject != "Kenny"; }
function FromIsKenny(query) { return query.from == "Kenny"; }
function FromIsNotKenny(query) { return query.from != "Kenny"; }
function Iswitch_aggro_onKenny(query) { return query.witch_aggro_on == "Kenny"; }
function IsNotSaidBeenJockeyedKenny(query) { return query.worldsaidbeenjockeyedkenny != 1; }
function IsKennyIntroActor(query) { return query.introactor == "Kenny"; }
function IsDonorKenny(query) { return query.itemdonor == "Kenny"; }
function IsNotDonorKenny(query) { return query.itemdonor != "Kenny"; }
// function HasDonor(query) { return DirectorScript.IsDonorKenny(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function ConceptPlayerSuggestHealthKenny(query) { return query.concept == "PlayerSuggestHealthKenny"; }
function ConceptTakeShotgunGroovyZoey2Kenny(query) { return query.concept == "TakeShotgunGroovyZoey2Kenny"; }
function ConceptTakeShotgunGroovy2KennyLaugh(query) { return query.concept == "TakeShotgunGroovy2KennyLaugh"; }
function PanicEventKenny(query) { return query.whodidit == "Kenny"; }
function IsTriggeredByKenny(query) { return query.triggeredby == "Kenny"; }
function IsNotSaidKennyPounced(query) { return query.worldsaidkennypounced != 1; }
function IsNotSaidLaughKenny(query) { return query.worldsaidlaughkenny != 1; }
function IsNotSaidKennySuggestsCrane(query) { return query.worldsaidkennysuggestscrane != 1; }
function ConceptKennySuggestsCrane(query) { return query.concept == "KennySuggestsCrane"; }
function ConceptLaughKenny(query) { return query.concept == "LaughKenny"; }
function ConceptTakeShotgunGroovyZoey2Kenny(query) { return query.concept == "TakeShotgunGroovyZoey2Kenny"; }
function ConceptTakeShotgunGroovy2KennyLaugh(query) { return query.concept == "TakeShotgunGroovy2KennyLaugh"; }
function IsKennyC11M5Happy(query) { return query.worldkennyc11m5planereaction != 1; }
function PanicEventKenny(query) { return query.whodidit == "Kenny"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventKenny(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }
function IsTriggeredByKenny(query) { return query.triggeredby == "Kenny"; }
function IsNotSaidKennyPounced(query) { return query.worldsaidkennypounced != 1; }
function IsNotSaidLaughKenny(query) { return query.worldsaidlaughkenny != 1; }
function IsNotSaidKennySuggestsCrane(query) { return query.worldsaidkennysuggestscrane != 1; }
function ConceptKennySuggestsCrane(query) { return query.concept == "KennySuggestsCrane"; }
function ConceptLaughKenny(query) { return query.concept == "LaughKenny"; }

// lee ============================================================================================================================

function LeeNotPickedUpItem(query) { return query.leepickedupitem != 1; }
function IsLeeFriendlyFire(query) { return query.worldleefriendlyfire == 1; }
function IsNotLeeFriendlyFire(query) { return query.worldleefriendlyfire != 1; }
function IsNotAskedForCoverLee(query) { return query.leeaskforcover != 1; }
function IsNotSaidBattleStationsLee(query) { return query.worldsaidbattlestationslee != 1; }
function IsNotSaidBeenJockeyedLee(query) { return query.saidbeenjockeyedlee != 1; }
function LeeNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function IsNotSaidC7M3LeeDownFinal(query) { return query.c7m3leedownfinal != 1; }
function _auto_NotC4LeeInCover(query) { return query.world_auto_c4leeincover < 1; }
function _auto_NotLastSurvivorTalkedLee(query) { return query.world_auto_lastsurvivortalkedlee < 1; }
function _auto_IsLeeInCane(query) { return query.world_auto_leeincane == 1; }
function _auto_NotLeeInCane(query) { return query.world_auto_leeincane < 1; }
function _auto_IsLeeWavWindow(query) { return query.world_auto_leewavwindow == 1; }
function _auto_LeeIsPressing(query) { return query.world_auto_leepressing == 1; }
function _auto_IsTalkingLee(query) { return query.world_auto_talkinglee == 1; }
function _auto_NotTimerLockLee(query) { return query.world_auto_timerlocklee < 1; }
function _auto_NotC7M3PressingLee(query) { return query.world_auto_c7m3pressinglee < 1; }
function _auto_NotC7M3ToBridgeLee(query) { return query.world_auto_c7m3tobridgelee < 1; }
function IsNotSaidFaultFriendlyFireLee(query) { return query.worldsaidfaultfriendlyfirelee != 1; }
function IsSaidFaultFriendlyFireLee(query) { return query.worldsaidfaultfriendlyfirelee == 1; }
function IsShotTeammateLee(query) { return query.worldshotteammatelee == 1; }
function IsNotShotTeammateLee(query) { return query.worldshotteammatelee != 1; }
function ConceptNeedsHelpResponseLeeB2(query) { return query.concept == "NeedsHelpResponseLeeB2"; }
function ConceptNeedsHelpResponseLeeC2(query) { return query.concept == "NeedsHelpResponseLeeC2"; }
function IsCrashFinalePressingLee(query) { return query.worldcrashfinalepressinglee == 1; }
function NotNagCrashLee(query) { return query.worldnagcrashlee < 1; }
function ConceptNeedsHelpResponseLeeB2(query) { return query.concept == "NeedsHelpResponseLeeB2"; }
function ConceptNeedsHelpResponseLeeC2(query) { return query.concept == "NeedsHelpResponseLeeC2"; }
function ConceptC7M3FinalSpeakLee(query) { return query.concept == "C7M3FinalSpeakLee"; }
function NotSacrificedLee(query) { return query.worldsacrificed != "Lee"; }
function SacrificedLee(query) { return query.worldsacrificed == "Lee"; }
function IsNotTalkLee(query) { return query.talklee == 1; }
function IsTalkLee(query) { return query.talklee != 1; }
function IsWorldTalkLee(query) { return query.worldtalklee != 1; }
function IsLeeAlive(query) { return query.isleealive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsTeenGirlAlive(query) || DirectorScript.IsLeeAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsNamVetAlive(query); }
function NotLeeAlive(query) { return query.isleealive == 0; }
function IsLeeNear200(query) { return query.disttolee < 200; }
function IsLeeNear400(query) { return query.disttolee < 400; }
function IsLeeNear500(query) { return query.disttolee < 500; }
function IsLeeNear800(query) { return query.disttolee < 800; }
function IsLeeFar400(query) { return query.disttolee >= 400; }
function IsLeeFar1000(query) { return query.disttolee > 600; }
function IsLee(query) { return query.who == "Lee"; }
function IsDeadLee(query) { return query.deadcharacter == "Lee"; }
function IsTeam4Lee(query) { return query.name == "silver_lee"; }
function SubjectIsLee(query) { return query.subject == "Lee"; }
function SubjectIsNotLee(query) { return query.subject != "Lee"; }
function FromIsLee(query) { return query.from == "Lee"; }
function FromIsNotLee(query) { return query.from != "Lee"; }
function Iswitch_aggro_onLee(query) { return query.witch_aggro_on == "Lee"; }
function IsNotSaidBeenJockeyedLee(query) { return query.worldsaidbeenjockeyedlee != 1; }
function IsDonorLee(query) { return query.itemdonor == "Lee"; }
function IsNotDonorLee(query) { return query.itemdonor != "Lee"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorLee(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function ConceptPlayerSuggestHealthLee(query) { return query.concept == "PlayerSuggestHealthLee"; }
function ConceptTakeShotgunGroovyLee(query) { return query.concept == "TakeShotgunGroovyLee"; }
function IsSmallTownBarricadeLee(query) { return query.worldsmalltownbarricadelee != 1; }
function PanicEventLee(query) { return query.whodidit == "Lee"; }
function IsTriggeredByLee(query) { return query.triggeredby == "Lee"; }
function IsNotSaidLeePounced(query) { return query.worldsaidleepounced != 1; }
function ConceptTakeShotgunGroovyLee(query) { return query.concept == "TakeShotgunGroovyLee"; }
function IsSmallTownBarricadeLee(query) { return query.worldsmalltownbarricadelee != 1; }
function PanicEventLee(query) { return query.whodidit == "Lee"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventLee(query) || DirectorScript.PanicEventTeenGirl(query); }
function IsTriggeredByLee(query) { return query.triggeredby == "Lee"; }
function IsNotSaidLeePounced(query) { return query.worldsaidleepounced != 1; }

// leon ============================================================================================================================

function IsShotMannLeon(query) { return query.worldshotmannleon > 3; }
function IsNotSaidShotMannequinLeon2(query) { return query.worldsaidshotmannequinleon2 != 1; }
function IsLeonActor(query) { return query.leonactor == 1; }
function IsNotLeonIntroduced(query) { return query.worldleonintroduced != 1; }
function _auto_NotC4LeonInCover(query) { return query.world_auto_c4leonincover < 1; }
function _auto_NotCaneExitedLeon(query) { return query.world_auto_caneexitedleon < 1; }
function _auto_IsLeonInCane(query) { return query.world_auto_leonincane == 1; }
function _auto_NotLeonInCane(query) { return query.world_auto_leonincane < 1; }
function _auto_IsLeonWavWindow(query) { return query.world_auto_leonwavwindow == 1; }
function _auto_NotLastSurvivorTalkedLeon(query) { return query.world_auto_lastsurvivortalkedleon < 1; }
function _auto_IsLeonInWitchville(query) { return query.world_auto_leoninwitchville == 1; }
function _auto_NotLeonInWitchville(query) { return query.world_auto_leoninwitchville < 1; }
function _auto_LeonIsPressing(query) { return query.world_auto_leonpressing == 1; }
function _auto_IsTalkingLeon(query) { return query.world_auto_talkingleon == 1; }
function _auto_NotTimerLockLeon(query) { return query.world_auto_timerlockleon < 1; }
function _auto_LeonSawC6M3Bill(query) { return query.world_auto_leonc6m3bill == 1; }
function IsNotTalkLeon(query) { return query.talkleon == 1; }
function IsTalkLeon(query) { return query.talkleon != 1; }
function IsWorldTalkLeon(query) { return query.worldtalkleon != 1; }
function IsLeonNotAlive(query) { return query.isleonalive != 1; }
function IsLeonAlive(query) { return query.isleonalive == 1; }
function IsSmallTownBarricadeLeon(query) { return query.worldsmalltownbarricadeleon != 1; }
function IsLeonNear200(query) { return query.disttoleon < 200; }
function IsLeonNear400(query) { return query.disttoleon < 400; }
function IsLeonNear800(query) { return query.disttoleon < 800; }
function IsLeonFar400(query) { return query.disttoleon >= 400; }
function IsLeonFar1000(query) { return query.disttoleon > 600; }
function IsNotSaidFaultFriendlyFireLeon(query) { return query.worldsaidfaultfriendlyfireleon != 1; }
function IsSaidFaultFriendlyFireLeon(query) { return query.worldsaidfaultfriendlyfireleon == 1; }
function IsShotTeammateLeon(query) { return query.worldshotteammateleon == 1; }
function IsNotShotTeammateLeon(query) { return query.worldshotteammateleon != 1; }
function WhoPutColaLeon(query) { return query.worldwhoputcola == "Leon"; }
function PanicEventLeon(query) { return query.whodidit == "Leon"; }
function IsLeon(query) { return query.who == "Leon"; }
function IsTriggeredByLeon(query) { return query.triggeredby == "Leon"; }
function IsDeadLeon(query) { return query.deadcharacter == "Leon"; }
function IsNotDeadLeon(query) { return query.deadcharacter != "Leon"; }
function SubjectIsLeon(query) { return query.subject == "Leon"; }
function SubjectIsNotLeon(query) { return query.subject != "Leon"; }
function FromIsLeon(query) { return query.from == "Leon"; }
function FromIsNotLeon(query) { return query.from != "Leon"; }
function Iswitch_aggro_onLeon(query) { return query.witch_aggro_on == "Leon"; }
function IsNotSaidBeenJockeyedLeon(query) { return query.worldsaidbeenjockeyedleon != 1; }
function IsSaidBeenJockeyedLeon(query) { return query.worldsaidbeenjockeyedleon == 1; }
function IsNotSaidLeonPounced(query) { return query.worldsaidleonpounced != 1; }
function IsNotLeonInsultedCoachC1(query) { return query.worldleoninsultedcoach != 1; }
function ConceptLeonC1Attitude(query) { return query.concept == "LeonC1Attitude"; }
function LeonOCD(query) { return query.worldleonocd != 1; }
function C13M1EllisNotPaleoning(query) { return query.worldc13m1ellispaleoning < 1; }
function Concept_C1M1_ElevatorHello3AliveLeonIntro1(query) { return query.concept == "_C1M1_ElevatorHello3AliveLeonIntro1"; }
function Concept_C1M1_ElevatorHello3AliveLeonIntro2(query) { return query.concept == "_C1M1_ElevatorHello3AliveLeonIntro2"; }
function Concept_C1M1_ElevatorHello2AliveLeonIntro1(query) { return query.concept == "_C1M1_ElevatorHello2AliveLeonIntro1"; }
function Concept_C1M1_ElevatorHello2AliveLeonIntro2(query) { return query.concept == "_C1M1_ElevatorHello2AliveLeonIntro2"; }
function ConceptPlayer_LeonGunOwnership(query) { return query.concept == "Player.LeonGunOwnership"; }
function ConceptPlayer_WhinyLeon(query) { return query.concept == "Player.WhinyLeon"; }
function ConceptChargerBeatsLeon(query) { return query.concept == "ChargerBeatsLeon"; }
function IsDonorLeon(query) { return query.itemdonor == "Leon"; }
function IsNotDonorLeon(query) { return query.itemdonor != "Leon"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorLeon(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventLeon(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// rebecca ============================================================================================================================

function ConceptBlockChurchGuyRebeccaNo(query) { return query.concept == "ConceptBlockChurchGuyRebeccaNo"; }
function _auto_NotC4RebeccaInCover(query) { return query.world_auto_c4rebeccaincover < 1; }
function _auto_NotLastSurvivorTalkedRebecca(query) { return query.world_auto_lastsurvivortalkedrebecca < 1; }
function _auto_RebeccaIsPressing(query) { return query.world_auto_rebeccapressing == 1; }
function _auto_IsTalkingRebecca(query) { return query.world_auto_talkingrebecca == 1; }
function _auto_IsRebeccaInCane(query) { return query.world_auto_rebeccaincane == 1; }
function _auto_NotRebeccaInCane(query) { return query.world_auto_rebeccaincane < 1; }
function _auto_IsRebeccaWavWindow(query) { return query.world_auto_rebeccawavwindow == 1; }
function _auto_NotTimerLockRebecca(query) { return query.world_auto_timerlockrebecca < 1; }
function _auto_NotC7M3PressingRebecca(query) { return query.world_auto_c7m3pressingrebecca < 1; }
function _auto_NotC7M3ToBridgeRebecca(query) { return query.world_auto_c7m3tobridgerebecca < 1; }
function RebeccaNotPickedUpItem(query) { return query.rebeccapickedupitem != 1; }
function IsRebeccaFriendlyFire(query) { return query.worldrebeccafriendlyfire == 1; }
function IsNotRebeccaFriendlyFire(query) { return query.worldrebeccafriendlyfire != 1; }
function IsNotAskedForCoverRebecca(query) { return query.rebeccaaskforcover != 1; }
function IsNotSaidBattleStationsRebecca(query) { return query.worldsaidbattlestationsrebecca != 1; }
function IsNotSaidBeenJockeyedRebecca(query) { return query.saidbeenjockeyedrebecca != 1; }
function RebeccaNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function IsNotSaidFaultFriendlyFireRebecca(query) { return query.worldsaidfaultfriendlyfirerebecca != 1; }
function IsSaidFaultFriendlyFireRebecca(query) { return query.worldsaidfaultfriendlyfirerebecca == 1; }
function IsShotTeammateRebecca(query) { return query.worldshotteammaterebecca == 1; }
function IsNotShotTeammateRebecca(query) { return query.worldshotteammaterebecca != 1; }
function IsCrashFinalePressingRebecca(query) { return query.worldcrashfinalepressingrebecca == 1; }
function NotNagCrashRebecca(query) { return query.worldnagcrashrebecca < 1; }
function ConceptC7M3FinalSpeakRebecca(query) { return query.concept == "C7M3FinalSpeakRebecca"; }
function NotSacrificedRebecca(query) { return query.worldsacrificed != "Rebecca"; }
function SacrificedRebecca(query) { return query.worldsacrificed == "Rebecca"; }
function IsNotTalkRebecca(query) { return query.talkrebecca == 1; }
function IsTalkRebecca(query) { return query.talkrebecca != 1; }
function IsWorldTalkRebecca(query) { return query.worldtalkrebecca != 1; }
function IsRebeccaAlive(query) { return query.isrebeccaalive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsRebeccaAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsNamVetAlive(query); }
function NotRebeccaAlive(query) { return query.isrebeccaalive == 0; }
function IsRebeccaNear200(query) { return query.disttorebecca < 200; }
function IsRebeccaNear400(query) { return query.disttorebecca < 400; }
function IsRebeccaNear500(query) { return query.disttorebecca < 500; }
function IsRebeccaNear800(query) { return query.disttorebecca < 800; }
function IsRebeccaFar400(query) { return query.disttorebecca >= 400; }
function IsRebeccaFar1000(query) { return query.disttorebecca > 600; }
function IsRebecca(query) { return query.who == "Rebecca"; }
function IsDeadRebecca(query) { return query.deadcharacter == "Rebecca"; }
function IsTeam4Rebecca(query) { return query.name == "silver_rebecca"; }
function SubjectIsRebecca(query) { return query.subject == "Rebecca"; }
function SubjectIsNotRebecca(query) { return query.subject != "Rebecca"; }
function FromIsRebecca(query) { return query.from == "Rebecca"; }
function FromIsNotRebecca(query) { return query.from != "Rebecca"; }
function Iswitch_aggro_onRebecca(query) { return query.witch_aggro_on == "Rebecca"; }
function IsNotSaidBeenJockeyedRebecca(query) { return query.worldsaidbeenjockeyedrebecca != 1; }
function IsNotMentionedRebeccaC6M2(query) { return query.worldmentionedrebeccac6m2 != 1; }
function IsRebeccaIntroActor(query) { return query.introactor == "Rebecca"; }
function IsDonorRebecca(query) { return query.itemdonor == "Rebecca"; }
function IsNotDonorRebecca(query) { return query.itemdonor != "Rebecca"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorRebecca(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function ConceptPlayerSuggestHealthRebecca(query) { return query.concept == "PlayerSuggestHealthRebecca"; }
function ConceptTakeShotgunGroovyRebecca(query) { return query.concept == "TakeShotgunGroovyRebecca"; }
function ConceptTakeShotgunGroovyRebecca2Biker(query) { return query.concept == "TakeShotgunGroovyRebecca2Biker"; }
function IsSmallTownBarricadeRebecca(query) { return query.worldsmalltownbarricaderebecca != 1; }
function PanicEventRebecca(query) { return query.whodidit == "Rebecca"; }
function IsTriggeredByRebecca(query) { return query.triggeredby == "Rebecca"; }
function IsNotSaidRebeccaPounced(query) { return query.worldsaidrebeccapounced != 1; }
function IsNotSaidLaughRebecca(query) { return query.worldsaidlaughrebecca != 1; }
function IsNotSaidRebeccaSuggestsCrane(query) { return query.worldsaidrebeccasuggestscrane != 1; }
function ConceptRebeccaSuggestsCrane(query) { return query.concept == "RebeccaSuggestsCrane"; }
function ConceptLaughRebecca(query) { return query.concept == "LaughRebecca"; }
function ConceptTakeShotgunGroovyRebecca(query) { return query.concept == "TakeShotgunGroovyRebecca"; }
function ConceptTakeShotgunGroovyRebecca2Biker(query) { return query.concept == "TakeShotgunGroovyRebecca2Biker"; }
function IsSmallTownBarricadeRebecca(query) { return query.worldsmalltownbarricaderebecca != 1; }
function PanicEventRebecca(query) { return query.whodidit == "Rebecca"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventRebecca(query); }
function IsTriggeredByRebecca(query) { return query.triggeredby == "Rebecca"; }
function IsNotSaidRebeccaPounced(query) { return query.worldsaidrebeccapounced != 1; }
function IsNotSaidLaughRebecca(query) { return query.worldsaidlaughrebecca != 1; }
function IsNotSaidRebeccaSuggestsCrane(query) { return query.worldsaidrebeccasuggestscrane != 1; }
function ConceptRebeccaSuggestsCrane(query) { return query.concept == "RebeccaSuggestsCrane"; }
function ConceptLaughRebecca(query) { return query.concept == "LaughRebecca"; }

// rusty ============================================================================================================================

function IsShotMannRusty(query) { return query.worldshotmannrusty > 3; }
function IsNotSaidShotMannequinRusty2(query) { return query.worldsaidshotmannequinrusty != 1; }
function IsRustyActor(query) { return query.rustyactor == 1; }
function IsRustyElevatorIntro(query) { return query.worldrustyelevatorintro == 1; }
function IsNotRustyIntroduced(query) { return query.worldrustyintroduced != 1; }
function _auto_NotC4RustyInCover(query) { return query.world_auto_c4rustyincover < 1; }
function _auto_NotCaneExitedRusty(query) { return query.world_auto_caneexitedrusty < 1; }
function _auto_NotLastSurvivorTalkedRusty(query) { return query.world_auto_lastsurvivortalkedrusty < 1; }
function _auto_IsRustyInCane(query) { return query.world_auto_rustyincane == 1; }
function _auto_NotRustyInCane(query) { return query.world_auto_rustyincane < 1; }
function _auto_IsRustyWavWindow(query) { return query.world_auto_rustywavwindow == 1; }
function _auto_IsRustyInWitchville(query) { return query.world_auto_rustyinwitchville == 1; }
function _auto_NotRustyInWitchville(query) { return query.world_auto_rustyinwitchville < 1; }
function _auto_RustyIsPressing(query) { return query.world_auto_rustypressing == 1; }
function _auto_IsTalkingRusty(query) { return query.world_auto_talkingrusty == 1; }
function _auto_NotTimerLockRusty(query) { return query.world_auto_timerlockrusty < 1; }
function IsNotTalkRusty(query) { return query.talkrusty == 1; }
function IsTalkRusty(query) { return query.talkrusty != 1; }
function IsWorldTalkRusty(query) { return query.worldtalkrusty != 1; }
function IsRustyNotAlive(query) { return query.isrustyalive != 1; }
function IsRustyAlive(query) { return query.isrustyalive == 1; }
function IsSmallTownBarricadeRusty(query) { return query.worldsmalltownbarricaderusty != 1; }
function IsRustyNear200(query) { return query.disttorusty < 200; }
function IsRustyNear400(query) { return query.disttorusty < 400; }
function IsRustyNear800(query) { return query.disttorusty < 800; }
function IsRustyFar400(query) { return query.disttorusty >= 400; }
function IsRustyFar1000(query) { return query.disttorusty > 600; }
function IsNotSaidFaultFriendlyFireRusty(query) { return query.worldsaidfaultfriendlyfirerusty != 1; }
function IsSaidFaultFriendlyFireRusty(query) { return query.worldsaidfaultfriendlyfirerusty == 1; }
function IsShotTeammateRusty(query) { return query.worldshotteammaterusty == 1; }
function IsNotShotTeammateRusty(query) { return query.worldshotteammaterusty != 1; }
function WhoPutColaRusty(query) { return query.worldwhoputcola == "Rusty"; }
function PanicEventRusty(query) { return query.whodidit == "Rusty"; }
function IsRusty(query) { return query.who == "Rusty"; }
function IsTriggeredByRusty(query) { return query.triggeredby == "Rusty"; }
function IsDeadRusty(query) { return query.deadcharacter == "Rusty"; }
function IsNotDeadRusty(query) { return query.deadcharacter != "Rusty"; }
function SubjectIsRusty(query) { return query.subject == "Rusty"; }
function SubjectIsNotRusty(query) { return query.subject != "Rusty"; }
function FromIsRusty(query) { return query.from == "Rusty"; }
function FromIsNotRusty(query) { return query.from != "Rusty"; }
function Iswitch_aggro_onRusty(query) { return query.witch_aggro_on == "Rusty"; }
function IsNotSaidBeenJockeyedRusty(query) { return query.worldsaidbeenjockeyedrusty != 1; }
function IsSaidBeenJockeyedRusty(query) { return query.worldsaidbeenjockeyedrusty == 1; }
function IsNotSaidRustyPounced(query) { return query.worldsaidrustypounced != 1; }
function ConceptRustySuggestsCrane(query) { return query.concept == "RustySuggestsCrane"; }
function ConceptLaughRusty(query) { return query.concept == "LaughRusty"; }
function Concept_C1M1_ElevatorHello3AliveRustyIntro(query) { return query.concept == "_C1M1_ElevatorHello3AliveRustyIntro"; }
function IsDonorRusty(query) { return query.itemdonor == "Rusty"; }
function IsNotDonorRusty(query) { return query.itemdonor != "Rusty"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorRusty(query) || DirectorScript.IsDonorUnknown(query); }
function IsRustyAVampire(query) { return query.worldc6m1_rustyisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventRusty(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// sheva ============================================================================================================================

function IsShotMannSheva(query) { return query.worldshotmannsheva > 3; }
function IsNotSaidShotMannequinSheva2(query) { return query.worldsaidshotmannequinsheva != 1; }
function IsShevaActor(query) { return query.shevaactor == 1; }
function IsShevaElevatorIntro(query) { return query.worldshevaelevatorintro == 1; }
function IsNotShevaIntroduced(query) { return query.worldshevaintroduced != 1; }
function _auto_NotC4ShevaInCover(query) { return query.world_auto_c4shevaincover < 1; }
function _auto_NotCaneExitedSheva(query) { return query.world_auto_caneexitedsheva < 1; }
function _auto_NotLastSurvivorTalkedSheva(query) { return query.world_auto_lastsurvivortalkedsheva < 1; }
function _auto_IsShevaInCane(query) { return query.world_auto_shevaincane == 1; }
function _auto_NotShevaInCane(query) { return query.world_auto_shevaincane < 1; }
function _auto_IsShevaWavWindow(query) { return query.world_auto_shevawavwindow == 1; }
function _auto_IsShevaInWitchville(query) { return query.world_auto_shevainwitchville == 1; }
function _auto_NotShevaInWitchville(query) { return query.world_auto_shevainwitchville < 1; }
function _auto_ShevaIsPressing(query) { return query.world_auto_shevapressing == 1; }
function _auto_IsTalkingSheva(query) { return query.world_auto_talkingsheva == 1; }
function _auto_NotTimerLockSheva(query) { return query.world_auto_timerlocksheva < 1; }
function IsNotTalkSheva(query) { return query.talksheva == 1; }
function IsTalkSheva(query) { return query.talksheva != 1; }
function IsWorldTalkSheva(query) { return query.worldtalksheva != 1; }
function IsShevaNotAlive(query) { return query.isshevaalive != 1; }
function IsShevaAlive(query) { return query.isshevaalive == 1; }
function IsSmallTownBarricadeSheva(query) { return query.worldsmalltownbarricadesheva != 1; }
function IsShevaNear200(query) { return query.disttosheva < 200; }
function IsShevaNear400(query) { return query.disttosheva < 400; }
function IsShevaNear800(query) { return query.disttosheva < 800; }
function IsShevaFar400(query) { return query.disttosheva >= 400; }
function IsShevaFar1000(query) { return query.disttosheva > 600; }
function IsNotSaidFaultFriendlyFireSheva(query) { return query.worldsaidfaultfriendlyfiresheva != 1; }
function IsSaidFaultFriendlyFireSheva(query) { return query.worldsaidfaultfriendlyfiresheva == 1; }
function IsShotTeammateSheva(query) { return query.worldshotteammatesheva == 1; }
function IsNotShotTeammateSheva(query) { return query.worldshotteammatesheva != 1; }
function WhoPutColaSheva(query) { return query.worldwhoputcola == "Sheva"; }
function PanicEventSheva(query) { return query.whodidit == "Sheva"; }
function IsSheva(query) { return query.who == "Sheva"; }
function IsTriggeredBySheva(query) { return query.triggeredby == "Sheva"; }
function IsDeadSheva(query) { return query.deadcharacter == "Sheva"; }
function IsNotDeadSheva(query) { return query.deadcharacter != "Sheva"; }
function SubjectIsSheva(query) { return query.subject == "Sheva"; }
function SubjectIsNotSheva(query) { return query.subject != "Sheva"; }
function FromIsSheva(query) { return query.from == "Sheva"; }
function FromIsNotSheva(query) { return query.from != "Sheva"; }
function Iswitch_aggro_onSheva(query) { return query.witch_aggro_on == "Sheva"; }
function IsNotSaidBeenJockeyedSheva(query) { return query.worldsaidbeenjockeyedsheva != 1; }
function IsSaidBeenJockeyedSheva(query) { return query.worldsaidbeenjockeyedsheva == 1; }
function IsNotSaidShevaPounced(query) { return query.worldsaidshevapounced != 1; }
function ConceptShevaSuggestsCrane(query) { return query.concept == "ShevaSuggestsCrane"; }
function ConceptLaughSheva(query) { return query.concept == "LaughSheva"; }
function Concept_C1M1_ElevatorHello3AliveShevaIntro(query) { return query.concept == "_C1M1_ElevatorHello3AliveShevaIntro"; }
function IsDonorSheva(query) { return query.itemdonor == "Sheva"; }
function IsNotDonorSheva(query) { return query.itemdonor != "Sheva"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorSheva(query) || DirectorScript.IsDonorUnknown(query); }
function IsShevaAVampire(query) { return query.worldc6m1_shevaisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventSheva(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// ethan ============================================================================================================================

function IsShotMannEthan(query) { return query.worldshotmannethan > 3; }
function IsNotSaidShotMannequinEthan2(query) { return query.worldsaidshotmannequinethan2 != 1; }
function Conceptc1m4escapeEthanCheck(query) { return query.concept == "c1m4escapeEthanCheck"; }
function Conceptc1m4escapeEthanCheckFail(query) { return query.concept == "c1m4escapeEthanCheckFail"; }
function Conceptc1m4escapeEthanCheckSuccess(query) { return query.concept == "c1m4escapeEthanCheckSuccess"; }
function IsEthanActor(query) { return query.ethanactor == 1; }
function IsNotEthanIntroduced(query) { return query.worldethanintroduced != 1; }
function _auto_NotC4EthanInCover(query) { return query.world_auto_c4ethanincover < 1; }
function _auto_NotCaneExitedEthan(query) { return query.world_auto_caneexitedethan < 1; }
function _auto_NotLastSurvivorTalkedEthan(query) { return query.world_auto_lastsurvivortalkedethan < 1; }
function _auto_IsEthanInCane(query) { return query.world_auto_ethanincane == 1; }
function _auto_NotEthanInCane(query) { return query.world_auto_ethanincane < 1; }
function _auto_IsEthanWavWindow(query) { return query.world_auto_ethanwavwindow == 1; }
function _auto_IsEthanInWitchville(query) { return query.world_auto_ethaninwitchville == 1; }
function _auto_NotEthanInWitchville(query) { return query.world_auto_ethaninwitchville < 1; }
function _auto_EthanIsPressing(query) { return query.world_auto_ethanpressing == 1; }
function _auto_C5M3EthanReacted(query) { return query.world_auto_c5m3ethanreacted == 1; }
function _auto_IsTalkingEthan(query) { return query.world_auto_talkingethan == 1; }
function _auto_NotTimerLockEthan(query) { return query.world_auto_timerlockethan < 1; }
function _auto_EthanSawC6M3Bill(query) { return query.world_auto_ethanc6m3bill == 1; }
function IsNotTalkEthan(query) { return query.talkethan == 1; }
function IsTalkEthan(query) { return query.talkethan != 1; }
function IsWorldTalkEthan(query) { return query.worldtalkethan != 1; }
function IsEthanNotAlive(query) { return query.isethanalive != 1; }
function IsEthanAlive(query) { return query.isethanalive == 1; }
function IsSmallTownBarricadeEthan(query) { return query.worldsmalltownbarricadeethan != 1; }
function IsEthanNear200(query) { return query.disttoethan < 200; }
function IsEthanNear300(query) { return query.disttoethan < 300; }
function IsEthanNear400(query) { return query.disttoethan < 400; }
function IsEthanNear400Weight0(query) { return query.disttoethan < 400; }
function IsEthanNear800(query) { return query.disttoethan < 800; }
function IsEthanFar400(query) { return query.disttoethan >= 400; }
function IsEthanFar1000(query) { return query.disttoethan > 600; }
function IsNotSaidFaultFriendlyFireEthan(query) { return query.worldsaidfaultfriendlyfireethan != 1; }
function IsSaidFaultFriendlyFireEthan(query) { return query.worldsaidfaultfriendlyfireethan == 1; }
function IsShotTeammateEthan(query) { return query.worldshotteammateethan == 1; }
function IsNotShotTeammateEthan(query) { return query.worldshotteammateethan != 1; }
function IsEthanCrybaby(query) { return query.worldethancrying == 1; }
function WhoPutColaEthan(query) { return query.worldwhoputcola == "Ethan"; }
function PanicEventEthan(query) { return query.whodidit == "Ethan"; }
function IsEthan(query) { return query.who == "Ethan"; }
function IsTriggeredByEthan(query) { return query.triggeredby == "Ethan"; }
function IsDeadEthan(query) { return query.deadcharacter == "Ethan"; }
function IsNotDeadEthan(query) { return query.deadcharacter != "Ethan"; }
function SubjectIsEthan(query) { return query.subject == "Ethan"; }
function SubjectIsNotEthan(query) { return query.subject != "Ethan"; }
function FromIsEthan(query) { return query.from == "Ethan"; }
function FromIsNotEthan(query) { return query.from != "Ethan"; }
function Iswitch_aggro_onEthan(query) { return query.witch_aggro_on == "Ethan"; }
function IsNotSaidBeenJockeyedEthan(query) { return query.worldsaidbeenjockeyedethan != 1; }
function IsSaidBeenJockeyedEthan(query) { return query.worldsaidbeenjockeyedethan == 1; }
function IsNotSaidEthanPounced(query) { return query.worldsaidethanpounced != 1; }
function IsEthanAlsoWarn(query) { return query.worldethanalsowarn == 1; }
function ConceptEthanInterrupt(query) { return query.concept == "EthanInterrupt"; }
function EthanNotTall(query) { return query.worldethantalljoke == 1; }
function ConceptC13M1Intro2Ethan(query) { return query.concept == "C13M1Intro2Ethan"; }
function C13M1EthanNotPanicking(query) { return query.worldc13m1ethanpanicking < 1; }
function IsNotSrcGrp_ETHANSTORYINIT(query) { return query.worldsrcgrp_ethanstoryinit < 1; }
function IsNotSrcGrp_ETHANSTORY(query) { return query.worldsrcgrp_ethanstory < 1; }
function ConceptC3M4ButtonAnswerEthan(query) { return query.concept == "C3M4ButtonAnswerEthan"; }
function ConceptEthanStoryReac01(query) { return query.concept == "EthanStoryReac01"; }
function ConceptC3M4Button104Ethan(query) { return query.concept == "C3M4Button104Ethan"; }
function ConceptC6M2EthanStoryStart1(query) { return query.concept == "C6M2EthanStoryStart1"; }
function ConceptC6M3EthanBridgeStory1(query) { return query.concept == "C6M3EthanBridgeStory1"; }
function ConceptC6M3EthanBridgeStory1a(query) { return query.concept == "C6M3EthanBridgeStory1a"; }
function ConceptWorldC6M3_ByBridge01Ethan(query) { return query.concept == "WorldC6M3_ByBridge01Ethan"; }
function IsEthanInLoveC6M1(query) { return query.worldethaninlovec6m1 == 1; }
function IsDonorEthan(query) { return query.itemdonor == "Ethan"; }
function IsNotDonorEthan(query) { return query.itemdonor != "Ethan"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorEthan(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsSaidOpenedGate1BlameEthan(query) { return query.worldsaidopenedgate1blameethan == 1; }
function IsNotSaidEthanBridgeStoryStart(query) { return query.worldsaidethanbridgestorystart != 1; }
function IsEndEthanBridgeStoryStart(query) { return query.worldendethanbridgestorystart == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventEthan(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// mia ============================================================================================================================

function IsShotMannMia(query) { return query.worldshotmannmia > 3; }
function IsNotSaidShotMannequinMia2(query) { return query.worldsaidshotmannequinmia != 1; }
function IsMiaActor(query) { return query.miaactor == 1; }
function IsMiaElevatorIntro(query) { return query.worldmiaelevatorintro == 1; }
function IsNotMiaIntroduced(query) { return query.worldmiaintroduced != 1; }
function _auto_NotC4MiaInCover(query) { return query.world_auto_c4miaincover < 1; }
function _auto_NotCaneExitedMia(query) { return query.world_auto_caneexitedmia < 1; }
function _auto_NotLastSurvivorTalkedMia(query) { return query.world_auto_lastsurvivortalkedmia < 1; }
function _auto_IsMiaInCane(query) { return query.world_auto_miaincane == 1; }
function _auto_NotMiaInCane(query) { return query.world_auto_miaincane < 1; }
function _auto_IsMiaWavWindow(query) { return query.world_auto_miawavwindow == 1; }
function _auto_IsMiaInWitchville(query) { return query.world_auto_miainwitchville == 1; }
function _auto_NotMiaInWitchville(query) { return query.world_auto_miainwitchville < 1; }
function _auto_MiaIsPressing(query) { return query.world_auto_miapressing == 1; }
function _auto_IsTalkingMia(query) { return query.world_auto_talkingmia == 1; }
function _auto_NotTimerLockMia(query) { return query.world_auto_timerlockmia < 1; }
function IsNotTalkMia(query) { return query.talkmia == 1; }
function IsTalkMia(query) { return query.talkmia != 1; }
function IsWorldTalkMia(query) { return query.worldtalkmia != 1; }
function IsMiaNotAlive(query) { return query.ismiaalive != 1; }
function IsMiaAlive(query) { return query.ismiaalive == 1; }
function IsSmallTownBarricadeMia(query) { return query.worldsmalltownbarricademia != 1; }
function IsMiaNear200(query) { return query.disttomia < 200; }
function IsMiaNear400(query) { return query.disttomia < 400; }
function IsMiaNear800(query) { return query.disttomia < 800; }
function IsMiaFar400(query) { return query.disttomia >= 400; }
function IsMiaFar1000(query) { return query.disttomia > 600; }
function IsNotSaidFaultFriendlyFireMia(query) { return query.worldsaidfaultfriendlyfiremia != 1; }
function IsSaidFaultFriendlyFireMia(query) { return query.worldsaidfaultfriendlyfiremia == 1; }
function IsShotTeammateMia(query) { return query.worldshotteammatemia == 1; }
function IsNotShotTeammateMia(query) { return query.worldshotteammatemia != 1; }
function WhoPutColaMia(query) { return query.worldwhoputcola == "Mia"; }
function PanicEventMia(query) { return query.whodidit == "Mia"; }
function IsMia(query) { return query.who == "Mia"; }
function IsTriggeredByMia(query) { return query.triggeredby == "Mia"; }
function IsDeadMia(query) { return query.deadcharacter == "Mia"; }
function IsNotDeadMia(query) { return query.deadcharacter != "Mia"; }
function SubjectIsMia(query) { return query.subject == "Mia"; }
function SubjectIsNotMia(query) { return query.subject != "Mia"; }
function FromIsMia(query) { return query.from == "Mia"; }
function FromIsNotMia(query) { return query.from != "Mia"; }
function Iswitch_aggro_onMia(query) { return query.witch_aggro_on == "Mia"; }
function IsNotSaidBeenJockeyedMia(query) { return query.worldsaidbeenjockeyedmia != 1; }
function IsSaidBeenJockeyedMia(query) { return query.worldsaidbeenjockeyedmia == 1; }
function IsNotSaidMiaPounced(query) { return query.worldsaidmiapounced != 1; }
function ConceptMiaSuggestsCrane(query) { return query.concept == "MiaSuggestsCrane"; }
function ConceptLaughMia(query) { return query.concept == "LaughMia"; }
function Concept_C1M1_ElevatorHello3AliveMiaIntro(query) { return query.concept == "_C1M1_ElevatorHello3AliveMiaIntro"; }
function IsDonorMia(query) { return query.itemdonor == "Mia"; }
function IsNotDonorMia(query) { return query.itemdonor != "Mia"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorMia(query) || DirectorScript.IsDonorUnknown(query); }
function IsMiaAVampire(query) { return query.worldc6m1_miaisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventMia(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// david ============================================================================================================================

function IsShotMannDavid(query) { return query.worldshotmanndavid > 3; }
function IsNotSaidShotMannequinDavid2(query) { return query.worldsaidshotmannequindavid2 != 1; }
function IsDavidActor(query) { return query.davidactor == 1; }
function IsNotSaiddaviddavides(query) { return query.worldsaiddaviddavides != 1; }
function Conceptdaviddavides(query) { return query.concept == "daviddavides"; }
function IsNotDavidIntroduced(query) { return query.worlddavidintroduced != 1; }
function IsDavidIntroduced(query) { return query.worlddavidintroduced == 1; }
function _auto_NotC4DavidInCover(query) { return query.world_auto_c4davidincover < 1; }
function _auto_NotCaneExitedDavid(query) { return query.world_auto_caneexiteddavid < 1; }
function _auto_NotDavidAngry(query) { return query.world_auto_davidangry < 1; }
function _auto_NotDavidFoodBreak(query) { return query.world_auto_davidfoodbreak < 1; }
function _auto_NotDavidHappy(query) { return query.world_auto_davidhappy < 1; }
function _auto_IsDavidInCane(query) { return query.world_auto_davidincane == 1; }
function _auto_NotDavidInCane(query) { return query.world_auto_davidincane < 1; }
function _auto_IsDavidWavWindow(query) { return query.world_auto_davidwavwindow == 1; }
function _auto_NotLastSurvivorTalkedDavid(query) { return query.world_auto_lastsurvivortalkeddavid < 1; }
function _auto_IsDavidInWitchville(query) { return query.world_auto_davidinwitchville == 1; }
function _auto_NotDavidInWitchville(query) { return query.world_auto_davidinwitchville < 1; }
function _auto_DavidIsPressing(query) { return query.world_auto_davidpressing == 1; }
function _auto_IsTalkingDavid(query) { return query.world_auto_talkingdavid == 1; }
function _auto_NotTimerLockDavid(query) { return query.world_auto_timerlockdavid < 1; }
function _auto_DavidSawC6M3Bill(query) { return query.world_auto_davidc6m3bill == 1; }
function IsNotTalkDavid(query) { return query.talkdavid == 1; }
function IsTalkDavid(query) { return query.talkdavid != 1; }
function IsWorldTalkDavid(query) { return query.worldtalkdavid != 1; }
function IsDavidNotAlive(query) { return query.isdavidalive != 1; }
function IsDavidAlive(query) { return query.isdavidalive == 1; }
function IsDavidNear125(query) { return query.disttodavid < 125; }
function IsDavidNear200(query) { return query.disttodavid < 200; }
function IsDavidNear400(query) { return query.disttodavid < 400; }
function IsDavidNear800(query) { return query.disttodavid < 800; }
function IsDavidFar400(query) { return query.disttodavid >= 400; }
function IsDavidFar1000(query) { return query.disttodavid > 600; }
function IsNotSaidFaultFriendlyFireDavid(query) { return query.worldsaidfaultfriendlyfiredavid != 1; }
function IsSaidFaultFriendlyFireDavid(query) { return query.worldsaidfaultfriendlyfiredavid == 1; }
function IsShotTeammateDavid(query) { return query.worldshotteammatedavid == 1; }
function IsNotShotTeammateDavid(query) { return query.worldshotteammatedavid != 1; }
function WhoPutColaDavid(query) { return query.worldwhoputcola == "David"; }
function PanicEventDavid(query) { return query.whodidit == "David"; }
function IsDavid(query) { return query.who == "David"; }
function IsTriggeredByDavid(query) { return query.triggeredby == "David"; }
function IsDeadDavid(query) { return query.deadcharacter == "David"; }
function IsNotDeadDavid(query) { return query.deadcharacter != "David"; }
function SubjectIsDavid(query) { return query.subject == "David"; }
function SubjectIsNotDavid(query) { return query.subject != "David"; }
function FromIsDavid(query) { return query.from == "David"; }
function FromIsNotDavid(query) { return query.from != "David"; }
function Iswitch_aggro_onDavid(query) { return query.witch_aggro_on == "David"; }
function IsNotSaidBeenJockeyedDavid(query) { return query.worldsaidbeenjockeyeddavid != 1; }
function IsSaidBeenJockeyedDavid(query) { return query.worldsaidbeenjockeyeddavid == 1; }
function IsNotSaidDavidPounced(query) { return query.worldsaiddavidpounced != 1; }
function IsNotNickInsultedDavidC1(query) { return query.worldnickinsulteddavid != 1; }
function IsSaidC1M3DavidFoodCourt(query) { return query.worldsaidc1m3davidfoodcourt == 1; }
function ConceptDavidSuggestsCrane(query) { return query.concept == "DavidSuggestsCrane"; }
function ConceptLaughDavid(query) { return query.concept == "LaughDavid"; }
function NotDavidMadAtRiders(query) { return query.worlddavidmadatriders < 1; }
function DavidMadAtRiders(query) { return query.worlddavidmadatriders == 1; }
function Concept_C2M2_DavidApocolypse(query) { return query.concept == "_C2M2_DavidApocolypse"; }
function ConceptPlayer_CoverMeC1RDavid1(query) { return query.concept == "Player.CoverMeC1RDavid1"; }
function ConceptPlayer_CoverMeC1RDavid2(query) { return query.concept == "Player.CoverMeC1RDavid2"; }
// function FromSet1(query) { return DirectorScript.FromIsDavid(query) || DirectorScript.FromIsAnOrator(query); }
function DavidCake(query) { return query.worlddavidcake == 1; }
function IsDonorDavid(query) { return query.itemdonor == "David"; }
function IsNotDonorDavid(query) { return query.itemdonor != "David"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorDavid(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsDavidAVampire(query) { return query.worldc6m1_davidisavampire == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventDavid(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// deputy ============================================================================================================================

function IsShotMannDeputy(query) { return query.worldshotmanndeputy > 3; }
function IsNotSaidShotMannequinDeputy2(query) { return query.worldsaidshotmannequindeputy2 != 1; }
function IsDeputyActor(query) { return query.deputyactor == 1; }
function IsNotDeputyIntroduced(query) { return query.worlddeputyintroduced != 1; }
function _auto_NotC4DeputyInCover(query) { return query.world_auto_c4deputyincover < 1; }
function _auto_NotCaneExitedDeputy(query) { return query.world_auto_caneexiteddeputy < 1; }
function _auto_IsDeputyInCane(query) { return query.world_auto_deputyincane == 1; }
function _auto_NotDeputyInCane(query) { return query.world_auto_deputyincane < 1; }
function _auto_IsDeputyWavWindow(query) { return query.world_auto_deputywavwindow == 1; }
function _auto_NotLastSurvivorTalkedDeputy(query) { return query.world_auto_lastsurvivortalkeddeputy < 1; }
function _auto_IsDeputyInWitchville(query) { return query.world_auto_deputyinwitchville == 1; }
function _auto_NotDeputyInWitchville(query) { return query.world_auto_deputyinwitchville < 1; }
function _auto_DeputyIsPressing(query) { return query.world_auto_deputypressing == 1; }
function _auto_IsTalkingDeputy(query) { return query.world_auto_talkingdeputy == 1; }
function _auto_NotTimerLockDeputy(query) { return query.world_auto_timerlockdeputy < 1; }
function _auto_DeputySawC6M3Bill(query) { return query.world_auto_deputyc6m3bill == 1; }
function IsNotTalkDeputy(query) { return query.talkdeputy == 1; }
function IsTalkDeputy(query) { return query.talkdeputy != 1; }
function IsWorldTalkDeputy(query) { return query.worldtalkdeputy != 1; }
function IsDeputyNotAlive(query) { return query.isdeputyalive != 1; }
function IsDeputyAlive(query) { return query.isdeputyalive == 1; }
function IsSmallTownBarricadeDeputy(query) { return query.worldsmalltownbarricadedeputy != 1; }
function IsDeputyNear200(query) { return query.disttodeputy < 200; }
function IsDeputyNear400(query) { return query.disttodeputy < 400; }
function IsDeputyNear800(query) { return query.disttodeputy < 800; }
function IsDeputyFar400(query) { return query.disttodeputy >= 400; }
function IsDeputyFar1000(query) { return query.disttodeputy > 600; }
function IsNotSaidFaultFriendlyFireDeputy(query) { return query.worldsaidfaultfriendlyfiredeputy != 1; }
function IsSaidFaultFriendlyFireDeputy(query) { return query.worldsaidfaultfriendlyfiredeputy == 1; }
function IsShotTeammateDeputy(query) { return query.worldshotteammatedeputy == 1; }
function IsNotShotTeammateDeputy(query) { return query.worldshotteammatedeputy != 1; }
function WhoPutColaDeputy(query) { return query.worldwhoputcola == "Deputy"; }
function PanicEventDeputy(query) { return query.whodidit == "Deputy"; }
function IsDeputy(query) { return query.who == "Deputy"; }
function IsTriggeredByDeputy(query) { return query.triggeredby == "Deputy"; }
function IsDeadDeputy(query) { return query.deadcharacter == "Deputy"; }
function IsNotDeadDeputy(query) { return query.deadcharacter != "Deputy"; }
function SubjectIsDeputy(query) { return query.subject == "Deputy"; }
function SubjectIsNotDeputy(query) { return query.subject != "Deputy"; }
function FromIsDeputy(query) { return query.from == "Deputy"; }
function FromIsNotDeputy(query) { return query.from != "Deputy"; }
function Iswitch_aggro_onDeputy(query) { return query.witch_aggro_on == "Deputy"; }
function IsNotSaidBeenJockeyedDeputy(query) { return query.worldsaidbeenjockeyeddeputy != 1; }
function IsSaidBeenJockeyedDeputy(query) { return query.worldsaidbeenjockeyeddeputy == 1; }
function IsNotSaidDeputyPounced(query) { return query.worldsaiddeputypounced != 1; }
function IsNotDeputyInsultedCoachC1(query) { return query.worlddeputyinsultedcoach != 1; }
function ConceptDeputyC1Attitude(query) { return query.concept == "DeputyC1Attitude"; }
function DeputyOCD(query) { return query.worlddeputyocd != 1; }
function C13M1EllisNotPadeputying(query) { return query.worldc13m1ellispadeputying < 1; }
function Concept_C1M1_ElevatorHello3AliveDeputyIntro1(query) { return query.concept == "_C1M1_ElevatorHello3AliveDeputyIntro1"; }
function Concept_C1M1_ElevatorHello3AliveDeputyIntro2(query) { return query.concept == "_C1M1_ElevatorHello3AliveDeputyIntro2"; }
function Concept_C1M1_ElevatorHello2AliveDeputyIntro1(query) { return query.concept == "_C1M1_ElevatorHello2AliveDeputyIntro1"; }
function Concept_C1M1_ElevatorHello2AliveDeputyIntro2(query) { return query.concept == "_C1M1_ElevatorHello2AliveDeputyIntro2"; }
function ConceptPlayer_DeputyGunOwnership(query) { return query.concept == "Player.DeputyGunOwnership"; }
function ConceptPlayer_WhinyDeputy(query) { return query.concept == "Player.WhinyDeputy"; }
function ConceptChargerBeatsDeputy(query) { return query.concept == "ChargerBeatsDeputy"; }
function IsDonorDeputy(query) { return query.itemdonor == "Deputy"; }
function IsNotDonorDeputy(query) { return query.itemdonor != "Deputy"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorDeputy(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventDeputy(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// robin ============================================================================================================================

function ConceptBlockChurchGuyRobinNo1(query) { return query.concept == "ConceptBlockChurchGuyRobinNo1"; }
// function ConceptBlock959(query) { return query.concept == "RobinWhoAreYou"; }
function RobinNotPickedUpItem(query) { return query.robinpickedupitem != 1; }
function IsRobinFriendlyFire(query) { return query.worldrobinfriendlyfire == 1; }
function IsNotRobinFriendlyFire(query) { return query.worldrobinfriendlyfire != 1; }
function IsNotRobinFriendlyFireFrancis(query) { return query.worldrobinfriendlyfirefrancis != 1; }
function IsNotAskedForCoverRobin(query) { return query.robinaskforcover != 1; }
function IsNotSaidBattleStationsRobin(query) { return query.worldsaidbattlestationsrobin != 1; }
function IsNotSaidBeenJockeyedRobin(query) { return query.saidbeenjockeyedrobin != 1; }
function RobinNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function _auto_NotC4RobinInCover(query) { return query.world_auto_c4robinincover < 1; }
function _auto_NotLastSurvivorTalkedRobin(query) { return query.world_auto_lastsurvivortalkedrobin < 1; }
function _auto_IsRobinInCane(query) { return query.world_auto_robinincane == 1; }
function _auto_NotRobinInCane(query) { return query.world_auto_robinincane < 1; }
function _auto_IsRobinWavWindow(query) { return query.world_auto_robinwavwindow == 1; }
function _auto_RobinIsPressing(query) { return query.world_auto_robinpressing == 1; }
function _auto_IsTalkingRobin(query) { return query.world_auto_talkingrobin == 1; }
function _auto_NotTimerLockRobin(query) { return query.world_auto_timerlockrobin < 1; }
function _auto_NotC6M3Robin(query) { return query.world_auto_c6m3robin < 1; }
function _auto_SawC6M3Robin(query) { return query.world_auto_c6m3robin == 1; }
function _auto_SaidC6M3Robin(query) { return query.world_auto_c6m3robin == 2; }
function _auto_GamblerSawC6M3Robin(query) { return query.world_auto_gamblerc6m3robin == 1; }
function _auto_CoachSawC6M3Robin(query) { return query.world_auto_coachc6m3robin == 1; }
function _auto_MechanicSawC6M3Robin(query) { return query.world_auto_mechanicc6m3robin == 1; }
function _auto_NotC7M3PressingRobin(query) { return query.world_auto_c7m3pressingrobin < 1; }
function _auto_NotC7M3ToBridgeRobin(query) { return query.world_auto_c7m3tobridgerobin < 1; }
function IsNotSaidFaultFriendlyFireRobin(query) { return query.worldsaidfaultfriendlyfirerobin != 1; }
function IsSaidFaultFriendlyFireRobin(query) { return query.worldsaidfaultfriendlyfirerobin == 1; }
function IsShotTeammateRobin(query) { return query.worldshotteammaterobin == 1; }
function IsNotShotTeammateRobin(query) { return query.worldshotteammaterobin != 1; }
// function IsNotSaidpathc2m1_robinboard(query) { return query.worldsaidpathc2m1_robinboard != 1; }
// function Ispathc2m1_robinboard(query) { return query.subject == "pathc2m1_robinboard"; }
// function Concept_C2M1Robinboard(query) { return query.concept == "_C2M1Robinboard"; }
// function Concept_C2M1Robinboard01(query) { return query.concept == "_C2M1Robinboard01"; }
function IsCrashFinalePressingRobin(query) { return query.worldcrashfinalepressingrobin == 1; }
function NotNagCrashRobin(query) { return query.worldnagcrashrobin < 1; }
function ConceptC7M3FinalSpeakRobin(query) { return query.concept == "C7M3FinalSpeakRobin"; }
function NotSacrificedRobin(query) { return query.worldsacrificed != "Robin"; }
function SacrificedRobin(query) { return query.worldsacrificed == "Robin"; }
function IsNotTalkRobin(query) { return query.talkrobin == 1; }
function IsTalkRobin(query) { return query.talkrobin != 1; }
function IsWorldTalkRobin(query) { return query.worldtalkrobin != 1; }
function IsRobinAlive(query) { return query.isrobinalive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsTeenGirlAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsRobinAlive(query); }
function NotRobinAlive(query) { return query.isrobinalive == 0; }
function IsRobinNear200(query) { return query.disttorobin < 200; }
function IsRobinNear400(query) { return query.disttorobin < 400; }
function IsRobinNear500(query) { return query.disttorobin < 500; }
function IsRobinNear800(query) { return query.disttorobin < 800; }
function IsRobinFar400(query) { return query.disttorobin >= 400; }
function IsRobinFar1000(query) { return query.disttorobin > 600; }
function IsRobin(query) { return query.who == "Robin"; }
function IsDeadRobin(query) { return query.deadcharacter == "Robin"; }
function IsTeam4Robin(query) { return query.name == "silver_robin"; }
function SubjectIsRobin(query) { return query.subject == "Robin"; }
function SubjectIsNotRobin(query) { return query.subject != "Robin"; }
function FromIsRobin(query) { return query.from == "Robin"; }
function FromIsNotRobin(query) { return query.from != "Robin"; }
function Iswitch_aggro_onRobin(query) { return query.witch_aggro_on == "Robin"; }
function IsNotSaidBeenJockeyedRobin(query) { return query.worldsaidbeenjockeyedrobin != 1; }
function IsDonorRobin(query) { return query.itemdonor == "Robin"; }
function IsNotDonorRobin(query) { return query.itemdonor != "Robin"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorRobin(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsWorldC6M3_Robin(query) { return query.subject == "WorldC6M3_Robin"; }
function ConceptPlayerSuggestHealthRobin(query) { return query.concept == "PlayerSuggestHealthRobin"; }
function IsSmallTownBarricadeRobin(query) { return query.worldsmalltownbarricaderobin != 1; }
function PanicEventRobin(query) { return query.whodidit == "Robin"; }
function IsTriggeredByRobin(query) { return query.triggeredby == "Robin"; }
function IsNotSaidRobinPounced(query) { return query.worldsaidrobinpounced != 1; }
function IsSmallTownBarricadeRobin(query) { return query.worldsmalltownbarricaderobin != 1; }
function PanicEventRobin(query) { return query.whodidit == "Robin"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventRobin(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }
function IsTriggeredByRobin(query) { return query.triggeredby == "Robin"; }
function IsNotSaidRobinPounced(query) { return query.worldsaidrobinpounced != 1; }

// trevor ============================================================================================================================

function IsShotMannTrevor(query) { return query.worldshotmanntrevor > 3; }
function IsNotSaidShotMannequinTrevor2(query) { return query.worldsaidshotmannequintrevor2 != 1; }
function Conceptc1m4escapeTrevorCheck(query) { return query.concept == "c1m4escapeTrevorCheck"; }
function Conceptc1m4escapeTrevorCheckFail(query) { return query.concept == "c1m4escapeTrevorCheckFail"; }
function Conceptc1m4escapeTrevorCheckSuccess(query) { return query.concept == "c1m4escapeTrevorCheckSuccess"; }
function IsTrevorActor(query) { return query.trevoractor == 1; }
function IsNotTrevorIntroduced(query) { return query.worldtrevorintroduced != 1; }
function _auto_NotC4TrevorInCover(query) { return query.world_auto_c4trevorincover < 1; }
function _auto_NotCaneExitedTrevor(query) { return query.world_auto_caneexitedtrevor < 1; }
function _auto_NotLastSurvivorTalkedTrevor(query) { return query.world_auto_lastsurvivortalkedtrevor < 1; }
function _auto_IsTrevorInCane(query) { return query.world_auto_trevorincane == 1; }
function _auto_NotTrevorInCane(query) { return query.world_auto_trevorincane < 1; }
function _auto_IsTrevorWavWindow(query) { return query.world_auto_trevorwavwindow == 1; }
function _auto_IsTrevorInWitchville(query) { return query.world_auto_trevorinwitchville == 1; }
function _auto_NotTrevorInWitchville(query) { return query.world_auto_trevorinwitchville < 1; }
function _auto_TrevorIsPressing(query) { return query.world_auto_trevorpressing == 1; }
function _auto_C5M3TrevorReacted(query) { return query.world_auto_c5m3trevorreacted == 1; }
function _auto_IsTalkingTrevor(query) { return query.world_auto_talkingtrevor == 1; }
function _auto_NotTimerLockTrevor(query) { return query.world_auto_timerlocktrevor < 1; }
function _auto_TrevorSawC6M3Bill(query) { return query.world_auto_trevorc6m3bill == 1; }
function IsNotTalkTrevor(query) { return query.talktrevor == 1; }
function IsTalkTrevor(query) { return query.talktrevor != 1; }
function IsWorldTalkTrevor(query) { return query.worldtalktrevor != 1; }
function IsTrevorNotAlive(query) { return query.istrevoralive != 1; }
function IsTrevorAlive(query) { return query.istrevoralive == 1; }
function IsSmallTownBarricadeTrevor(query) { return query.worldsmalltownbarricadetrevor != 1; }
function IsTrevorNear200(query) { return query.disttotrevor < 200; }
function IsTrevorNear300(query) { return query.disttotrevor < 300; }
function IsTrevorNear400(query) { return query.disttotrevor < 400; }
function IsTrevorNear400Weight0(query) { return query.disttotrevor < 400; }
function IsTrevorNear800(query) { return query.disttotrevor < 800; }
function IsTrevorFar400(query) { return query.disttotrevor >= 400; }
function IsTrevorFar1000(query) { return query.disttotrevor > 600; }
function IsNotSaidFaultFriendlyFireTrevor(query) { return query.worldsaidfaultfriendlyfiretrevor != 1; }
function IsSaidFaultFriendlyFireTrevor(query) { return query.worldsaidfaultfriendlyfiretrevor == 1; }
function IsShotTeammateTrevor(query) { return query.worldshotteammatetrevor == 1; }
function IsNotShotTeammateTrevor(query) { return query.worldshotteammatetrevor != 1; }
function IsTrevorCrybaby(query) { return query.worldtrevorcrying == 1; }
function WhoPutColaTrevor(query) { return query.worldwhoputcola == "Trevor"; }
function PanicEventTrevor(query) { return query.whodidit == "Trevor"; }
function IsTrevor(query) { return query.who == "Trevor"; }
function IsTriggeredByTrevor(query) { return query.triggeredby == "Trevor"; }
function IsDeadTrevor(query) { return query.deadcharacter == "Trevor"; }
function IsNotDeadTrevor(query) { return query.deadcharacter != "Trevor"; }
function SubjectIsTrevor(query) { return query.subject == "Trevor"; }
function SubjectIsNotTrevor(query) { return query.subject != "Trevor"; }
function FromIsTrevor(query) { return query.from == "Trevor"; }
function FromIsNotTrevor(query) { return query.from != "Trevor"; }
function Iswitch_aggro_onTrevor(query) { return query.witch_aggro_on == "Trevor"; }
function IsNotSaidBeenJockeyedTrevor(query) { return query.worldsaidbeenjockeyedtrevor != 1; }
function IsSaidBeenJockeyedTrevor(query) { return query.worldsaidbeenjockeyedtrevor == 1; }
function IsNotSaidTrevorPounced(query) { return query.worldsaidtrevorpounced != 1; }
function IsTrevorAlsoWarn(query) { return query.worldtrevoralsowarn == 1; }
function ConceptTrevorInterrupt(query) { return query.concept == "TrevorInterrupt"; }
function TrevorNotTall(query) { return query.worldtrevortalljoke == 1; }
function ConceptC13M1Intro2Trevor(query) { return query.concept == "C13M1Intro2Trevor"; }
function C13M1TrevorNotPanicking(query) { return query.worldc13m1trevorpanicking < 1; }
function IsNotSrcGrp_TREVORSTORYINIT(query) { return query.worldsrcgrp_trevorstoryinit < 1; }
function IsNotSrcGrp_TREVORSTORY(query) { return query.worldsrcgrp_trevorstory < 1; }
function ConceptC3M4ButtonAnswerTrevor(query) { return query.concept == "C3M4ButtonAnswerTrevor"; }
function ConceptTrevorStoryReac01(query) { return query.concept == "TrevorStoryReac01"; }
function ConceptC3M4Button104Trevor(query) { return query.concept == "C3M4Button104Trevor"; }
function ConceptC6M2TrevorStoryStart1(query) { return query.concept == "C6M2TrevorStoryStart1"; }
function ConceptC6M3TrevorBridgeStory1(query) { return query.concept == "C6M3TrevorBridgeStory1"; }
function ConceptC6M3TrevorBridgeStory1a(query) { return query.concept == "C6M3TrevorBridgeStory1a"; }
function ConceptWorldC6M3_ByBridge01Trevor(query) { return query.concept == "WorldC6M3_ByBridge01Trevor"; }
function IsTrevorInLoveC6M1(query) { return query.worldtrevorinlovec6m1 == 1; }
function IsDonorTrevor(query) { return query.itemdonor == "Trevor"; }
function IsNotDonorTrevor(query) { return query.itemdonor != "Trevor"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorTeenGirl(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorTrevor(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function IsSaidOpenedGate1BlameTrevor(query) { return query.worldsaidopenedgate1blametrevor == 1; }
function IsNotSaidTrevorBridgeStoryStart(query) { return query.worldsaidtrevorbridgestorystart != 1; }
function IsEndTrevorBridgeStoryStart(query) { return query.worldendtrevorbridgestorystart == 1; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventTrevor(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventTeenGirl(query); }

// betazoey ============================================================================================================================

function ConceptBlockChurchGuyBetazoeyNo(query) { return query.concept == "ConceptBlockChurchGuyBetazoeyNo"; }
function _auto_NotC4BetazoeyInCover(query) { return query.world_auto_c4betazoeyincover < 1; }
function _auto_NotLastSurvivorTalkedBetazoey(query) { return query.world_auto_lastsurvivortalkedbetazoey < 1; }
function _auto_BetazoeyIsPressing(query) { return query.world_auto_betazoeypressing == 1; }
function _auto_IsTalkingBetazoey(query) { return query.world_auto_talkingbetazoey == 1; }
function _auto_IsBetazoeyInCane(query) { return query.world_auto_betazoeyincane == 1; }
function _auto_NotBetazoeyInCane(query) { return query.world_auto_betazoeyincane < 1; }
function _auto_IsBetazoeyWavWindow(query) { return query.world_auto_betazoeywavwindow == 1; }
function _auto_NotTimerLockBetazoey(query) { return query.world_auto_timerlockbetazoey < 1; }
function _auto_NotC7M3PressingBetazoey(query) { return query.world_auto_c7m3pressingbetazoey < 1; }
function _auto_NotC7M3ToBridgeBetazoey(query) { return query.world_auto_c7m3tobridgebetazoey < 1; }
function BetazoeyNotPickedUpItem(query) { return query.betazoeypickedupitem != 1; }
function IsBetazoeyFriendlyFire(query) { return query.worldbetazoeyfriendlyfire == 1; }
function IsNotBetazoeyFriendlyFire(query) { return query.worldbetazoeyfriendlyfire != 1; }
function IsNotAskedForCoverBetazoey(query) { return query.betazoeyaskforcover != 1; }
function IsNotSaidBattleStationsBetazoey(query) { return query.worldsaidbattlestationsbetazoey != 1; }
function IsNotSaidBeenJockeyedBetazoey(query) { return query.saidbeenjockeyedbetazoey != 1; }
function BetazoeyNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function IsNotSaidFaultFriendlyFireBetazoey(query) { return query.worldsaidfaultfriendlyfirebetazoey != 1; }
function IsSaidFaultFriendlyFireBetazoey(query) { return query.worldsaidfaultfriendlyfirebetazoey == 1; }
function IsShotTeammateBetazoey(query) { return query.worldshotteammatebetazoey == 1; }
function IsNotShotTeammateBetazoey(query) { return query.worldshotteammatebetazoey != 1; }
function IsCrashFinalePressingBetazoey(query) { return query.worldcrashfinalepressingbetazoey == 1; }
function NotNagCrashBetazoey(query) { return query.worldnagcrashbetazoey < 1; }
function ConceptC7M3FinalSpeakBetazoey(query) { return query.concept == "C7M3FinalSpeakBetazoey"; }
function NotSacrificedBetazoey(query) { return query.worldsacrificed != "BetaZoey"; }
function SacrificedBetazoey(query) { return query.worldsacrificed == "BetaZoey"; }
function IsNotTalkBetazoey(query) { return query.talkbetazoey == 1; }
function IsTalkBetazoey(query) { return query.talkbetazoey != 1; }
function IsWorldTalkBetazoey(query) { return query.worldtalkbetazoey != 1; }
function IsBetazoeyAlive(query) { return query.isbetazoeyalive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsBetazoeyAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsNamVetAlive(query); }
function NotBetazoeyAlive(query) { return query.isbetazoeyalive == 0; }
function IsBetazoeyNear200(query) { return query.disttobetazoey < 200; }
function IsBetazoeyNear400(query) { return query.disttobetazoey < 400; }
function IsBetazoeyNear500(query) { return query.disttobetazoey < 500; }
function IsBetazoeyNear800(query) { return query.disttobetazoey < 800; }
function IsBetazoeyFar400(query) { return query.disttobetazoey >= 400; }
function IsBetazoeyFar1000(query) { return query.disttobetazoey > 600; }
function IsBetazoey(query) { return query.who == "BetaZoey"; }
function IsDeadBetazoey(query) { return query.deadcharacter == "BetaZoey"; }
function IsTeam4Betazoey(query) { return query.name == "silver_betazoey"; }
function SubjectIsBetazoey(query) { return query.subject == "BetaZoey"; }
function SubjectIsNotBetazoey(query) { return query.subject != "BetaZoey"; }
function FromIsBetazoey(query) { return query.from == "BetaZoey"; }
function FromIsNotBetazoey(query) { return query.from != "BetaZoey"; }
function Iswitch_aggro_onBetazoey(query) { return query.witch_aggro_on == "BetaZoey"; }
function IsNotSaidBeenJockeyedBetazoey(query) { return query.worldsaidbeenjockeyedbetazoey != 1; }
function IsNotMentionedBetazoeyC6M2(query) { return query.worldmentionedbetazoeyc6m2 != 1; }
function IsBetazoeyIntroActor(query) { return query.introactor == "BetaZoey"; }
function IsDonorBetazoey(query) { return query.itemdonor == "BetaZoey"; }
function IsNotDonorBetazoey(query) { return query.itemdonor != "BetaZoey"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorBetazoey(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function ConceptPlayerSuggestHealthBetazoey(query) { return query.concept == "PlayerSuggestHealthBetazoey"; }
function ConceptTakeShotgunGroovyBetazoey(query) { return query.concept == "TakeShotgunGroovyBetazoey"; }
function ConceptTakeShotgunGroovyBetazoey2Biker(query) { return query.concept == "TakeShotgunGroovyBetazoey2Biker"; }
function IsSmallTownBarricadeBetazoey(query) { return query.worldsmalltownbarricadebetazoey != 1; }
function PanicEventBetazoey(query) { return query.whodidit == "BetaZoey"; }
function IsTriggeredByBetazoey(query) { return query.triggeredby == "BetaZoey"; }
function IsNotSaidBetazoeyPounced(query) { return query.worldsaidbetazoeypounced != 1; }
function IsNotSaidLaughBetazoey(query) { return query.worldsaidlaughbetazoey != 1; }
function IsNotSaidBetazoeySuggestsCrane(query) { return query.worldsaidbetazoeysuggestscrane != 1; }
function ConceptBetazoeySuggestsCrane(query) { return query.concept == "BetazoeySuggestsCrane"; }
function ConceptLaughBetazoey(query) { return query.concept == "LaughBetazoey"; }
function ConceptTakeShotgunGroovyBetazoey(query) { return query.concept == "TakeShotgunGroovyBetazoey"; }
function ConceptTakeShotgunGroovyBetazoey2Biker(query) { return query.concept == "TakeShotgunGroovyBetazoey2Biker"; }
function IsSmallTownBarricadeBetazoey(query) { return query.worldsmalltownbarricadebetazoey != 1; }
function PanicEventBetazoey(query) { return query.whodidit == "BetaZoey"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventBetazoey(query); }
function IsTriggeredByBetazoey(query) { return query.triggeredby == "BetaZoey"; }
function IsNotSaidBetazoeyPounced(query) { return query.worldsaidbetazoeypounced != 1; }
function IsNotSaidLaughBetazoey(query) { return query.worldsaidlaughbetazoey != 1; }
function IsNotSaidBetazoeySuggestsCrane(query) { return query.worldsaidbetazoeysuggestscrane != 1; }
function ConceptBetazoeySuggestsCrane(query) { return query.concept == "BetazoeySuggestsCrane"; }
function ConceptLaughBetazoey(query) { return query.concept == "LaughBetazoey"; }

// betazoeymrv ============================================================================================================================

function ConceptBlockChurchGuyBetazoeymrvNo(query) { return query.concept == "ConceptBlockChurchGuyBetazoeymrvNo"; }
function _auto_NotC4BetazoeymrvInCover(query) { return query.world_auto_c4betazoeymrvincover < 1; }
function _auto_NotLastSurvivorTalkedBetazoeymrv(query) { return query.world_auto_lastsurvivortalkedbetazoeymrv < 1; }
function _auto_BetazoeymrvIsPressing(query) { return query.world_auto_betazoeymrvpressing == 1; }
function _auto_IsTalkingBetazoeymrv(query) { return query.world_auto_talkingbetazoeymrv == 1; }
function _auto_IsBetazoeymrvInCane(query) { return query.world_auto_betazoeymrvincane == 1; }
function _auto_NotBetazoeymrvInCane(query) { return query.world_auto_betazoeymrvincane < 1; }
function _auto_IsBetazoeymrvWavWindow(query) { return query.world_auto_betazoeymrvwavwindow == 1; }
function _auto_NotTimerLockBetazoeymrv(query) { return query.world_auto_timerlockbetazoeymrv < 1; }
function _auto_NotC7M3PressingBetazoeymrv(query) { return query.world_auto_c7m3pressingbetazoeymrv < 1; }
function _auto_NotC7M3ToBridgeBetazoeymrv(query) { return query.world_auto_c7m3tobridgebetazoeymrv < 1; }
function BetazoeymrvNotPickedUpItem(query) { return query.betazoeymrvpickedupitem != 1; }
function IsBetazoeymrvFriendlyFire(query) { return query.worldbetazoeymrvfriendlyfire == 1; }
function IsNotBetazoeymrvFriendlyFire(query) { return query.worldbetazoeymrvfriendlyfire != 1; }
function IsNotAskedForCoverBetazoeymrv(query) { return query.betazoeymrvaskforcover != 1; }
function IsNotSaidBattleStationsBetazoeymrv(query) { return query.worldsaidbattlestationsbetazoeymrv != 1; }
function IsNotSaidBeenJockeyedBetazoeymrv(query) { return query.saidbeenjockeyedbetazoeymrv != 1; }
function BetazoeymrvNotSaidGrabbingCan(query) { return query.saidgrabbingcan != 1; }
function IsNotSaidFaultFriendlyFireBetazoeymrv(query) { return query.worldsaidfaultfriendlyfirebetazoeymrv != 1; }
function IsSaidFaultFriendlyFireBetazoeymrv(query) { return query.worldsaidfaultfriendlyfirebetazoeymrv == 1; }
function IsShotTeammateBetazoeymrv(query) { return query.worldshotteammatebetazoeymrv == 1; }
function IsNotShotTeammateBetazoeymrv(query) { return query.worldshotteammatebetazoeymrv != 1; }
function IsCrashFinalePressingBetazoeymrv(query) { return query.worldcrashfinalepressingbetazoeymrv == 1; }
function NotNagCrashBetazoeymrv(query) { return query.worldnagcrashbetazoeymrv < 1; }
function ConceptC7M3FinalSpeakBetazoeymrv(query) { return query.concept == "C7M3FinalSpeakBetazoeymrv"; }
function NotSacrificedBetazoeymrv(query) { return query.worldsacrificed != "BetaZoeyMRV"; }
function SacrificedBetazoeymrv(query) { return query.worldsacrificed == "BetaZoeyMRV"; }
function IsNotTalkBetazoeymrv(query) { return query.talkbetazoeymrv == 1; }
function IsTalkBetazoeymrv(query) { return query.talkbetazoeymrv != 1; }
function IsWorldTalkBetazoeymrv(query) { return query.worldtalkbetazoeymrv != 1; }
function IsBetazoeymrvAlive(query) { return query.isbetazoeymrvalive == 1; }
// function IsL4D1Alive(query) { return DirectorScript.IsBetazoeymrvAlive(query) || DirectorScript.IsManagerAlive(query) || DirectorScript.IsBikerAlive(query) || DirectorScript.IsNamVetAlive(query); }
function NotBetazoeymrvAlive(query) { return query.isbetazoeymrvalive == 0; }
function IsBetazoeymrvNear200(query) { return query.disttobetazoeymrv < 200; }
function IsBetazoeymrvNear400(query) { return query.disttobetazoeymrv < 400; }
function IsBetazoeymrvNear500(query) { return query.disttobetazoeymrv < 500; }
function IsBetazoeymrvNear800(query) { return query.disttobetazoeymrv < 800; }
function IsBetazoeymrvFar400(query) { return query.disttobetazoeymrv >= 400; }
function IsBetazoeymrvFar1000(query) { return query.disttobetazoeymrv > 600; }
function IsBetazoeymrv(query) { return query.who == "BetaZoeyMRV"; }
function IsDeadBetazoeymrv(query) { return query.deadcharacter == "BetaZoeyMRV"; }
function IsTeam4Betazoeymrv(query) { return query.name == "silver_betazoeymrv"; }
function SubjectIsBetazoeymrv(query) { return query.subject == "BetaZoeyMRV"; }
function SubjectIsNotBetazoeymrv(query) { return query.subject != "BetaZoeyMRV"; }
function FromIsBetazoeymrv(query) { return query.from == "BetaZoeyMRV"; }
function FromIsNotBetazoeymrv(query) { return query.from != "BetaZoeyMRV"; }
function Iswitch_aggro_onBetazoeymrv(query) { return query.witch_aggro_on == "BetaZoeyMRV"; }
function IsNotSaidBeenJockeyedBetazoeymrv(query) { return query.worldsaidbeenjockeyedbetazoeymrv != 1; }
function IsNotMentionedBetazoeymrvC6M2(query) { return query.worldmentionedbetazoeymrvc6m2 != 1; }
function IsBetazoeymrvIntroActor(query) { return query.introactor == "BetaZoeyMRV"; }
function IsDonorBetazoeymrv(query) { return query.itemdonor == "BetaZoeyMRV"; }
function IsNotDonorBetazoeymrv(query) { return query.itemdonor != "BetaZoeyMRV"; }
// function HasDonor(query) { return DirectorScript.IsDonorBiker(query) || DirectorScript.IsDonorBetazoeymrv(query) || DirectorScript.IsDonorNamVet(query) || DirectorScript.IsDonorManager(query) || DirectorScript.IsDonorCoach(query) || DirectorScript.IsDonorGambler(query) || DirectorScript.IsDonorMechanic(query) || DirectorScript.IsDonorProducer(query) || DirectorScript.IsDonorUnknown(query); }
function ConceptPlayerSuggestHealthBetazoeymrv(query) { return query.concept == "PlayerSuggestHealthBetazoeymrv"; }
function ConceptTakeShotgunGroovyBetazoeymrv(query) { return query.concept == "TakeShotgunGroovyBetazoeymrv"; }
function ConceptTakeShotgunGroovyBetazoeymrv2Biker(query) { return query.concept == "TakeShotgunGroovyBetazoeymrv2Biker"; }
function IsSmallTownBarricadeBetazoeymrv(query) { return query.worldsmalltownbarricadebetazoeymrv != 1; }
function PanicEventBetazoeymrv(query) { return query.whodidit == "BetaZoeyMRV"; }
function IsTriggeredByBetazoeymrv(query) { return query.triggeredby == "BetaZoeyMRV"; }
function IsNotSaidBetazoeymrvPounced(query) { return query.worldsaidbetazoeymrvpounced != 1; }
function IsNotSaidLaughBetazoeymrv(query) { return query.worldsaidlaughbetazoeymrv != 1; }
function IsNotSaidBetazoeymrvSuggestsCrane(query) { return query.worldsaidbetazoeymrvsuggestscrane != 1; }
function ConceptBetazoeymrvSuggestsCrane(query) { return query.concept == "BetazoeymrvSuggestsCrane"; }
function ConceptLaughBetazoeymrv(query) { return query.concept == "LaughBetazoeymrv"; }
function ConceptTakeShotgunGroovyBetazoeymrv(query) { return query.concept == "TakeShotgunGroovyBetazoeymrv"; }
function ConceptTakeShotgunGroovyBetazoeymrv2Biker(query) { return query.concept == "TakeShotgunGroovyBetazoeymrv2Biker"; }
function IsSmallTownBarricadeBetazoeymrv(query) { return query.worldsmalltownbarricadebetazoeymrv != 1; }
function PanicEventBetazoeymrv(query) { return query.whodidit == "BetaZoeyMRV"; }
// function PanicEventDS(query) { return DirectorScript.PanicEventCoach(query) || DirectorScript.PanicEventGambler(query) || DirectorScript.PanicEventMechanic(query) || DirectorScript.PanicEventProducer(query) || DirectorScript.PanicEventBiker(query) || DirectorScript.PanicEventNamVet(query) || DirectorScript.PanicEventManager(query) || DirectorScript.PanicEventBetazoeymrv(query); }
function IsTriggeredByBetazoeymrv(query) { return query.triggeredby == "BetaZoeyMRV"; }
function IsNotSaidBetazoeymrvPounced(query) { return query.worldsaidbetazoeymrvpounced != 1; }
function IsNotSaidLaughBetazoeymrv(query) { return query.worldsaidlaughbetazoeymrv != 1; }
function IsNotSaidBetazoeymrvSuggestsCrane(query) { return query.worldsaidbetazoeymrvsuggestscrane != 1; }
function ConceptBetazoeymrvSuggestsCrane(query) { return query.concept == "BetazoeymrvSuggestsCrane"; }
function ConceptLaughBetazoeymrv(query) { return query.concept == "LaughBetazoeymrv"; }

// ============================================================================================================================


